{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"advanced/","title":"Advanced Information","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>In this section you will find detailed information on how to use Formmask, how to tune a sample, building audiobanks, creating custom envelopes, injecting non-vanilla samples into Ocarina of Time and Majora's Mask, and more technical MIDI information to help you create a better sequence.</p>"},{"location":"advanced/#adsr","title":"ADSR","text":"<p>Learn how to make custom envelopes for instruments, drums, or sound effects to manipulate samples in Ocarina of Time and Majora's Mask.</p> <ul> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> </ul>"},{"location":"advanced/#custom-sample-injection","title":"Custom Sample Injection","text":"<p>Learn to create and inject custom instrument, drum, or sound effect samples into Ocarina of Time and Majora's Mask.</p> <ul> <li> Sample Injection Overview \u2013 Obtain basic knowledge of the files and tools you will be working with</li> <li> WAV File Conversion \u2013 Learn to convert WAV files into sample files compatible with Ocarina of Time and Majora's Mask</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> </ul>"},{"location":"advanced/#midi","title":"MIDI","text":"<p>Learn more technical information about MIDI to create better sequences.</p> <ul> <li> Advanced MIDI Overview \u2013 placeholder</li> <li> SysEx Messages \u2013 A brief summary of universal realtime SysEx messages and how to use them</li> <li> Registered Parameter Numbers \u2013 A brief summary of Registered Parameter Numbers and how to use them</li> <li> placeholder \u2013 placeholder</li> </ul>"},{"location":"advanced/formmask/","title":"Using Formmask","text":"<p>This page details how to use the Formmask feature added in <code>v1.15.0.21</code> of the Majora's Mask randomizer. Formmask is the ability to enable and disable specific sequence channels depending on Link's current form or state; this allows you to create more dynamic sequences than is normally possible in the vanilla game.</p> <p>A form refers to Link's different physical forms with the following being available with Formmask: Hylian, Deku, Goron, and Zora; with a state referring to the different game states with the following being available with Formmask: swimming, combat, Goron spike rolling, and riding Epona.</p> <p>Non-Useable Categories</p> <p>At the time of writing this Formmask does not currently work with fanfares or combat music, if you use formmask with them then the randomizer will just play all available channels instead, because of this it is discouraged to use formmask with any of the following categories:</p> Group CategoriesIndividual Categories Category Group Name <code>5</code> Action Cutscenes <code>7</code> Combat &amp; Boss Fights <code>8</code> Item Get, Minigame Win, Soaring <code>9</code> Game Over <code>10</code> Area Cleared Category Sequence Name Category Sequence Name <code>108</code> Fanfare: Event Failure [1] <code>13F</code> Fanfare: Goron Race Victory! <code>109</code> Fanfare: Event Failure [2] <code>141</code> Fanfare: Horse Race Victory! <code>119</code> Fanfare: Event Success! <code>152</code> Fanfare: Learned a Song! <code>11A</code> Battle: Regular Enemy <code>155</code> Fanfare: Song of Soaring <code>11B</code> Battle: Dungeon Boss <code>169</code> Battle: Majora's Wrath <code>120</code> Fanfare: Game Over! <code>16A</code> Battle: Majora's Incarnation <code>121</code> Fanfare: Boss Defeated! <code>16B</code> Battle: Majora's Mask <code>122</code> Fanfare: Get an Item! <code>177</code> Fanfare: Temple Appears! <code>124</code> Fanfare: Get a Heart Container! <code>178</code> Fanfare: Temple Clear (Short) [1] <code>137</code> Fanfare: Get a Mask! <code>179</code> Fanfare: Temple Clear (Long) [2] <code>138</code> Battle: Miniboss <code>17C</code> Fanfare: The Giants' Farewell! <code>139</code> Fanfare: Get a Heart Piece! <code>17E</code> Fanfare: The Moon Destroyed <code>13D</code> Fanfare: The Truth Revealed! \u2014 \u2014","tags":["Advanced"]},{"location":"advanced/formmask/#creating-a-formmask-file","title":"Creating a Formmask File","text":"<p>A <code>.formmask</code> file is just a <code>.json</code> (or <code>.txt</code>) file with its filename extension changed to <code>.formmask</code>. Inside the file is a single JSON array that contains all the necessary data for which channels to enable and disable when the conditions to do so are met. This file is packed into the root of an <code>.mmrs</code> file.</p> <p>Filename</p> <p>The filename itself uses the same naming as a sequence or audiobank file (e.g. <code>0x03.seq</code> will be <code>0x03.formmask</code>).</p>","tags":["Advanced"]},{"location":"advanced/formmask/#json-array-formatting","title":"JSON Array Formatting","text":"<p>The formatting for a JSON array is as follows:</p>  \u00a0Template \u00a0Example 1 \u00a0Example 2 <p> <pre><code>[\n    \"Channel 0\",\n    \"Channel 1\",\n    \"Channel 2\",\n    \"Channel 3\",\n    \"Channel 4\",\n    \"Channel 5\",\n    \"Channel 6\",\n    \"Channel 7\",\n    \"Channel 8\",\n    \"Channel 9\",\n    \"Channel 10\",\n    \"Channel 11\",\n    \"Channel 12\",\n    \"Channel 13\",\n    \"Channel 14\",\n    \"Channel 15\",\n    \"Cumulative States\"\n]\n</code></pre> </p> <p> <pre><code>[\n    \"All\",#(1)!\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"Swim\",#(2)!\n    \"Swim\",\n    \"All\",\n    \"Combat\",#(3)!\n    \"Combat\",\n    \"Combat\",\n    \"Swim\",\n    \"All\",\n    \"All\",\n    \"Epona, SpikeRolling\"#(4)!\n]\n</code></pre> </p> <ol> <li>Channels 0, 1, 2, 3, 4, 5, 6, 9, 14, and 15 are enabled when Link is any form (Hylian, Deku, Goron, or Zora), and all other channels will be disabled.</li> <li>Channels 7, 8, and 13 are enabled when Link is swimming and all other channels will be disabled.</li> <li>Channels 10, 11, and 12 are enabled when Link is in combat and all other channels will be disabled.</li> <li>When Link is in the Epona or SpikeRolling state all currently enabled channels will stay enabled; no new channels will enabled or disabled as no channel depends on these states to be enabled.</li> </ol> <p> <pre><code>[\n    \"All\",#(1)!\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"All\",\n    \"Swim\",#(2)!\n    \"All\",\n    \"Combat\",\n    \"All\",\n    \"All\",\n    \"Epona, SpikeRolling, Combat\"#(3)!\n]\n</code></pre> </p> <ol> <li>Channels 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14 and 15 are enabled when Link is any form (Hylian, Deku, Goron, or Zora), and all other channels will be disabled.</li> <li>Channel 11 is enabled when Link is swimming and all other channels will be disabled.</li> <li>When Link is in the Epona, SpikeRolling, or Combat states all currently enabled channels will stay enabled; if Link is in combat then channel 13 will be enabled alongside any other enabled channels.</li> </ol> <p>The first 16 array values are for the channels of your sequence, and the 17th array value is for cumulative states. Cumulative states applied to a sequence will cause the channels with cumulative states to continue playing with already playing channels; if a form or state is non-cumulative it will only play when Link is in that form or state.</p> <p>Info</p> <p>You can specify a channel and cumulative states to have multiple values. To do this simply add the values you want to use separated by a comma while still being contained within quotation marks (e.g. <code>\"state1, state2, state3\"</code>). These comma separated values don't need to have spaces between them.</p>","tags":["Advanced"]},{"location":"advanced/formmask/#allowed-form-state-values","title":"Allowed Form &amp; State Values","text":"<p>Below is a list of the forms and states available to be assigned via Formmask.</p> FormsStates Form Description <code>Human</code> The assigned channel will be enabled while Link is a Hylian <code>Deku</code> The assigned channel will be enabled whil Link is a Deku <code>Goron</code> The assigned channel will be enabled while Link is a Goron <code>Zora</code> The assigned channel will be enabled while Link is a Zora <code>All</code> The assigned channel will be enabled for all of Link's different forms State Description <code>Swim</code> The assigned channel will be enabled while Link is swimming in the water <code>Combat</code> The assigned channel will be enabled while Link is near or fighting an enemy <code>Epona</code> The assigned channel will be enabled while Link is riding Epona <code>SpikeRolling</code> The assigned channel will be enabled while Goron Link is rolling with spikes","tags":["Advanced"]},{"location":"advanced/formmask/#testing-a-formmask-sequence","title":"Testing a Formmask Sequence","text":"<p>To test Formmask when testing your song you must be on the file select screen of the game using the randomizer. To cycle through non-cumulative states you can use D-Pad Up and D-Pad Down, and to cycle through cumulative states you can use D-Pad Left and D-Pad Right.</p> <p>Info Needs confirmation</p> <p>For non-cumulative forms and states the cycle is: Human, then Goron, then Zora, then Deku, then Swim, then Combat, then Epona, then SpikeRolling.</p> <p>For cumulative states the cycle is: None, then Swim, then Combat, then Epona, then SpikeRolling.</p>","tags":["Advanced"]},{"location":"advanced/mus/","title":"Music Assembly Language","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>Warning</p> <p>Despite SEQ64 calling <code>.mus</code> files Music Macro Language (MML)<sup>1</sup>, they are not Music Macro Language. MML is well defined and is a sub-language of BASIC, however modern MML notation is quite different than the original MML's BASIC notation; <code>.mus</code> files are a sub-language of Assembly (ASM) and should avoid being named \"Music Macro Language\" and instead be named \"Music Assembly Language\".</p>"},{"location":"advanced/mus/#placeholder","title":"placeholder","text":"<p>placeholder</p> <p><code>notedvg</code> <code>notedv</code> <code>notevg</code> <code>snoted</code> <code>snotedef</code> <code>snotelast</code> <code>ldelay</code> <code>shortvel</code> <code>ltp</code> <code>shortdelay</code> <code>legatoon</code> <code>legatooff</code> <code>linst</code> <code>portamento</code> <code>portamentooff</code> <code>shortgate</code> <code>lpan</code> <code>lenvelope</code> <code>drumpanoff</code> <code>reverbphase</code> <code>lbend2</code> <code>lrelease</code> <code>shorttablevel</code> <code>shorttablegate</code> <code>cdelay</code> <code>loadspl</code> <code>startchan</code> <code>stcio</code> <code>ldcio</code> <code>subio</code> <code>ldio</code> <code>stio</code> <code>rstartlayer</code> <code>testlayer</code> <code>startlayer</code> <code>stoplayer</code> <code>dynstartlayer</code> <code>setfilter</code> <code>cleafilter</code> <code>copyfilter</code> <code>p2dyntable</code> <code>dyntable2p</code> <code>lddyn</code> <code>randp</code> <code>rand</code> <code>velrand</code> <code>gaterand</code> <code>chorus</code> <code>addp</code> <code>randaddp</code> <code>instr</code> <code>dyntable</code> <code>shorton</code> <code>shortoff</code> <code>dynsetdyntable</code> <code>bank</code> <code>sts</code> <code>sub</code> <code>and</code> <code>mutebhv</code> <code>lds</code> <code>ldi</code> <code>stopchan</code> <code>ldpi</code> <code>stps</code> <code>stereoheadseteffects</code> <code>noteallocpolicy</code> <code>relsustain</code> <code>pitchbend</code> <code>reverb</code> <code>vibfreq</code> <code>vibdepth</code> <code>release</code> <code>cenvelope</code> <code>ctp</code> <code>panmix</code> <code>cpan</code> <code>freqscale</code> <code>cvol</code> <code>cexp</code> <code>vibfreqenv</code> <code>vibdepthenv</code> <code>vibdelay</code> <code>dyncall</code> <code>reverbidx</code> <code>splvari</code> <code>ldcparams</code> <code>cparams</code> <code>notepriority</code> <code>halt</code> <code>bankinstr</code> <code>chanreset</code> <code>filgain</code> <code>cbend2</code> <code>testchan</code> <code>stopchan</code> <code>subio</code> <code>loadbank</code> <code>stio</code> <code>ldio</code> <code>startchan</code> <code>rstartchan</code> <code>loadseq</code> <code>unk_C4</code> <code>unk_C5</code> <code>unk_C6</code> <code>sub</code> <code>and</code> <code>ldi</code> <code>tblcall</code> <code>rand</code> <code>noteallocpolicy</code> <code>ldshorttablegate</code> <code>ldshorttablevel</code> <code>mutebhv</code> <code>mute</code> <code>mutescale</code> <code>disablechan</code> <code>initchan</code> <code>sexp</code> <code>sfade</code> <code>svol</code> <code>tempovar</code> <code>tempo</code> <code>stprel</code> <code>stp</code> <code>print</code> <code>unreservenotes</code> <code>rbltz</code> <code>rbeqz</code> <code>rjump</code> <code>bgez</code> <code>break</code> <code>loopend</code> <code>loop</code> <code>bltz</code> <code>beqz</code> <code>jump</code> <code>call</code> <code>delay</code> <code>yield</code> <code>end</code></p> <ol> <li> <p>For more information on Music Macro Language, please visit the Wikipedia article on it.\u00a0\u21a9</p> </li> </ol>"},{"location":"advanced/tuning/","title":"Sample Tuning","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details how sample tuning works in great detail for instruments, drums, and sound effects in Ocarina of Time and Majora's Mask so that you can ensure your samples will be properly tuned.</p>"},{"location":"advanced/tuning/#types-of-tuning","title":"Types of Tuning","text":"<p>In Ocarina of Time and Majora's Mask there are two different types of tuning, [Range-Based] tuning and Key-Based tuning. All instruments use [Range-Based] tuning, with all drums and sound effects using Key-Based tuning. The differences between these two types of tuning are explained in greater detail below.</p>"},{"location":"advanced/tuning/#range-based-tuning-relative","title":"[Range-Based] Tuning (Relative)","text":"<p>Attention</p> <p>Only Instruments use [Range-Based] tuning</p> <p>[Range-Based] tuning means that the sample's root key is tuned in relation to the tuning float of note 60 (C5) at 32000 Hz. This means that the lower the tuning float value the higher the note speed will be, and by extension the higher the note's perceived pitch will be; the higher the tuning float value the lower the note speed will be, and by extension the lower the note's perceived will be.</p> <p>So to get our sample's root key to the correct note speed we need to use the following calculation:</p> <p> \\(1 \\div Float = Note\\hspace{1 mm}Speed\\)</p> <p>As an example if our sample has a root key of 72 (C6) with a sample rate of 32000 Hz and we want it to play 60 (C5) then we need to achieve a note speed of 2 for our sample to be tuned to the correct pitch; to do this we divide 1 by 0.5, with 0.5 being the tuning float value for 72 (C6).</p> <p>Info</p> <p>For [Range-Based] tuning your note speeds are automatically calculated, as every instrument has a sample assigned to a range of specific notes, where the tuning float determines the sample root key's note speed in relation to 60 (C5).</p>"},{"location":"advanced/tuning/#key-based-tuning","title":"Key-Based Tuning","text":"<p>Attention</p> <p>Only Drums and Sound Effects use Key-Based tuning</p> <p>Key-Based tuning means that the sample's root key is tuned as if it's always 60 (C5) at 32000 Hz. This means that the lower the tuning float value the lower the note speed will be, and by extension the lower the note's perceived pitch will be; the hight the tuning float value the higher the note speed will be, and by extension the higher the note's perceived pitch will be.</p> <p>So to get our sample's root key to the correct note speed we need to use the following calculation:</p> <p> \\(1 \\times Float = Note\\hspace{1 mm}Speed\\)</p> <p>As an example if our sample has a root key of 72 (C6) with a sample rate of 32000 Hz and we want it to play 60 (C5) then we need to achieve a note speed of 0.5 for our sample to be tuned to the correct pitch; to do this we multiply 1 by 0.5, with 0.5 being the tuning float we would use as with \u2014 tuning the note speed is equal to the tuning float value.</p> <p>Info</p> <p>For Key-Based tuning your note speeds are manually caculated per key, as every drum and sound effect has a single sample assigned to a single specific key on the MIDI keyboard, where the tuning float is equal to the note speed, as the note speed of your sample's root key is always assumed to be equal to 60 (C5)'s note speed.</p>"},{"location":"advanced/tuning/#tuning-calculation","title":"Tuning Calculation","text":"<p>\\((Root\\hspace{1 mm}Key-Coarse\\hspace{1 mm}Tune)-(\\frac{Fine\\hspace{1 mm}Tune}{100})=-24\\log_4(Float)+60\\)</p> <p>\\(x=(Root\\hspace{1 mm}Key-Coarse\\hspace{1 mm}Tune)-(\\frac{Fine\\hspace{1 mm}Tune}{100})\\)</p> <p>\\(y=x-60\\)</p> <p>\\(z=y\\div-24\\)</p> <p>\\(Float=4^z\\)</p> <p>\\(Float=2^\\frac{60-(Root\\hspace{1 mm}Key-Coarse\\hspace{1 mm}Tune)-(\\frac{Fine\\hspace{1 mm}Tune}{100})}{12}\\)</p> <p>\\(1\\div Float = Note\\hspace{1 mm}Speed\\)</p> <p>\\(1\\times Float = Note\\hspace{1 mm}Speed\\)</p> <p>\\(\\frac{1}{12}\\)</p> <p>\\(\\frac{1}{100}\\)</p> <p>\\(\\frac{44100}{48000}=\\frac{441}{480}=\\frac{147}{160}\\)</p> <p>\\(\\frac{L}{M}\\)</p> <p>\\(f(x)=Float\\times\\frac{32000}{x}\\)</p> <p>\\(f(x)=Float\\div\\frac{32000}{x}\\)</p>"},{"location":"advanced/tuning/#sample-rate-correction","title":"Sample Rate Correction","text":"<p>Ocarina of Time and Majora's Mask have a master sample rate, also known as hardware rate, of 32000 Hz that affects how all samples in the game are played. The games will always play samples as is they were sampled at the master sample rate which will affect the tuning of samples.</p> <p>In the images below you can see a visual representation of how a sample's speed will be affected. All the samples are assumed to be the same sound sample recorded at the same pitch, but are resampled at varying sample rates.</p> Sample at 16000 HzSample at 32000 HzSample at 64000 Hz <p> </p> <p>With a sample rate of 16000 Hz, half the master sample rate, and tuned to the root key without any form of sample rate correction the sample will end up playing at twice the note speed it should play therefore causing the pitch to be too high.</p> <p> </p> <p>With a sample rate of 32000 Hz, matching the master sample rate, and tuned to the root key without any form of sample rate correction the sample will end up playing at the exact note speed it should play therefore causing the pitch to be unaltered.</p> <p> </p> <p>With a sample rate of 64000 Hz, twice the master sample rate, and tuned to the root key without any form of sample rate correction the sample will end up playing at half the note speed it should play therefore causing the pitch to be too low.</p> <p>The reason a sample with a sample rate of 64000 Hz will play at half the note speed when played back in-game is because it has twice the amount of samples per second, and vice versa for a sample with a sample rate of 16000 Hz as it has half the samples per second, so this means that the samples will take a longer or shorter amount of time to finish when played back at the master sample rate. With sample rate correction you increase or decrease the sample's note speed so that it matches the expected note speed of a sample at 32000 Hz.</p>"},{"location":"advanced/adsr/abenvelope/","title":"Audiobank Envelopes","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"advanced/adsr/envelopes/","title":"Custom Envelopes","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"advanced/adsr/envelopes/#custom-envelopes","title":"Custom Envelopes","text":"C \u00a0XML <pre><code>EnvelopePoint gDefaultEnvelope[] = {\n    { 1, 32000 },\n    { 1000, 32000 },\n    { ADSR_HANG, 0 },\n    { ADSR_DISABLE, 0 },\n};\n</code></pre> <pre><code>&lt;item name=\"gDefaultEnvelope\"&gt;\n  &lt;struct name=\"ABEnvelope\"&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"1\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"32000\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"1000\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"32000\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"-1\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n  &lt;/struct&gt;\n&lt;/item&gt;\n</code></pre> <p>Below is a graphical representation of the envelope of the Piano instrument, the ADSR values for Ocarina of Time and Majora's Mask are linear values with the time being in microseconds. A value of <code>1</code> for your envelope data is equal to ~4000 \u00b5s (0.004 s).</p> <p>In the example below we will assume the sample's waveform is 2 s in total length, so over 8000 \u00b5s (0.008 s) the sample goes from zero amplitude to ~99% amplitude, then once it reaches ~99% amplitude it returns to zero amplitude over the course of 960000 \u00b5s (0.96 s) and remains at zero amplitude for 4000 \u00b5s (0.004 s) and then it will remain at zero amplitude indefinitely due to the value of <code>-1</code> being the special command <code>ADSR_HANG</code>.</p> <pre><code>#define ADSR_DISABLE 0\n#define ADSR_HANG -1\n#define ADSR_GOTO -2\n#define ADSR_RESTART -3\n</code></pre>  \u00a0ADSR_DISABLE \u00a0ADSR_HANG \u00a0ADSR_GOTO \u00a0ADSR_RESTART <pre><code>case ADSR_STATUS_DISBLED:\n    return 0.0f;\n</code></pre> <pre><code>case ADSR_HANG:\n    break;\n</code></pre> <pre><code>case ADSR_GOTO:\n    adsr-&gt;envelopeIndex = adsr-&gt;envelope[adsr-&gt;envelopeIndex].arg;\n    goto retry;\n</code></pre> <pre><code>case ADSR_RESTART:\n    adsr-&gt;action.s.status = ADSR_STATUS_INITIAL;\n    break;\n</code></pre>  \u00a0C \u00a0XML <pre><code>EnvelopePoint pianoEnv[4] = {\n  { 2, 32700 },\n  { 229, 0 },\n  { 1, 0 },\n  { -1, 0 },\n};\n</code></pre> <pre><code>&lt;item name=\"Piano Envelope\"&gt;\n  &lt;struct name=\"ABEnvelope\"&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"2\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"32000\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"229\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"1\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n    &lt;field name=\"Delay\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"-1\"/&gt;\n    &lt;field name=\"Argument\" datatype=\"int16\" ispointer=\"0\"\n           isarray=\"0\" meaning=\"none\" value=\"0\"/&gt;\n  &lt;/struct&gt;\n&lt;/item&gt;\n</code></pre> <p> </p> AttackDecaySustainReleaseHold <p> </p> <p>Attack refers to the time it takes from when a key is first pressed the sound of a sample to go from zero amplitude to the max attack amplitude. The longer your attack is the longer it will take for the sound to fade in to the max attack amplitude from zero amplitude.</p> <p> </p> <p>Decay refers to the time it takes the sound of a sample to go from the max attack amplitude to the sustain amplitude. The longer your decay is the longer it will take for the sound to decrease in amplitude from the max attack amplitude to the sustain amplitude.</p> <p> </p> <p>Sustain refers to the amplitude level the sound of a sample will remain at so long as the note is being held. The higher your sustain is the less of a decrease your amplitude will have from the max attack amplitude.</p> <p> </p> <p>Release refers to the time it takes from when a key is released to the sound of a sample going from sustain amplitude to return to zero amplitude. The longer your release is the longer it will take for the sound to fade out from your sustain amplitude to zero amplitude.</p> <p> </p> <p>Hold refers to the time a note will be held at max attack amplitude before beginning to decay to the sustain amplitude. The longer your hold is the longer your sound will remain at max attack amplitude before beginning to decay to sustain amplitude.</p> <p>Ocarina of Time and Majora's Mask use a multi-point envelope structure, however instruments and drums are limited to four data points inside of an audiobank (sound effects cannot use envelopes from the audiobank), but the number of data points allowed with a sequence embedded envelope should be higher although it is unknown how much higher it can be but looking through the ADSR code from decomp it can be assumed to be as long as you want, given you have enough data to make the sequence fit into the audio buffer.</p>"},{"location":"advanced/adsr/seqenvelope/","title":"Sequence Envelopes","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"advanced/audiobanks/building-audiobanks/","title":"Building a Custom Audiobank","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details building an audiobank completely from scratch in C, XML, and as a Binary file.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#data-ordering","title":"Data Ordering","text":"<p>For C and Binary, items don't need to be in any particular order except for the header data; so long as all the addresses match the order of data shouldn't matter(?). For XML, the order is very strict due to SEQ6 hardcoding the data format; addresses can be left as zeroed values, SEQ64 will automatically assign addresses when overwriting an audiobank, however indexes must be correct.</p> Important XML Info <p>For XML audiobanks, all your structures must be contained within a bank that contains some metadata information tag: <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- Above is the XML declaration, do not remove it --&gt;\n\n&lt;bank NUM_INST=\"0\" NUM_DRUM=\"0\" NUM_SFX=\"0\" ATnum=\"0\"&gt;\n  &lt;!-- All your audiobank information is contained within the tags--&gt;\n&lt;/bank&gt;\n</code></pre></p> <p>You audiobanks must also be structured in a very specific way, otherwise SEQ64 will not be able to read your audiobank and will throw errors: <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n\n&lt;bank NUM_INST=\"0\" NUM_DRUM=\"0\" NUM_SFX=\"0\" ATnum=\"0\"&gt;\n  &lt;!-- Audiobank Index Entry --&gt;\n  &lt;abindexentry&gt;\n    &lt;!-- Insert your structure here --&gt;\n  &lt;/abindexentry&gt;\n  &lt;!-- Audiobank Header --&gt;\n  &lt;abheader&gt;\n    &lt;!-- Insert your structure here --&gt;\n  &lt;/abheader&gt;\n  &lt;!-- ABBank --&gt;\n  &lt;abbank&gt;\n    &lt;!-- Insert your structure here --&gt;\n  &lt;/abbank&gt;\n  &lt;!-- Audiobank Drum List --&gt;\n  &lt;abdrumlist&gt;\n    &lt;!-- Insert your drum list here --&gt;\n  &lt;/abdrumlist&gt;\n  &lt;!-- Audiobank SFX List --&gt;\n  &lt;absfxlist&gt;\n    &lt;!-- Insert your sfx list here --&gt;\n  &lt;/absfxlist&gt;\n  &lt;!-- Audiobank Instruments --&gt;\n  &lt;instruments&gt;\n    &lt;!-- Insert your item(s) here --&gt;\n  &lt;/instruments&gt;\n  &lt;!-- Audiobank Drums --&gt;\n  &lt;drums&gt;\n    &lt;!-- Insert your tem(s) here --&gt;\n  &lt;/drums&gt;\n  &lt;!-- For OOT and MM leave this as-is --&gt;\n  &lt;sfx/&gt;\n  &lt;!-- Audiobank Envelope --&gt;\n  &lt;envelopes&gt;\n    &lt;!-- Insert your item(s) here --&gt;\n  &lt;/envelopes&gt;\n  &lt;!-- Audiobank Samples --&gt;\n  &lt;samples&gt;\n    &lt;!-- Insert your item(s) here --&gt;\n  &lt;/samples&gt;\n  &lt;!-- Audiobank Codebooks --&gt;\n  &lt;aladpcmbooks&gt;\n    &lt;!-- Insert your item(s) here --&gt;\n  &lt;/aladpcmbooks&gt;\n  &lt;!-- Audiobank Loopbooks --&gt;\n  &lt;aladpcmloops&gt;\n    &lt;!-- Insert your item(s) here --&gt;\n  &lt;/aladpcmloops&gt;\n&lt;/bank&gt;\n</code></pre></p> <p>Warning</p> <p>Audiobanks as they are used in-game are slightly different than the structure of <code>soundfont.h</code> used by decomp. Tools may also use different naming and formatting and allow for more or less flexibility, this page must be edited again to accomodate for any new <code>C</code> based tools that may and will eventually arise from decomp.</p> <p> C Code Warning</p> <p><code>C</code> code for audiobanks may need to be confirmed and edited depending on the tools being worked with.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-metadata","title":"Audiobank Metadata","text":"C \u00a0XML \u00a0Binary <pre><code>AudiobankIndexEntry Metadata = {\n  addr = 0,         // not used for bank creation?\n  len = 0,          // not used for bank creation?\n  sampleMedium = 0, // not used for bank creation?\n  seqPlayer = 2,    // not used for bank creation?\n  tablenum = 0,     // not used for bank creation?\n  fontID = 255,     // not used for bank creation?\n  numInst = 0,      // not used for bank creation?\n  numDrum = 0,      // not used for bank creation?\n  numSfx = 0,       // not used for bank creation?\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Index Entry --&gt;\n&lt;abindexentry&gt;\n  &lt;!-- ABIndexEntry Struct --&gt;\n  &lt;struct name=\"ABIndexEntry\"&gt;\n    &lt;!-- Audiobank Address in the Audiobank Index --&gt;\n    &lt;field name=\"addr\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Bank (in Audiobank)\"\n           ptrto=\"ABHeader\" value=\"0\"/&gt;\n    &lt;!-- Size of the Audiobank in Bytes --&gt;\n    &lt;field name=\"len\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\" meaning=\"Bank Length\"\n           value=\"0\"/&gt;\n    &lt;!-- Sample Mediums: 0 = RAM, 1 = UNK, 2 = ROM, 3 = Disk Drive, 5 = RAM (Unloaded) --&gt;\n    &lt;field name=\"sampleMedium\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"none\"\n           defaultval=\"2\" value=\"2\"/&gt;\n    &lt;!-- Sequence Players: 0 = SFX, 1 = Fanfares, 2 = BGM, 3 = Cutscene SFX --&gt;\n    &lt;field name=\"seqPlayer\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"none\"\n           defaultval=\"2\" value=\"2\"/&gt;\n    &lt;!-- Audio Tables: 0 = @000000, 1 = @000000, 2 = @538CC0 --&gt;\n    &lt;field name=\"tablenum\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"Sample Table number\"\n           value=\"1\"/&gt;\n    &lt;!-- All vanilla audiobanks have 0xFF as their fontId --&gt;\n    &lt;field name=\"fontId\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n           defaultval=\"255\" value=\"255\"/&gt;\n    &lt;!-- Defines amount of instruments inside the Audiobank --&gt;\n    &lt;field name=\"NUM_INST\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"NUM_INST\"\n           value=\"1\"/&gt;\n    &lt;!-- Defines amount of drums inside the Audiobank --&gt;\n    &lt;field name=\"NUM_DRUM\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"NUM_DRUM\"\n           value=\"0\"/&gt;\n    &lt;!--\n        0x00 has a value of 1 for this, and is the only audiobank containing a value other than\n        zero for it; Sauraen's audiobank.h file does not include this value in the index structure.\n        Decomp does not include this value in the index structure.\n        OoT 0x00 has a value of 0 for this... ???\n    --&gt;\n    &lt;field name=\"unknownG\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n           defaultval=\"0\" value=\"0\"/&gt;\n    &lt;!-- Defines amount of sound effects inside the Audiobank --&gt;\n    &lt;field name=\"NUM_SFX\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"NUM_SFX\"\n           value=\"0\"/&gt;\n  &lt;/struct&gt;\n&lt;/abindexentry&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n00 00 00 00 | ss tt uu vv ww xx yy zz\n</code></pre> <ul> <li><code>ss</code> = Sample medium (<code>sampleMedium</code>) for the samples the audiobank uses</li> <li><code>tt</code> = Sequence player (<code>seqPlayer</code>) the audiobank uses</li> <li><code>uu</code> = Audiotable (<code>tablenum</code>) the audiobank is in</li> <li><code>vv</code> = \"Soundfont ID\" (<code>fontID</code>) of the audiobank</li> <li><code>ww</code> = Number of instrument (<code>NUM_INST</code>) in the audiobank</li> <li><code>xx</code> = Number of drums (<code>NUM_DRUM</code>) in the audiobank</li> <li><code>yy</code> = Unknown value</li> <li><code>zz</code> = Number of sound effects (<code>NUM_SFX</code>) in the audiobank</li> </ul> <p>Unknown Value</p> <p>It is unknown what <code>yy</code> is however Majora's Mask's audiobank 0x00 has a value of 1 for <code>yy</code> with every other audiobank having a value of 0 for <code>yy</code>, and for Ocarina of Time has a value of <code>0</code> for <code>yy</code> for every audiobank.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-header","title":"Audiobank Header","text":"C \u00a0XML \u00a0Binary <pre><code>#include \"custom_audiobank.h\" // include extern\n\n/* Address: 0x00 */\nAudiobank CustomBank = {\n  drums = DrumList,    // Pointer to Drum List\n  sfx = NULL,          // Pointer to SFX List\n  instruments = {      // Instrument List is built into the header\n    &amp;InstName,         // Pointer to inst\n    NULL,              // Insert \"NULL\" when there is no inst\n  }\n};\n</code></pre> <pre><code>&lt;!-- ABHeader --&gt;\n&lt;abheader&gt;\n  &lt;!-- ABHeader Struct --&gt;\n  &lt;struct name=\"ABheader\"&gt;\n&lt;/abheader&gt;\n&lt;!--ABBank --&gt;\n&lt;abbank&gt;\n  &lt;!--ABBank Struct --&gt;\n  &lt;struct name=\"ABBank\"&gt;\n    &lt;!-- Pointer to ABDrumlist--&gt;\n    &lt;field name=\"drumptr\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Drum List\"\n           ptrto=\"ABDrumList\" value=\"0\"/&gt;\n    &lt;!-- Pointer to ABSFXList --&gt;\n    &lt;field name=\"sfxptr\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr SFX List\"\n           ptrto=\"ABSFXList\" value=\"0\"/&gt;\n    &lt;!-- Audiobank Instrument List --&gt;\n    &lt;field name=\"instlist\" datatype=\"uint32\" ispointer=\"1\" isarray=\"1\" meaning=\"List of Ptrs to Insts\"\n           ptrto=\"ABInstrument\" arraylenvar=\"NUM_INST\"&gt;\n      &lt;!-- Instrument Pointer --&gt;\n      &lt;element datatype=\"uint32\" ispointer=\"1\" ptrto=\"ABInstrument\" value=\"0\"\n              index=\"0\"/&gt;\n      &lt;!-- Add more instrument pointers here --&gt;\n    &lt;/field&gt;\n  &lt;/struct&gt;\n&lt;/abbank&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n00 00 00 00 | xx xx xx xx yy yy yy yy zz zz zz zz -- -- -- --\n</code></pre> <ul> <li><code>xx xx xx xx</code> = Drum List pointer address</li> <li><code>yy yy yy yy</code> = SFX List pointer address</li> <li><code>zz zz zz zz</code> = Instrument address pointer (<code>uint32</code>), there are as many address pointers as there are instruments defined by <code>NUM_INST</code></li> <li><code>--</code> = Padding to byte 16 for alignment</li> </ul> <p>Instrument List</p> <p>The \"Instrument List\" is built directly into the audiobank header, so instrument address pointers begin immediately after the SFX List.</p> <p>NULL Address Pointer</p> <p>Addresses that have no information pointed to will be zeroed out, in this case it's important to pay attention to <code>NUM_INST</code>, <code>NUM_DRUM</code>, and <code>NUM_SFX</code> as they define how many addresses there will be in each pointer list; this is important to know because padding is also represented by zero values.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-drum-list","title":"Audiobank Drum List","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address: 0x00 */\nDrum* DrumList[64] __attribute__((aligned(16))) = {\n  &amp;DrumName, // Pointer to Drum\n  NULL,      // Insert \"NULL\" when there is no drum\n};\n</code></pre> <pre><code>&lt;!--Audiobank Drum List --&gt;\n&lt;abdrumlist address=\"80\"&gt;\n  &lt;!--ABDrumList Struct --&gt;\n  &lt;struct name=\"ABDrumList\"&gt;\n    &lt;field name=\"drumlist\" datatype=\"uint32\" ispointer=\"1\" isarray=\"1\" meaning=\"List of Ptrs to Drums\"\n           ptrto=\"ABDrum\" arraylenvar=\"NUM_DRUM\"&gt;\n      &lt;!-- INDEX 00 (MIDI Drum Note 21:A1) --&gt;\n      &lt;element datatype=\"uint32\" ispointer=\"1\" ptrto=\"ABDrum\" value=\"00\" index=\"0\"/&gt;\n      &lt;!-- INDEX 01 (MIDI Drum Note 22:A#1) --&gt;\n      &lt;element datatype=\"uint32\" ispointer=\"1\" ptrto=\"ABDrum\" value=\"0\" index=\"-1\"/&gt;\n      &lt;!-- Add more drum pointer elements here --&gt;\n    &lt;/field&gt;\n  &lt;/struct&gt;\n&lt;/abdrumlist&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | xx xx xx xx -- -- -- -- -- -- -- -- -- -- -- --\n</code></pre> <ul> <li><code>xx xx xx xx</code> = Drum address pointer, there are as many address pointers as there are drums defined by <code>NUM_DRUM</code></li> <li><code>--</code> = Padding to byte 16 for alignment</li> </ul> <p>NULL Address Pointer</p> <p>Addresses that have no information pointed to will be zeroed out, in this case it's important to pay attention to <code>NUM_INST</code>, <code>NUM_DRUM</code>, and <code>NUM_SFX</code> as they define how many addresses there will be in each pointer list; this is important to know because padding is also represented by zero values.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-instruments","title":"Audiobank Instruments","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address: 0x10 */\nInstrument InstName = {\n  relocOffset = 0,         // I forget what this does...\n  low_mid_split = 0,       // Max key for low sample and min key for mid sample\n  mid_high_split = 127,    // Max key for mid sample and min key for high sample\n  decayIndex = 0,          // Also known as release rate\n  lowNotesSound = {\n    sample = &amp;SoundSample, // Pointer to sample\n    tuning = 2.0f,         // Tuning float value\n  },\n  midNotesSound = {\n    sample = &amp;SoundSample, // Pointer to sample\n    tuning = 1.0f,         // Tuning float value\n  },\n  highNotesSound = {\n    sample = &amp;SoundSample, // Pointer to sample\n    tuning = 0.5f,         // Tuning float value\n  },\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Instruments --&gt;\n&lt;instruments&gt;\n  &lt;!-- Instrument Item --&gt;\n  &lt;item address=\"0\" name=\"Instrument Name\" map=\"program\" program=\"0\"&gt;\n    &lt;!-- ABInstrument Struct --&gt;\n    &lt;struct name=\"ABInstrument\"&gt;\n      &lt;!-- Relocation Offset --&gt;\n      &lt;field name=\"relocOffset\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n            value=\"0\"/&gt;\n      &lt;!-- Low Sample max key, Mid Sample min key --&gt;\n      &lt;field name=\"Low/Mid Split\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\"\n            meaning=\"Split Point 1\" value=\"0\"/&gt;\n      &lt;!-- Mid Sample max key, High Sample min key --&gt;\n      &lt;field name=\"Mid/High Split\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\"\n            meaning=\"Split Point 2\" value=\"127\"/&gt;\n      &lt;!-- Decay Index (Release Rate) --&gt;\n      &lt;field name=\"Release Rate\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\"\n            meaning=\"Release Rate\" value=\"255\"/&gt;\n      &lt;!-- Envelope Pointer --&gt;\n      &lt;field name=\"Envelope Pointer\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Envelope\"\n             ptrto=\"ABEnvelope\" value=\"0\" index=\"0\"/&gt;\n      &lt;!-- Sample Pointer Array --&gt;\n      &lt;field name=\"Sample Pointer Array\" datatype=\"ABSound\" ispointer=\"0\" isarray=\"1\" meaning=\"List of 3 Sounds for Splits\"\n            arraylenfixed=\"3\"&gt;\n        &lt;element datatype=\"ABSound\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ABSound\"&gt;\n            &lt;!-- Low Sample Pointer --&gt;\n            &lt;field name=\"Sample Pointer (Low)\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Sample\"\n                  ptrto=\"ABSample\" value=\"0\" index=\"-1\"/&gt;\n            &lt;!-- Low Sample Tuning Float Value --&gt;\n            &lt;field name=\"Tuning\" datatype=\"float32\" ispointer=\"0\" isarray=\"0\" meaning=\"Tuning Float\"\n                  value=\"0\"/&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n        &lt;element datatype=\"ABSound\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ABSound\"&gt;\n            &lt;!-- Mid Sample Pointer --&gt;\n            &lt;field name=\"Sample Pointer (Mid)\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Sample\"\n                  ptrto=\"ABSample\" value=\"0\" index=\"0\"/&gt;\n            &lt;!-- Mid Sample Tuning Float Value--&gt;\n            &lt;field name=\"Tuning\" datatype=\"float32\" ispointer=\"0\" isarray=\"0\" meaning=\"Tuning Float\"\n                  value=\"1\"/&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n        &lt;element datatype=\"ABSound\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ABSound\"&gt;\n            &lt;!-- High Sample Pointer --&gt;\n            &lt;field name=\"Sample Pointer (High)\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr Sample\"\n                  ptrto=\"ABSample\" value=\"0\" index=\"-1\"/&gt;\n            &lt;!-- High Sample Tuning Float Value --&gt;\n            &lt;field name=\"Tuning\" datatype=\"float32\" ispointer=\"0\" isarray=\"0\" meaning=\"Tuning Float\"\n                  value=\"0\"/&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n      &lt;/field&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Insert more instrument items here --&gt;\n&lt;/instruments&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | pp qq rr ss tt tt tt tt uu uu uu uu vv vv vv vv\n## ## ## ## | ww ww ww ww xx xx xx xx yy yy yy yy zz zz zz zz\n</code></pre> <ul> <li><code>pp</code> = Relocation offset</li> <li><code>qq</code> = Low sample max key and mid sample min key</li> <li><code>rr</code> = Mid sample max key and high sample min key</li> <li><code>ss</code> = Decay index</li> <li><code>tt tt tt tt</code> = Envelope pointer address</li> <li><code>uu uu uu uu</code> = Low sample pointer address</li> <li><code>vv vv vv vv</code> = Low sample tuning float value</li> <li><code>ww ww ww ww</code> = Mid sample pointer address</li> <li><code>xx xx xx xx</code> = Mid sample tuning float value</li> <li><code>yy yy yy yy</code> = High sample pointer address</li> <li><code>zz zz zz zz</code> = High sample tuning float value</li> </ul>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-drums","title":"Audiobank Drums","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address: 0x00 */\nDrum DrumName = {\n  decayIndex = 0,           // Also known as Release Rate\n  pan = 0,                  // Used when 0xDC is 0\n  relocOffset = 0,          // I forget what this does...\n  envelope = EnvelopeName,  // Pointer to Envelope\n  sound = {\n    sample = &amp;SoundSample,  // Pointer to sample\n    tuning = 1.0f,          // Tuning float value\n  },\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Drums --&gt;\n&lt;drums&gt;\n&lt;!-- Drum Item --&gt;\n  &lt;item address=\"0\" name=\"Drum Name\"&gt;\n    &lt;!-- ABDrum Struct --&gt;\n    &lt;struct name=\"ABDrum\"&gt;\n      &lt;!-- Decay Index (Release Rate) --&gt;\n      &lt;field name=\"Release Rate\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"Release Rate\" value=\"255\"/&gt;\n      &lt;!-- Drum Pan (used when 0xDC is 0)--&gt;\n      &lt;field name=\"Pan\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"Pan\"\n             value=\"0\"/&gt;\n      &lt;!-- Unknown (one of the two values is relocOffset) --&gt;\n      &lt;field name=\"unknown3\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n             defaultval=\"0\" value=\"0\"/&gt;\n      &lt;field name=\"unknown4\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n             defaultval=\"0\" value=\"0\"/&gt;\n      &lt;field name=\"Drum Sound\" datatype=\"ABSound\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"Drum Sound\" value=\"0\"&gt;\n        &lt;struct name=\"ABSound\"&gt;\n          &lt;!-- Drum Sample Pointer --&gt;\n          &lt;field name=\"Sample Pointer\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\"\n                 meaning=\"Ptr Sample\" ptrto=\"ABSample\" value=\"128\" index=\"0\"/&gt;\n          &lt;!-- Sample Tuning Float Value --&gt;\n          &lt;field name=\"Tuning\" datatype=\"float32\" ispointer=\"0\" isarray=\"0\" meaning=\"Tuning Float\"\n                 value=\"1\"/&gt;\n        &lt;/struct&gt;\n      &lt;/field&gt;\n      &lt;!-- Envelope Pointer --&gt;\n      &lt;field name=\"Envelope Pointer\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\"\n             meaning=\"Ptr Envelope\" ptrto=\"ABEnvelope\" value=\"112\" index=\"0\"/&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Add more drum items here --&gt;\n&lt;/drums&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | tt uu vv ww xx xx xx xx yy yy yy yy zz zz zz zz\n</code></pre> <ul> <li><code>tt</code> = Decay index</li> <li><code>uu</code> = Drum pan</li> <li><code>vv</code> = Unknown value</li> <li><code>ww</code> = Unknown value</li> <li><code>xx xx xx xx</code> = Sample pointer address</li> <li><code>yy yy yy yy</code> = Sample tuning float value</li> <li><code>zz zz zz zz</code> = Envelope pointer address</li> </ul> <p>Unknown Value</p> <p>One of these unknown values is the relocation offset, however the other value is completely unknown.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-envelopes","title":"Audiobank Envelopes","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address: 0x00 */\n// can delay and arg be left out and just have values like gDefaultEnvelope?\nEnvelopePoint EnvelopeName[4] = {\n  { 2, 32700 },     // Attack Phase\n  { 1, 32700 },     // Decay or Hold Phase\n  { 32700, 29430 }, // Decay or Sustain Phase \n  { -1, 0     },    // Sustain Phase\n};\n</code></pre> <p>Warning</p> <p>Envelopes inside of an audiobank can only be four values long!</p> <pre><code>&lt;!-- Audiobank Envelopes --&gt;\n&lt;envelopes&gt;\n  &lt;!-- Envelope Item --&gt;\n  &lt;item address=\"0\" name=\"Envelope Name\"&gt;\n    &lt;!-- ABEnvelope Struct --&gt;\n    &lt;struct name=\"ABEnvelope\"&gt;\n      &lt;!-- Delay Value 1 (Time) --&gt;\n      &lt;field name=\"delay1\" datatype=\"int16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"2\"/&gt;\n      &lt;!-- Argument Value 1 (Amplitude) --&gt;\n      &lt;field name=\"arg1\" datatype=\"uint16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"32700\"/&gt;\n      &lt;!-- Delay Value 2 (Time) --&gt;\n      &lt;field name=\"delay2\" datatype=\"int16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"298\"/&gt;\n      &lt;!-- Argument Value 2 (Amplitude) --&gt;\n      &lt;field name=\"arg2\" datatype=\"uint16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"0\"/&gt;\n      &lt;!-- Delay Value 2 (Time) --&gt;\n      &lt;field name=\"delay3\" datatype=\"int16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"1\"/&gt;\n      &lt;!-- Argument Value 3 (Amplitude) --&gt;\n      &lt;field name=\"arg3\" datatype=\"uint16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"none\" value=\"0\"/&gt;\n      &lt;!-- Delay Value 4 (Time) --&gt;\n      &lt;field name=\"delay4\" datatype=\"int16\" ispointer=\"0\" isarray=\"0\" meaning=\"none\"\n             value=\"-1\"/&gt;\n      &lt;!-- Argument Value 4 (Amplitude) --&gt;\n      &lt;field name=\"arg4\" datatype=\"uint16\" ispointer=\"0\" isarray=\"0\" meaning=\"none\"\n             value=\"0\"/&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Add more envelope items here --&gt;\n&lt;/envelopes&gt;\n</code></pre> <p>Warning</p> <p>Envelopes inside of an audiobank can only be four values long!</p> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | ss ss tt tt uu uu vv vv ww ww xx xx yy yy zz zz\n</code></pre> <ul> <li><code>ss ss</code> = Envelope delay value 1</li> <li><code>tt tt</code> = Envelope argument value 1</li> <li><code>uu uu</code> = Envelope delay value 2</li> <li><code>vv vv</code> = Envelope argument value 2</li> <li><code>ww ww</code> = Envelope delay value 3</li> <li><code>xx xx</code> = Envelope argument value 3</li> <li><code>yy yy</code> = Envelope delay value 4</li> <li><code>zz zz</code> = Envelope argument value 4</li> </ul> <p>Warning</p> <p>Envelopes inside of an audiobank can only be four values long!</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-samples","title":"Audiobank Samples","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address: */\nSample SoundSample = {\n  codec = 0,                  // I forget what this does...\n  medium = 0,                 // Location of the sample data\n  unk_bit26 = 0,              // Unknown\n  relocOffset = 0,            // I forget what this does...\n  size = 0,                   // Size of the sample in bytes\n  sampleAddr = (u8*)0,        // Address of the sample\n  loopbook = &amp;SampleLoopbook, // Pointer to loopbook\n  codebook = &amp;SampleCodebook, // Pointer to codebook\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Samples --&gt;\n&lt;samples&gt;\n  &lt;!-- Sample Item --&gt;\n  &lt;item address=\"128\" name=\"SAMPLE NAME\"&gt;\n    &lt;!--ABSample Struct --&gt;\n    &lt;struct name=\"ABSample\"&gt;\n      &lt;!--\n          One unknown value should contain data for a sample medium, and another for the codec;\n          there should also be a value for a relocation offset and unk_bit26 (defines used samples?).\n          Not every field needs to be present?\n          Sauraen's audiobank.h structure includes the codec, medium, relocation offset, and unk_bit26.\n          Decomp's structure includes the codec, medium, relocation offset, and unk_bit26.\n      --&gt;\n      &lt;field name=\"unknown1\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n             value=\"0\"/&gt;\n      &lt;field name=\"unknown2\" datatype=\"uint8\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n             value=\"0\"/&gt;\n      &lt;!-- Sample Size in Bytes --&gt;\n      &lt;field name=\"Sample Size (ROM Insert Size)\" datatype=\"uint16\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"Sample Length\" value=\"0\"/&gt;\n      &lt;!-- Sample Address Pointer --&gt;\n      &lt;field name=\"Sample Address\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"Sample Address (in Sample Table)\" ptrto=\"ATSample\" value=\"0\"/&gt;\n      &lt;!-- Sample Loopbook Pointer --&gt;\n      &lt;field name=\"Loopbook\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr ALADPCMLoop\"\n             ptrto=\"ALADPCMLoop\" value=\"0\" index=\"0\"/&gt;\n      &lt;!-- Sample Codebook Pointer --&gt;\n      &lt;field name=\"Codebook\" datatype=\"uint32\" ispointer=\"1\" isarray=\"0\" meaning=\"Ptr ALADPCMBook\"\n             ptrto=\"ALADPCMBook\" value=\"0\" index=\"0\"/&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Add more sample items here --&gt;\n&lt;/samples&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | uu vv ww ww xx xx xx xx yy yy yy yy zz zz zz zz\n</code></pre> <ul> <li><code>uu</code> = Unknown value</li> <li><code>vv</code> = Unknown value</li> <li><code>ww ww</code> = Sample size in bytes</li> <li><code>xx xx xx xx</code> = Sample address pointer</li> <li><code>yy yy yy yy</code> = Loopbook address pointer</li> <li><code>zz zz zz zz</code> = Cdebook address pointer</li> </ul> <p>Unknown Value</p> <p>It is currently unknown what these values are, they could be <code>codec</code>, <code>medium</code>, <code>unk_bit26</code>, or <code>relocOffset</code>.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-codebooks","title":"Audiobank Codebooks","text":"C \u00a0XML \u00a0Binary <pre><code>/* Address :*/\nAdpcmBook SampleCodebook = {\n  order = 0,                // I forget what this does...\n  numPredictors = 0,        // Number of predictor arrays\n  codebook = {\n    0, 0, 0, 0, 0, 0, 0, 0, // First predictor array (16 values)\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, // Second predictor array (16 values)\n    0, 0, 0, 0, 0, 0, 0, 0,\n  },\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Codebooks --&gt;\n&lt;aladpcmbooks&gt;\n  &lt;!-- Codebook Item --&gt;\n  &lt;item address=\"0\" name=\"Codebook Name\"&gt;\n    &lt;!-- ALADPCMBook Struct --&gt;\n    &lt;struct name=\"ALADPCMBook\" NUM_PRED=\"4\"&gt;\n      &lt;!-- Codebook Order --&gt;\n      &lt;field name=\"order\" datatype=\"int32\" ispointer=\"0\" isarray=\"0\" meaning=\"None\"\n            value=\"4\"/&gt;\n      &lt;!-- Number of Predictors --&gt;\n      &lt;field name=\"npredictors\" datatype=\"int32\" ispointer=\"0\" isarray=\"0\"\n            meaning=\"NUM_PRED\" value=\"4\"/&gt;\n      &lt;!-- Codebook Predictor Arrays --&gt;\n      &lt;field name=\"book\" datatype=\"ALADPCMPredictor\" ispointer=\"0\" isarray=\"1\"\n            meaning=\"Array of Predictors\" arraylenvar=\"NUM_PRED\"&gt;\n        &lt;!-- Codebook Predictor Array 1 --&gt;\n        &lt;element datatype=\"ALADPCMPredictor\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ALADPCMPredictor\"&gt;\n            &lt;field name=\"data\" datatype=\"int16\" ispointer=\"0\" isarray=\"1\" meaning=\"None\"\n                  arraylenfixed=\"16\"&gt;\n              &lt;!-- COPY &amp; PASTE YOUR PREDICTOR FIRST ARRAY HERE!! --&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n            &lt;/field&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n        &lt;!-- Codebook Predictor Array 2 --&gt;\n        &lt;element datatype=\"ALADPCMPredictor\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ALADPCMPredictor\"&gt;\n            &lt;field name=\"data\" datatype=\"int16\" ispointer=\"0\" isarray=\"1\" meaning=\"None\"\n                  arraylenfixed=\"16\"&gt;\n              &lt;!-- COPY &amp; PASTE YOUR PREDICTOR SECOND ARRAY HERE!! --&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n            &lt;/field&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n        &lt;!-- Codebook Predictor Array 3 --&gt;\n        &lt;element datatype=\"ALADPCMPredictor\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ALADPCMPredictor\"&gt;\n            &lt;field name=\"data\" datatype=\"int16\" ispointer=\"0\" isarray=\"1\" meaning=\"None\"\n                  arraylenfixed=\"16\"&gt;\n              &lt;!-- COPY &amp; PASTE YOUR PREDICTOR THIRD ARRAY HERE!! --&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n            &lt;/field&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n        &lt;!-- Codebook Predictor Array 4 --&gt;\n        &lt;element datatype=\"ALADPCMPredictor\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ALADPCMPredictor\"&gt;\n            &lt;field name=\"data\" datatype=\"int16\" ispointer=\"0\" isarray=\"1\" meaning=\"None\"\n                  arraylenfixed=\"16\"&gt;\n              &lt;!-- COPY &amp; PASTE YOUR PREDICTOR FOURTH ARRAY HERE!! --&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n            &lt;/field&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt;\n      &lt;/field&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Add more codebook items here --&gt;\n&lt;/aladpcmbooks&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | ww ww ww ww xx xx xx xx y0 y0 y1 y1 y2 y2 y3 y3\n## ## ## ## | y4 y4 y5 y5 y6 y6 y7 y7 y8 y8 y9 y9 yA yA yB yB\n## ## ## ## | yC yC yD yD yE yE yF yF z0 z0 z1 z1 z2 z2 z3 z3\n## ## ## ## | z4 z4 z5 z5 z6 z6 z7 z7 z8 z8 z9 z9 zA zA zB zB\n## ## ## ## | zC zC zD zD zE zE zF zF -- -- -- -- -- -- -- --\n</code></pre> <ul> <li><code>ww ww ww ww</code> = Order value</li> <li><code>xx xx xx xx</code> = Number of predictors value</li> <li><code>y# y#</code> = Codebook array value</li> <li><code>z# z#</code> = Codebook array value</li> <li><code>--</code> = Padding to byte 16 for alignment</li> </ul> <p>Codebook Array</p> <p>Codebook arrays are an array of 16 <code>int16</code> values with the number of arrays being used by vanilla samples at two arrays and the number of arrays being used by custom samples at four arrays.</p>"},{"location":"advanced/audiobanks/building-audiobanks/#audiobank-loopbooks","title":"Audiobank Loopbooks","text":"C \u00a0XML \u00a0Binary <pre><code>AdpcmLoop SampleLoopbook = {\n  loopStart = 0,            // Loop start marker of the sample; if loop count = 0 then leave as 0\n  loopEnd = 0,              // Loop end marker of the sample; if loop count = 0 then this becomes numSamples\n  loopCount = 0,            // Total number of times to loop the sample; -1 is indefinite\n  numSamples = 0,           // Total number of samples; if loop count = 0 then leave as 0\n  /* predictorState only exists if loopCount != 0 */\n  predictorState = {\n    0, 0, 0, 0, 0, 0, 0, 0, // Predictor array\n    0, 0, 0, 0, 0, 0, 0, 0,\n  },\n};\n</code></pre> <pre><code>&lt;!-- Audiobank Loopbooks --&gt;\n&lt;aladpcmloops&gt;\n&lt;!-- Loopbook Item --&gt;\n  &lt;item address=\"0\" name=\"Loopbook Name\"&gt;\n    &lt;!-- ALADPCMLoop Struct --&gt;\n    &lt;struct name=\"ALADPCMLoop\" HAS_TAIL=\"0\"&gt;\n      &lt;!-- Loop Start --&gt;\n      &lt;field name=\"Loop Start\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\" meaning=\"Loop Start\"\n             value=\"0\"/&gt;\n      &lt;!-- Loop End (If Loop Count = 0 then it becomes Number of Samples)--&gt;\n      &lt;field name=\"Loop End (Sample Length)\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\" meaning=\"Loop End\"\n             value=\"0\"/&gt;\n      &lt;!-- Loop Count --&gt;\n      &lt;field name=\"Loop Count\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\" meaning=\"Loop Count\"\n             defaultval=\"-1\" value=\"-1\"/&gt;\n      &lt;!-- Number of Samples --&gt;\n      &lt;field name=\"Number of Samples\" datatype=\"uint32\" ispointer=\"0\" isarray=\"0\"\n             meaning=\"None\" defaultval=\"0\" value=\"0\"/&gt;\n      &lt;!-- Predictor State --&gt;\n      &lt;field name=\"Tail Data\" datatype=\"ALADPCMTail\" ispointer=\"0\" isarray=\"1\"\n             meaning=\"Tail Data (if Loop Start != 0)\" arraylenvar=\"HAS_TAIL\"&gt;\n        &lt;!-- If Loop Count != 0 insert the array, otherwise remove the array --&gt;\n        &lt;!-- Loopbook Predictor Array --&gt;\n        &lt;element datatype=\"ALADPCMTail\" ispointer=\"0\" value=\"0\"&gt;\n          &lt;struct name=\"ALADPCMTail\"&gt;\n            &lt;field name=\"some_adpcm_data\" datatype=\"int16\" ispointer=\"0\" isarray=\"1\"\n                   meaning=\"None\" arraylenfixed=\"16\"&gt;\n              &lt;!-- COPY &amp; PASTE YOUR LOOP PREDICTOR ARRAY HERE!! --&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n              &lt;element datatype=\"int16\" ispointer=\"0\" value=\"0\"/&gt;\n            &lt;/field&gt;\n          &lt;/struct&gt;\n        &lt;/element&gt; &lt;!-- End of Loopbook Predictor Array --&gt;\n      &lt;/field&gt; &lt;!-- Closing tag for Predictor State --&gt;\n    &lt;/struct&gt;\n  &lt;/item&gt;\n  &lt;!-- Add more loopbook items here --&gt;\n&lt;/aladpcmloops&gt;\n</code></pre> <pre><code>Offset (h)  | 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n## ## ## ## | vv vv vv vv ww ww ww ww xx xx xx xx yy yy yy yy\n## ## ## ## | z0 z0 z1 z1 z2 z2 z3 z3 z4 z4 z5 z5 z6 z6 z7 z7\n## ## ## ## | z8 z8 z9 z9 zA zA zB zB zC zC zD zD zE zE zF zF\n</code></pre> <ul> <li><code>vv vv vv vv</code> = Loop start value</li> <li><code>ww ww ww ww</code> = Loop end value</li> <li><code>xx xx xx xx</code> = Loop count value</li> <li><code>yy yy yy yy</code> = Number of samples value</li> <li><code>z# z#</code> = Loopbook array value</li> </ul> <p>Loopbook Array</p> <p>Loopbook arrays are an array of 16 <code>int16</code> values with the array only being present if \"Loop Count\" is not equal to zero.</p>"},{"location":"advanced/midi/overview/","title":"Advanced MIDI Overview","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"advanced/midi/rpns/","title":"Registered Parameter Numbers","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details a specific type of MIDI control change messages.</p>"},{"location":"advanced/midi/rpns/#about-rpns","title":"About RPNs","text":"<p>MIDI control changes include an RPN, which stands for Registered Parameter Numbers, which are extended. You can use RPNs in tandem with Data Entry messages to change various parameters in your <code>.mid</code> file. When using RPNs your first RPN (MIDI control change numbers 100 and 101; these can be sent in any order) should be sent in order to select the parameter you want to edit, then you send your Data Entry (MIDI control change numbers 6 and 38) message to set the value of the parameter. When your RPN messages are received, any Data Entry messages that are sent and received after in the same MIDI channel will change the parameter of your RPN messages; in order for your RPNs not to be changed by unwanted Data Entry messages you should send RPN Null messages so that the parameters won't be changed.</p>"},{"location":"advanced/midi/rpns/#pitch-bend-sensitivity","title":"Pitch Bend Sensitivity","text":"<p>This parameter allows you to change the pitch bend semitone range used in the channel the RPN and Data Entry messages have been sent to; it requires both Data Entry messages. The MIDI specification does not give information on the full range, meaning that it depends on the MIDI hardware or software you are using.</p> <p>Info</p> <p>The default MIDI pitch bend sensitivity is \u00b12 semitones, Ocarina of Time and Majora's Mask have three different pitch bend ranges available assigned to different sequence commands: Command \"0xDE\" has a cutom range, command \"0xD3\" has a range of \u00b112 semitones, and command \"0xEE\" has a range of \u00b12 semitones; by default SEQ64 assigns pitch bends to 0xD3, however with SEQ64 <code>v2.X.X</code> you are able to change the sequence commands assigned to whatever MIDI control change you want in the ABI file.</p> <p>By using RPNs you can set the range in your <code>.mid</code> file to match the default pitch bend range set by SEQ64.</p>"},{"location":"advanced/midi/rpns/#message-values","title":"Message Values","text":"RPN MSB RPN LSB Data Entry MSB Data Entry LSB <code>00H</code> <code>00H</code> <code>mmH</code> <code>llH</code>"},{"location":"advanced/midi/rpns/#value-information","title":"Value Information","text":"MIDI CC Value Decription RPN MSB <code>00H</code> When set to a value of 0 alongside RPN LSB sets parameter to edit to Pitch Bend Sensitivity RPN LSB <code>00H</code> When set to a value of 0 alongside RPN MSB sets parameter to edit to Pitch Bend Sensitivity Data Entry MSB <code>mmH</code> Semitone range Data Entry LSB <code>llH</code> Cent range"},{"location":"advanced/midi/rpns/#example","title":"Example","text":"<p>In the example below the channel's pitch bend range is being set to \u00b112 semitones of range instead of the default \u00b12 MIDI has normally. After the range is set RPN Null commands are sent to ensure the data won't receive unwanted changes.</p> Measures:Beats:Ticks Event Kind Value 1 Value 2 Value 3 00000:00:000 Control Change 101-RPN MSB 0 \u2014 00000:00:000 Control Change 100-RPN LSB 0 \u2014 00000:00:000 Control Change 6-Data Entry MSB 12 \u2014 00000:00:000 Control Change 38-Data Entry LSB 0 \u2014 00000:00:000 Control Change 101-RPN MSB 127 \u2014 00000:00:000 Control Change 100-RPN LSB 127 \u2014"},{"location":"advanced/midi/rpns/#channel-fine-tuning","title":"Channel Fine Tuning","text":"<p>This parameter allows you to change the fine tune of programs in the channel the RPN and Data Entry messages have been sent to; it requires both Data Entry messages. If the 14 bit value of the Data Entry messages is 0x2000 (MSB of 64 and LSB of 0), then the tuning is central with A440 Hz. The full range gives a \u00b11 semitone range of tuning as 1 semitone is equal to 100 cents, and since the distance between the center of 0x2000 and each of the limits is 8192, a single increment is: \\(100 / 8192 \\approx 0.0122 \\space cents\\).</p>"},{"location":"advanced/midi/rpns/#message-values_1","title":"Message Values","text":"RPN MSB RPN LSB Data Entry MSB Data Entry LSB <code>00H</code> <code>01H</code> <code>mmH</code> <code>llH</code>"},{"location":"advanced/midi/rpns/#value-information_1","title":"Value Information","text":"MIDI CC Value Decription RPN MSB <code>00H</code> When set to a value of 0 alongside RPN LSB sets parameter to edit to Channel Fine Tuning RPN LSB <code>01H</code> When set to a value of 1 alongside RPN MSB sets parameter to edit to Channel Fine Tuning Data Entry MSB <code>mmH</code> MSB of the 14 bit value Data Entry LSB <code>llH</code> LSB of the 14 bit value"},{"location":"advanced/midi/rpns/#example_1","title":"Example","text":"<p>In the example below the channel's fine tune is being set to have an increase of 50 cents. After the fine tune is set RPN Null commands are sent to ensure the data won't receive unwanted changes.</p> Measures:Beats:Ticks Event Kind Value 1 Value 2 Value 3 00000:00:000 Control Change 101-RPN MSB 0 \u2014 00000:00:000 Control Change 100-RPN LSB 1 \u2014 00000:00:000 Control Change 6-Data Entry MSB 96 \u2014 00000:00:000 Control Change 38-Data Entry LSB 0 \u2014 00000:00:000 Control Change 101-RPN MSB 127 \u2014 00000:00:000 Control Change 100-RPN LSB 127 \u2014"},{"location":"advanced/midi/rpns/#channel-coarse-tuning","title":"Channel Coarse Tuning","text":"<p>This parameter allows you to change the coarse tune of programs in the channel the RPN and Data Entry messages have been sent to; this only requires the Data Entry MSB message. If the 14 bit value of the Data Entry MSB message is 0x40 (64), then the tuning is central with A440 Hz. The full range gives a \u00b148 semitone range of tuning.</p>"},{"location":"advanced/midi/rpns/#message-values_2","title":"Message Values","text":"RPN MSB RPN LSB Data Entry MSB Data Entry LSB <code>00H</code> <code>02H</code> <code>mmH</code> <code>llH</code>"},{"location":"advanced/midi/rpns/#value-information_2","title":"Value Information","text":"MIDI CC Value Decription RPN MSB <code>00H</code> When set to a value of 0 alongside RPN LSB sets parameter to edit to Channel Coarse Tuning RPN LSB <code>02H</code> When set to a value of 2 alongside RPN MSB sets parameter to edit to Channel Coarse Tuning Data Entry MSB <code>mmH</code> Number of semitones to increase or decrease the tuning by Data Entry LSB <code>llH</code> Ignored and treated as a value of 0"},{"location":"advanced/midi/rpns/#example_2","title":"Example","text":"<p>In the example below the channel's coarse tune is being set to have a decrease of one octave (12 semitones). After the coarse tune is set RPN Null commands are sent to ensure the data won't receive unwanted changes.</p> Measures:Beats:Ticks Event Kind Value 1 Value 2 Value 3 00000:00:000 Control Change 101-RPN MSB 0 \u2014 00000:00:000 Control Change 100-RPN LSB 1 \u2014 00000:00:000 Control Change 6-Data Entry MSB 52 \u2014 00000:00:000 Control Change 38-Data Entry LSB 0 \u2014 00000:00:000 Control Change 101-RPN MSB 127 \u2014 00000:00:000 Control Change 100-RPN LSB 127 \u2014"},{"location":"advanced/midi/sysex/","title":"SysEx Messages","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details MIDI universal SysEx messages.</p>"},{"location":"advanced/midi/sysex/#about-sysex-messages","title":"About SysEx Messages","text":"<p>MIDI comes with two different types of messages, channel messages and system messages. Channel messages handle everything that affect channels such as note on and offs, control changes, and so on. System messages include SysEx, clock, and so on. SysEx are system exclusive messages designed to provide information about specific functions inside MIDI hardware from different manufacturers; and SysEx messages are up to the product manufacturer to define themselves. Unlike regular MIDI messages, SysEx messages are sent in a string which makes them quite a bit more complicated to use than regular MIDI messages. However, if your MIDI hardware relies on it then it is very important to learn.</p> <p>This page can't contain every single SysEx in existance, but it can provide information on universal SysEx messages that are the same between all different MIDI controllers. The only SysEx message that can be identified and used by SEQ64 is the SysEx for master volume, and it will ignore all other SysEx messages, however it could be beneficial to learn about the others as well just in case.</p>"},{"location":"advanced/midi/sysex/#universal-realtime-system-exclusive-messages","title":"Universal Realtime System Exclusive Messages","text":"<p>Below are the universal realtime SysEx messages and information about them. Despite being \"exclusive\" they are in fact not exclusive messages, every piece of MIDI hardware will recognize and use them in the exact same way, thus them being named as \"universal\" SysEx messages.</p>"},{"location":"advanced/midi/sysex/#master-volume","title":"Master Volume","text":"<p>This is the only SysEx that SEQ64 can recognize and will add a command for when importing a <code>.mid</code> file and converting it into a sequence file. This message controls the overall volume of every MIDI channel allowing you to increase or decrease volume across the board instead of individually.</p>"},{"location":"advanced/midi/sysex/#message-string","title":"Message String","text":"Status 2nd Byte 3rd Byte <code>F0H</code> <code>7FH 7FH 04H 01H llH mmH</code> <code>F7H</code> <p>Info</p> <p>The only values you want to edit are the <code>llH</code> and <code>mmH</code> values which correspond to the LSB and MSB of the command itself.</p>"},{"location":"advanced/midi/sysex/#string-value-information","title":"String Value Information","text":"Byte Decription <code>F0H</code> SysEx start <code>7FH</code> ID number (Universal realtime message) <code>7FH</code> Device ID (Broadcast) <code>04H</code> Sub ID#1 (Device Control) <code>01H</code> Sub ID#2 (Master Volume) <code>llH</code> Master Volume LSB <code>mmH</code> Master Volume MSB <code>F7H</code> SysEx end"},{"location":"advanced/midi/sysex/#master-fine-tuning","title":"Master Fine Tuning","text":"<p>This SysEx is not recognized by SEQ64 and will not have a command written into your sequence when importing a <code>.mid</code> file and converting it into a sequence file. This message controls the overall fine tuning of of every MIDI channel allowing you to achieve a master pitch bend.</p>"},{"location":"advanced/midi/sysex/#message-string_1","title":"Message String","text":"Status 2nd Byte 3rd Byte <code>F0H</code> <code>7FH 7FH 04H 01H llH mmH</code> <code>F7H</code> <p>Info</p> <p>The only values you want to edit are the <code>llH</code> and <code>mmH</code> values which correspond to the LSB and MSB of the command itself.</p>"},{"location":"advanced/midi/sysex/#string-value-information_1","title":"String Value Information","text":"Byte Decription <code>F0H</code> SysEx start <code>7FH</code> ID number (Universal realtime message) <code>7FH</code> Device ID (Broadcast) <code>04H</code> Sub ID#1 (Device Control) <code>03H</code> Sub ID#2 (Master Volume) <code>llH</code> Master Fine Tuning LSB <code>mmH</code> Master Fine Tuning MSB <code>F7H</code> SysEx end"},{"location":"advanced/midi/sysex/#master-coarse-tuning","title":"Master Coarse Tuning","text":"<p>This SysEx is not recognized by SEQ64 and will not have a command written into your sequence when importing a <code>.mid</code> file and converting it into a sequence file. This message controls the overall coarse tuning of of every MIDI channel allowing you to achieve a master pitch bend.</p>"},{"location":"advanced/midi/sysex/#message-string_2","title":"Message String","text":"Status 2nd Byte 3rd Byte <code>F0H</code> <code>7FH 7FH 04H 01H llH mmH</code> <code>F7H</code> <p>Info</p> <p>The only values you want to edit are the <code>llH</code> and <code>mmH</code> values which correspond to the LSB and MSB of the command itself.</p>"},{"location":"advanced/midi/sysex/#string-value-information_2","title":"String Value Information","text":"Byte Decription <code>F0H</code> SysEx start <code>7FH</code> ID number (Universal realtime message) <code>7FH</code> Device ID (Broadcast) <code>04H</code> Sub ID#1 (Device Control) <code>03H</code> Sub ID#2 (Master Volume) <code>llH</code> Master Fine Tuning LSB <code>mmH</code> Master Fine Tuning MSB <code>F7H</code> SysEx end"},{"location":"advanced/sampling/overview/","title":"Overview of Custom Sample Injection","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> A Word of Caution <p>The ROMs of Ocarina of Time and Majora's Mask have a limited file space of 64 MiB decompressed, and it becomes 32 MiB when compressed. To retain compatibility with both Nintendo 64 hardware and Wii Virtual Console hardware your ROM should never go above 64 MiB compressed. The Nintendo 64 can theoretically handle 64 MiB ROMs, however Wii Virtual Console can only be expanded to allow 48 MiB due to the nature of the fact the Wii itself needs memory to run the operating system and emulator at the same time. Using custom samples can eat up this data very quickly if you sample file is large enough; it is recommended to keep samples themselves to around a max of 10 KiB when possible. Emulators on PC can go well above the 64 MiB and 48 MiB limit, however hardware compatibility is important.</p> <p>Please be mindful that if you are releasing your creations publicly that you will not be the only person using them, so it is best to show some refrain. If you song file ends up anywhere near 500 KiB then it is likely too large, a good target to aim for would be no larger than 100 to 200 KiB.</p> <p>This page details the basics of custom sample injection for Ocarina of Time and Majora's Mask for use with the Ocarina of Time and Majora's Mask randomizers. This page does not detail injecting a sample directly into the ROM without the use of the randomizer program.</p> <p>Warning</p> <p>Custom sample injection is for creating non-vanilla sampled instruments, drums, or sound effects and assumes you already have a decent understanding of music creation and custom audiobanks, this is not a beginner's guide to music creation.</p> <p>Please only continue with this guide if you are comfortable using custom audiobanks and dealing with a great deal of trial and error.</p>"},{"location":"advanced/sampling/overview/#overview","title":"Overview","text":"<p>In the latest version of the Ocarina of Time and Majora's Mask randomizers it's possible to create brand new instruments using non-vanilla samples by injecting it into the ROM using the randomizer. Pages related to this feature will do their best to help you through the process of custom sample injection, however, not everything is easy or straightforward; some information is very complex and requires a somewhat thorough explanation.</p> OOTMM Unsupported Files <p>At the time of writing this note custom sample files (<code>.zsound</code> files) are unsupported by the OOTMM randomizer and will be skipped during seed generation. There will be a log of what files were skipped, this is normal.</p> <p>For the sake of clarity and brevity instruments, drums, and sound effects that use custom sample injection will all be referred to as \"sampled\" instruments, drums, and sound effects; vanilla instruments, drums, and sound effects will be reffered to as \"non-sampled\" or \"vanilla\" instruments, drums, and sound effects. As an aside, this also applies to <code>.ootrs</code> and <code>.mmrs</code> files using sampled instruments as well; sampled songs that use sampled instruments are referred to as being \"sampled\" (this makes it easier for the end-user to recognize whether or not a song uses sampled instruments, drums, and sound effects and helps when trying to solve issues that arise with the files as well) and non-sampled songs that only use vanilla instruments, drums, and sound effects are reffered to as being \"non-sampled\" (this is generally because a majority of songs will not be using sampled instruments, drums, and sound effects). Any mention of \"samples\" refers to the <code>.wav</code> and <code>.bin</code> (or <code>.zsound</code>) files you are using to create your sampled instrument, drum, or sound effect with.</p> <p>The majority of the work for sampled instrument's, drum's, and sound effect's samples is making them compatible with Ocarina of Time and Majora's Mask, once the samples are compatible with the games the rest of the process is creating the audiobank data your sampled instrument, drum, or sound effect will use for import into your sequence's full audiobank. Making sampled instruments, drums, and sound effects can be very time consuming, and you will run into problems when working with sampled instruments, drums, and sound effects so do not get discouraged if you fail.</p> Recomendation <p>It is recommended that you read through the custom sample injection wiki pages fully once while following along with the process, then going over it again as many times as needed until you fully understand the process. Should you require any further help it's best to inquire within the  MMR or  Darunia's Joy discord servers.</p>"},{"location":"advanced/sampling/overview/#sample-injection-tools","title":"Sample Injection Tools","text":"<p>Before getting started, below is a list of tools that are used for custom sample injection, not every tool may be required, but it is recommended to download all the rools you need right now to save on needing to go back and forth between downloading and visiting the relevant wiki pages.</p>"},{"location":"advanced/sampling/overview/#link-to-tools","title":"Link to Tools","text":"<ul> <li>Sample Creation Tools</li> <li>N64 Soundlist Tool</li> <li>Polyphone recommended</li> <li>Audacity</li> <li>Z64 Tuning Calculator recommended</li> <li>Z64 ADSR Converter</li> <li>Audiobank Templates recommended</li> </ul>"},{"location":"advanced/sampling/overview/#brief-summary-of-tools","title":"Brief Summary of Tools","text":"Sample Creation ToolsN64 Soundlist ToolPolyphoneAudacityTuning CalculatorADSR ConverterAudiobank Templates <p>The Sample Creation Tools created by Isghj5, and edited by others, are required for converting <code>.wav</code> files to <code>.bin</code> (or <code>.zsound</code>) sample files and obtaining codebook and loopbook ADPCM predictor data.</p> <p>N64 Soundlist Tool is required for ripping <code>.bin</code> (or <code>.zsound</code>) sample files and obtaining codebook and loopbook ADPCM predictor data (as well as other instrument, drum, and sound effect data) from Nintendo 64 games.</p> <p>Polyphone is optional, but required for exporting <code>.wav</code> files from <code>.sf2</code> (soundfont) files; this is used in conjunction with the \"Sample Creation Tools\" to convert <code>.wav</code> files to <code>.bin</code> (or <code>.zsound</code>) sample files and to obtain codebook and loopbook ADPCM predictor data. You can also use Polyphone for other sample editing, before converting, as well.</p> <p>Audacity is optional, but extremely useful for resampling <code>.wav</code> files as well as sample editing, before converting, as well.</p> <p>The Tuning Calculator is optional, but extremely useful for tuning your sampled instrument, drum, or sound effect.</p> <p>The ADSR Converter is optional, but can be useful for helping convert <code>.sf2</code> envelopes into envelope data compatible with Ocarina of Time and Majora's Mask.</p> <p>The Audiobank Templates are optional, but are made specifically for the creation of sampled instruments, drums, and sound effects and can be edited in SEQ64 or a text editor capable of editing <code>.xml</code> files. The Audiobank Templates contain placeholder data to be edited specifically for either instruments, drums, or sound effects.</p> Recommendation <p>It is recommended to avoid using SEQ64 to edit audiobanks and instead use a text editor capable of editing <code>.xml</code> files. There's a learning curve, however it will bypass any bugs that SEQ64 introduces.</p>"},{"location":"advanced/sampling/overview/#summary-of-creating-new-instruments-drums-and-sound-effects","title":"Summary of Creating New Instruments, Drums, and Sound Effects","text":"<p>Before beginning, it may be beneficial to understand the general workflow for custom sample injection, as well as garner basic information on what sample files actually are. Please understand that the workflow presented here is not set in stone, it is a guideline to help you create your own workflow that works for you; the wiki follows the presented workflow in how information and pages are structured and presented.</p>"},{"location":"advanced/sampling/overview/#custom-sample-injection-workflow","title":"Custom Sample Injection Workflow","text":"<ol> <li>Obtain a <code>.wav</code> file your will use for your sampled instrument, drum, or sound effect<ul> <li>Resample your <code>.wav</code> file to 32000 Hz (1)</li> <li>Add or remove loop points to the <code>.wav</code> file using Polyphone or z64Audio as needed</li> </ul> </li> <li>Find your <code>.wav</code> file's tuning float value<ul> <li>Find your <code>.wav</code> file's root key (2)</li> </ul> </li> <li>Convert your <code>.wav</code> file to a <code>.bin</code> (or <code>.zsound</code>) file using the Sample Creation Tools or obtain a sample from a different Nintendo 64 game using N64 Soundlist Tool<ul> <li>Convert your codebook ADPCM predictor data from <code>.bin</code> to <code>.xml</code></li> <li>Convert your loopbook ADPCM predictor data from <code>.bin</code> to <code>.xml</code> (3)</li> </ul> </li> <li>Create your sampled instrument's, drum's, or sound effect's audiobank (4)<ul> <li>Edit the splits, release rate, tuning float, and ADSR values in the audiobank</li> <li>Copy and paste your codebook ADPCM predictor data into <code>&lt;books&gt;</code></li> <li>Copy and paste your loopbook ADPCM predictor data into <code>&lt;loops&gt;</code> (5)</li> </ul> </li> <li>Set up your sampled instrument's, drum's, or sound effect's unique sample address marker<ul> <li>For Ocarina of Time randomizer rename <code>*.wav.vadpcm.bin</code> to <code>*.zsound</code> and add <code>ZSOUND:*.zsound:########</code> to your <code>.meta</code> file</li> <li>For Majora's Mask randomizer rename <code>*.wav.vadpcm.bin</code> to <code>*_########.zsound</code></li> <li>Rename <code>*.wav.vadpcm.bin</code> to <code>*.zsound</code> and add <code>- \"*.zsound\": \"########\"</code> to the <code>samples:</code> section of your <code>metadata.yml</code> file (6)</li> </ul> </li> <li>Test your sampled instrument, drum, or sound effect in-game to make sure it works<ul> <li>Create an <code>.ootrs</code> or <code>.mmrs</code> and test your sample using the audiobank and a test sequence in the randomizer (7)</li> </ul> </li> </ol> <ol> <li>Resampling is an optional step in this process, but it removes the need for any extra work in tuning your sampled instrument, drum, or sound effect.</li> <li>Finding the root key of your sample is only required if you are unsure of or want to reconfirm the root key for you sample.</li> <li>If your <code>.wav</code> file does not have any loop data specified then the Sample Creation Tools will not output a <code>.bin</code> file containing loopbook ADPCM predictor data.</li> <li>If you are not using an audiobank template, then you will need to either create an audiobank from scratch or edit an existing audiobank from Ocarina of Time or Majora's Mask using SEQ64.</li> <li>This is only required if the Sample Creation Tools output a <code>.bin</code> file containing your sample's loopbook ADPCM predictor data.</li> <li><code>metadata.yml</code> has not been presented to or adopted by the developers of any randomizer, however it is a simple but effective system that will hopefully be adopted and added in the future.</li> <li>Optionally, you could inject the sample onto a decompressed ROM, however it is much more tedious and doesn't ensure that the sample will not collide with other data added by the randomizer.</li> </ol> <p>There are a few ways to obtain samples to inject, the first way is ripping and injecting other Nintendo 64 games' sample files, and codebook &amp; loopbook ADPCM predictor data using N64 Soundlist Tool. The second way is obtaining a soundfont (<code>.sf2</code>) that has already ripped sample files as <code>.wav</code> files and using those <code>.wav</code> files to create your sampled instrument, drum, or sound effect. The third way is to create your own samples using a DAW or sampling software to create a <code>.wav</code> file then using those <code>.wav</code> files to create your sampled instrument, drum, or sound effect.</p> <p>The easiest way of creating sampled instruments, drums, and sound effects is using other Nintendo 64 games' sample files, codebook &amp; loopbook ADPCM predictor data, and other relevant data using N64 Soundlist Tool; converting a <code>.wav</code> file is much more involved and tedious in comparison.</p>"},{"location":"advanced/sampling/overview/#summary-of-zsound-files","title":"Summary of <code>.zsound</code> Files","text":"<p>The binary (<code>.bin</code>) files the radnomzier recognizes as <code>.zsound</code> files are <code>.aiff</code> files that have been compressed into <code>.aifc</code> files and encoded using a switchable ADPCM algorithm created by Nintendo to allow audio files to play on the Nintendo 64 hardware.</p> <p>The reason for the name <code>.zsound</code> and not <code>.bin</code> is because the binary file extension doesn't allow for much differentiation between different RAW files. SEQ64 also refers to sequence files (<code>.seq</code>, <code>.aseq</code>, and <code>.zseq</code>) as RAW files. If packed into an <code>.ootrs</code> or <code>.mmrs</code> file the lack of differentiation could cause issues so they were coined <code>.zsound</code> files by Isghj5 for use with MMR; later when OOTR added custom sample injection they also adopted the <code>.zsound</code> file extension as the system was based on the system MMR used at the time they were adding custom sample injection. The files themselves are placed in the root directory of <code>.ootrs</code> and <code>.mmrs</code> files.</p>"},{"location":"advanced/sampling/overview/#summary-of-adpcm-predictors","title":"Summary of ADPCM Predictors","text":"<p>What are known as \"books\" and \"loops\" are ADPCM codebook and loopbook prediction coefficient tables. Since the Nintendo 64 uses a switchable ADPCM compression based algorithm they are required by audiobanks which is somewhat redundant since they are embedded in the sample files themselves. The codebooks and loopbooks are used by <code>vadpcm_enc</code>, a Nintendo 64 audio encoding tool created by Nintendo and supplied with the Nintendo 64 SDK, when creating the compressed binary file <code>*.wav.vadpcm.bin</code> and are embedded directly into the file. Codebooks and loopbooks in the most basic sense tell the audio engine how the sample is supposed to play.</p> <p>As for ADPCM itself, it is a lossy audio compression format, so when being compressed some audio data is overwritten or lost completely. ADPCM compression works by separating the sample's data into different blocks, and predicting the variation of the sample's data within each block. The size of the blocks are measured in \"samples\"; the smallest bloock size is <code>32</code> samples, and the highest is <code>512</code> samples. Larger blocks allow for better compression, but it is at the expense of sound quality and resolution for aligning audio loop points.</p> <p>Because ADPCM uses sample blocks that are aligned one after another, a <code>.wav</code> file compressed using ADPCM compression may have an unfinished, or partial, block at its end. In this case, the ADPCM decoder generates silence (1) for the remainder of this partial block.</p> <ol> <li>The silence will appear in codebooks and loopbooks as a zeroed out value, this is normal and is not a cause to be alarmed or worried that your sample has an issue.</li> </ol>"},{"location":"advanced/sampling/troubleshooting/","title":"Sample Troubleshooting","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>placceholder</p>"},{"location":"advanced/sampling/wav-conversion/","title":"Creating Sample Data by Converting WAV Files","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> A Word of Caution <p>The ROMs of Ocarina of Time and Majora's Mask have a limited file space of 64 MiB decompressed, and it becomes 32 MiB when compressed. To retain compatibility with both Nintendo 64 hardware and Wii Virtual Console hardware your ROM should never go above 64 MiB compressed. The Nintendo 64 can theoretically handle 64 MiB ROMs, however Wii Virtual Console can only be expanded to allow 48 MiB due to the nature of the fact the Wii itself needs memory to run the operating system and emulator at the same time. Using custom samples can eat up this data very quickly if you sample file is large enough; it is recommended to keep samples themselves to around a max of 10 KiB when possible. Emulators on PC can go well above the 64 MiB and 48 MiB limit, however hardware compatibility is important.</p> <p>Please be mindful that if you are releasing your creations publicly that you will not be the only person using them, so it is best to show some refrain. If you song file ends up anywhere near 500 KiB then it is likely too large, a good target to aim for would be no larger than 100 to 200 KiB.</p> <p>This page details the process of converting <code>.wav</code> files into sample files compatible with Ocarina of Time and Majora's Mask.</p>"},{"location":"advanced/sampling/wav-conversion/#placeholder","title":"placeholder","text":"<p>One way of creating custom samples is by converting <code>.wav</code> files into <code>.bin</code> (or <code>.zsound</code>) files using the vadpcm_enc and tabledesign programs from the Nintendo 64 SDK, however those tools must be recompiled to work on x86 architecture as they were originally build for IRIX computers using the MIPS processor. Currently there is no active development for those tools, however there is a tool you can use with modern computers and processors called z64audio.</p> <p>Unlike with N64 Soundlist Tool, obtaining all the data for the audiobank you will put the sample(s) in require different tools. The process of converting a <code>.wav</code> file is much more involved and can be quite tedious compared to N64 Soundlist Tool; however you can use samples from anywhere, not just other Nintendo 64 games.</p>"},{"location":"advanced/sampling/wav-conversion/#workflow","title":"Workflow","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#resampling-a-wav-file","title":"Resampling a WAV File","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#creating-a-looping-sample","title":"Creating a Looping Sample","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#looping-using-polyphone","title":"Looping using Polyphone","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#looping-using-z64audio","title":"Looping using z64audio","text":""},{"location":"advanced/sampling/wav-conversion/#tuning-a-sample","title":"Tuning a Sample","text":"<p>placholder</p>"},{"location":"advanced/sampling/wav-conversion/#finding-the-samples-root-key","title":"Finding the Sample's Root Key","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#finding-the-samples-tuning-value","title":"Finding the Sample's Tuning Value","text":"<p>placeholder</p>"},{"location":"advanced/sampling/wav-conversion/#using-z64audio-to-convert-a-wav-file","title":"Using z64audio to Convert a WAV File","text":"<p>placeholder</p>"},{"location":"basic/","title":"Basic Information","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"basic/#placeholder","title":"Placeholder","text":"<p>placeholder blurb</p> <ul> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> </ul>"},{"location":"basic/categories/","title":"Categorizing Sequences","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details how to categorize your custom music for the Ocarina of Time and Majora's Mask randomizers, as well as the Ocarina of Time &amp; Majora's Mask combo randomizer, so that your sequence will play in the appropriate spots in-game.</p>"},{"location":"basic/categories/#making-a-meta-file-for-ocarina-of-time","title":"Making a META File for Ocarina of Time","text":"<p>To make a META file for an <code>.ootrs</code> file you will need to create a text file with the extension <code>.meta</code> that has the same filename as your sequence (e.g. <code>mkwii-moonview.seq</code> will have a META file with the name <code>mkwii-moonview.meta</code>).</p> <p>The META file's structure is presented below:</p> TemplateExample <p>Vanilla Audiobank:</p> <pre><code>songname\n0x00\nbgm/fanfare\nmusicgroups\n</code></pre> <p>Custom Audiobank:</p> <pre><code>songname\n- (2)\nbgm/fanfare\nmusicgroups\nZSOUND:filename.zsound:######## (1)\n</code></pre> <ol> <li>If you are using a sampled instrument, drum, or sound effect this line, and subsequent lines for however many samples you are using, must be included otherwise omit this line and subsequent lines.</li> <li>If you are using a custom audiobank you will use a hypen <code>-</code> instead of the number of the audiobank your sequence uses.</li> </ol> <p>Vanilla Audiobank:</p> <pre><code>Mario Kart Wii - Moonview Highway\n0x03\nbgm\nFields,Town,Dungeon\n</code></pre> <p>Custom Audiobank:</p> <pre><code>Mario Kart Wii - Moonview Highway\n- (2)\nbgm\nFields,Town,Dungeon\nZSOUND:EORG253.zsound:41B3ABEC (1)\nZSOUND:EORG268.zsound:41B3ABED\nZSOUND:EORG286.zsound:41B3ABEE\nZSOUND:O-HIT80.zsound:43AC22DB\nZSOUND:SAW0-48.zsound:446535FF\nZSOUND:SAW0-60.zsound:44653600\nZSOUND:SAW0-72.zsound:44653601\n</code></pre> <ol> <li>If you are using a sampled instrument, drum, or sound effect this line, and subsequent lines for however many samples you are using, must be included otherwise omit this line and subsequent lines.</li> <li>If you are using a custom audiobank you will use a hypen <code>-</code> instead of the number of the audiobank your sequence uses.</li> </ol> <p>The first line of the META file is the name of the sequence. This name must be unique as no two sequences can share the exact same name. Generally <code>Game Name - Song Name</code> will work unless a sequence with that name already exists and the user uses both sequences.</p> Recommendation <p>It is recommended that you do not use quotation marks in the sequence name as it will make it harder for people creating a cosmetic plandomizer file.</p> <p>The second line of the META file is the audiobank the sequence uses. For example if you want to use audiobank <code>0x03</code> then you would put <code>0x03</code> on your second line; however if you are using a custom audiobank then you will instead put a <code>-</code> instead.</p> <p>The fourth line of the META file is the locations you want your sequence to appear in, known as \"music groups\". This will be explained in greater detail below.</p> <p>The fifth and subsequent lines of the META file are where you put <code>.zsound</code> file data. These lines are only used for when you have a sampled instrument, drum, or sound effect, if you are not using sampled instruments drums, or sound effects the META file ends at the fourth line.</p>"},{"location":"basic/categories/#music-groups","title":"Music Groups","text":"<p>Music groups determine where your sequence will play in-game, this information is specified in the META file. Your META file can include a set of named music groups with different specificity. These named music groups should be in a comma separated list. You can refer to the list below, or use this online music groups tool to find the correct areas of the game you want your sequence to be placed in.</p> Low SpecificityMid SpecificityHigh SpecificityExact Specificity <p>Background Music:</p> Music Group Sequence Name Overworld <code>Hyrule Field</code> <code>Lost Woods</code> <code>Gerudo Valley</code> <code>Market</code> <code>Kakariko Child</code> <code>Kakariko Adult</code> <code>Lon Lon Ranch</code> <code>Kokiri Forest</code> <code>Goron City</code> <code>Zora's Domain</code> <code>Castle Courtyard</code> <code>Horse Race</code> <code>Minigame</code> <code>Shooting Gallery</code> <code>Fairy Fountain</code> <code>File Select</code> <code>Temple of Time</code> <code>Chamber of the Sages</code> <code>House</code> <code>Shop</code> <code>Potion Shop</code> <code>Windmill Hut</code> Dungeon <code>Inside the Deku Tree</code> <code>Grotto</code> <code>Dodongo's Cavern</code> <code>Death Mountain Crater</code> <code>Damp\u00e9 Race</code> <code>Gerudo Training Ground</code> <code>Jabu-Jabu</code> <code>Forest Temple</code> <code>Fire Temple</code> <code>Ice Cavern</code> <code>Water Temple</code> <code>Spirit Temple</code> <code>Shadow Temple</code> <code>Bottom of the Well</code> <code>Castle Underground</code> <code>Castle Escape</code> Fight <code>Battle</code> <code>Miniboss Battle</code> <code>Boss Battle</code> <code>Fire Boss</code> <code>Ganondorf Battle</code> <code>Ganon Battle</code> CharacterTheme <code>Title Theme</code> <code>Zelda's Theme</code> <code>Sheik's Theme</code> <code>Deku Tree</code> <code>Kaepora Gaebora</code> <code>Fairy Flying</code> <code>Ganondorf Theme</code> <code>Kotake &amp; Koume</code> <code>Ingo Theme</code> <p>Fanfares:</p> Music Group Sequence Name EventFanfare <code>Item Get</code> <code>Heart Container Get</code> <code>Spirit Stone Get</code> <code>Heart Piece Get</code> <code>Medallion Get</code> <code>Learn Song</code> <code>Boss Defeated</code> <code>Epona Race Goal</code> <code>Escape from Ranch</code> <code>Zelda Turns Around</code> <code>Treasure Chest</code> <code>Master Sword</code> <code>Door of Time</code> <code>Ganondorf Appears</code> <code>Game Over</code> SongFanfare <code>Prelude of Light</code> <code>Bolero of Fire</code> <code>Minuet of Forest</code> <code>Serenade of Water</code> <code>Requiem of Spirit</code> <code>Nocturne of Shadow</code> <code>Saria's Song</code> <code>Epona's Song</code> <code>Zelda's Lullaby</code> <code>Sun's Song</code> <code>Song of Time</code> <code>Song of Storms</code> <p>Background Music:</p> Music Group Sequence name Outdoors <code>Hyrule Field</code> <code>Lost Woods</code> <code>Gerudo Valley</code> <code>Market</code> <code>Kakariko Child</code> <code>Kakariko Adult</code> <code>Lon Lon Ranch</code> <code>Kokiri Forest</code> <code>Goron City</code> <code>Zora's Domain</code> <code>Castle Courtyard</code> <code>Horse Race</code> <code>Minigame</code> Indoors <code>Shooting Gallery</code> <code>Fairy Fountain</code> <code>File Select</code> <code>Temple of Time</code> <code>Chamber of the Sages</code> <code>House</code> <code>Shop</code> <code>Potion Shop</code> <code>Windmill Hut</code> ChildDungeon <code>Inside the Deku Tree</code> <code>Grotto</code> <code>Dodongo's Cavern</code> <code>Death Mountain Crater</code> <code>Damp\u00e9 Race</code> <code>Gerudo Training Grounds</code> <code>Jabu-Jabu</code> AdultDungeon <code>Forest Temple</code> <code>Fire Temple</code> <code>Ice Cavern</code> <code>Water Temple</code> <code>Spirit Temple</code> <code>Shadow Temple</code> <code>Bottom of the Well</code> <code>Castle Underground</code> <code>Castle Escape</code> SmallFight <code>Battle</code> <code>Miniboss Battle</code> BigFight <code>Boss Battle</code> <code>Fire Boss</code> <code>Ganondorf Battle</code> <code>Ganon Battle</code> HeroTheme <code>Title Theme</code> <code>Zelda's Theme</code> <code>Sheik's Theme</code> <code>Deku Tree</code> <code>Kaepora Gaebora</code> <code>Fairy Flying</code> VillainTheme <code>Ganondorf Theme</code> <code>Kotake &amp; Koume</code> <code>Ingo Theme</code> ItemFanfare <code>Item Get</code> <code>Heart container Get</code> <code>Spirit Stone Get</code> <code>Heart Piece Get</code> <code>Medallion Get</code> <code>Learn Song</code> <p>Fanfares:</p> Music Group Sequence Name SuccessFanfare <code>Boss Defeated</code> <code>Epona Race Goal</code> <code>Escape from Ranch</code> <code>Zelda Turns Around</code> BigFanfare <code>Treasure Chest</code> <code>Master Sword</code> <code>Door of Time</code> <code>Ganondorf Appears</code> GameOver <code>Game Over</code> WarpSong <code>Prelude of Light</code> <code>Bolero of Fire</code> <code>Minuet of Forest</code> <code>Serenade of Water</code> <code>Requiem of Spirit</code> <code>Nocturne of Shadow</code> UtilitySong <code>Saria's Song</code> <code>Epona's Song</code> <code>Zelda's Lullaby</code> <code>Sun's Song</code> <code>Song of Time</code> <code>Song of Storms</code> <p>Background Music:</p> Music Group Sequence Name Fields <code>Hyrule Field</code> <code>Lost Woods</code> <code>Gerudo Valley</code> Town <code>Market</code> <code>Kakariko Child</code> <code>Kakariko Adult</code> <code>Lon Lon Ranch</code> <code>Kokiri Forest</code> <code>Goron City</code> <code>Zora's Domain</code> <code>Castle Courtyard</code> Fun <code>Horse Race</code> <code>Minigame</code> <code>Shooting Gallery</code> MagicalPlace <code>Fairy Foutain</code> <code>File Select</code> <code>Temple of Time</code> <code>Chamber of the Sages</code> House <code>House</code> SalesArea <code>Shop</code> <code>Potion Shop</code> WindmillHut <code>Windmill Hut</code> ChildDungeon <code>Inside the Deku Tree</code> <code>Grotto</code> <code>Dodongo's Cavern</code> <code>Death Mountain Crater</code> <code>Damp\u00e9 Race</code> <code>Gerudo Training Grounds</code> <code>Jabu-Jabu</code> AncientDungeon <code>Forest Temple</code> <code>Fire Temple</code> MysticalDungeon <code>Ice Cavern</code> <code>Water Temple</code> <code>Spirit Temple</code> SpookyDungeon <code>Shadow Temple</code> <code>Bottom of the Well</code> <code>Castle Underground</code> <code>Castle Escape</code> SmallFight <code>Battle</code> <code>Miniboss Battle</code> BossFight <code>Boss Battle</code> <code>Fire Boss</code> FinalFight <code>Ganondorf Battle</code> <code>Ganon Battle</code> HeroTheme <code>Title Theme</code> <code>Zelda's Theme</code> <code>Sheik's Theme</code> <code>Deku Tree</code> <code>Kaepora Gaebora</code> <code>Fairy Flying</code> VillainTheme <code>Ganondorf Theme</code> <code>Kotake &amp; Koume</code> <code>Ingo Theme</code> <p>Fanfares:</p> Music Group Sequence Name ItemFanfare <code>Item Get</code> <code>Heart container Get</code> <code>Spirit Stone Get</code> <code>Heart Piece Get</code> <code>Medallion Get</code> <code>Learn Song</code> SuccessFanfare <code>Boss Defeated</code> <code>Epona Race Goal</code> <code>Escape from Ranch</code> <code>Zelda Turns Around</code> BigFanfare <code>Treasure Chest</code> <code>Master Sword</code> <code>Door of Time</code> <code>Ganondorf Appears</code> GameOver <code>Game Over</code> WarpSong <code>Prelude of Light</code> <code>Bolero of Fire</code> <code>Minuet of Forest</code> <code>Serenade of Water</code> <code>Requiem of Spirit</code> <code>Nocturne of Shadow</code> UtilitySong <code>Saria's Song</code> <code>Epona's Song</code> <code>Zelda's Lullaby</code> <code>Sun's Song</code> <code>Song of Time</code> <code>Song of Storms</code> <p>Background Music:</p> Music Group Sequence Name Music Group Sequence Name HyruleField <code>Hyrule Field</code> ForestTemple <code>Forest Temple</code> LostWoods <code>Lost Woods</code> FireTemple <code>Fire Temple</code> GerudoValley <code>Gerudo Valley</code> IceCavern <code>Ice Cavern</code> Market <code>Market</code> WaterTemple <code>Water Temple</code> KakarikoChild <code>Kakariko Child</code> SpiritTemple <code>Spirit Temple</code> KakaridkoAdult <code>Kakariko Adult</code> ShadowTemple <code>Shadow Temple</code> <code>Bottom of the Well</code> LonLonRanch <code>Lon Lon Ranch</code> CastleUnderground <code>Castle Underground</code> KokiriForest <code>Kokiri Forest</code> CastleEscape <code>Castle Escape</code> GoronCity <code>Goron City</code> Battle <code>Battle</code> ZorasDomain <code>Zora's Domain</code> MinibossBattle <code>Miniboss Batte</code> CastleCourtyard <code>Castle Courtyard</code> BossBattle <code>Boss Battle</code> HorseRace <code>Horse Race</code> FireBoss <code>Fire Boss</code> Mini-game <code>Minigame</code> GanondorfBattle <code>Ganondorf Battle</code> ShootingGallery <code>Shooting Gallery</code> GanonBattle <code>Ganon Battle</code> FairyFountain <code>Fairy Fountain</code> <code>File Select</code> TitleTheme <code>Title Theme</code> TempleOfTime <code>Temple of Time</code> ZeldaTheme <code>Zelda's Theme</code> ChamberOfTheSages <code>Chamber of the Sages</code> SheikTheme <code>Sheik's Theme</code> House <code>House</code> DekuTree <code>Deku Tree</code> Shop <code>Shop</code> KaeporaGaebora <code>Kaepora Gaebora</code> PotionShop <code>Potio Shop</code> FairyFlying <code>Fairy Flying</code> WindmillHut <code>Windmill Hut</code> GanondorfTheme <code>Ganondorf Theme</code> InsideDekuTree <code>Inside the Deku Tree</code> <code>Grotto</code> KotakeAndKoume <code>Kotake &amp; Koume</code> DodongosCavern <code>Dodongo's Cavern</code> <code>Death Mountain Crater</code> <code>Damp\u00e9 Race</code> <code>Gerudo Training Grounds</code> IngoTheme <code>Ingo Theme</code> JabuJabu <code>Jabu-Jabu</code> \u2014 \u2014 <p>Fanfares:</p> Music Group Sequence Name Music Group Sequence Name ItemGet <code>Item Get</code> GameOver <code>Game Over</code> HeartContainerGet <code>Heart Container Get</code> PreludeOfLight <code>Prelude of Light</code> SpiritStoneGet <code>Spirit Stone Get</code> BoleroOfFire <code>Bolero of Fire</code> HeartPieceGet <code>Heart Piece Get</code> MinuetOfForest <code>Minuet of Forest</code> MedallionGet <code>Medallion Get</code> SerenadeOfWater <code>Serenade of Water</code> LearnSong <code>Learn Song</code> RequiemOfSpirit <code>Requiem of Spirit</code> BossDefeated <code>Boss Defeated</code> NocturneOfShadow <code>Nocturne of Shadow</code> EponaRaceGoal <code>Epona Race Goal</code> SariasSong <code>Saria's Song</code> EscapeFromRanch <code>Escape from Ranch</code> EponasSong <code>Epona's Song</code> ZeldaTurnsAround <code>Zelda Turns Around</code> ZeldasLullaby <code>Zelda's Lullaby</code> TreasureChest <code>Treasure Chest</code> SunsSong <code>Sun's Song</code> MasterSword <code>Master Sword</code> SongOfTime <code>Song of Time</code> DoorOfTime <code>Door of Time</code> SongOfStorms <code>Song of Storms</code> GanondorfAppears <code>Ganondorf Appears</code> \u2014 \u2014"},{"location":"basic/categories/#making-a-categories-file-for-majoras-mask","title":"Making a Categories File for Majora's Mask","text":"<p>To make a categories file for an <code>.mmrs</code> file all you need to do is create a text file with the name <code>categories.txt</code> and put whatever group and individual category values you want the area your sequence to play in inside the file separated by a hyphen or comma (e.g. <code>1-2-3</code> or <code>1,2,3</code>).</p> <p>Warning</p> <p>You cannot use both hypens and commas to separate your categories, you must use one or the other.</p>"},{"location":"basic/categories/#categories","title":"Categories","text":"<p>There are two different types of categories known as \"group categories\", and \"individual categories\". Group categories contain a number of sequences a sequence can be assigned to, and individual categories assign a sequence to a specific sequence.</p> Issues With Looping Fanfares <p>Group categories <code>8</code>, <code>9</code>, <code>10</code>, as well as individual categories <code>108</code>, <code>109</code>, <code>119</code>, <code>120</code>, <code>121</code>, <code>122</code>, <code>124</code>, <code>137</code>, <code>139</code>, <code>13D</code>, <code>13F</code>, <code>141</code>, <code>152</code>, <code>155</code>, <code>177</code>, <code>178</code>, <code>179</code>, <code>17C</code>, and <code>17E</code>, are fanfare categories, miscategorizing a looping sequence as any of these fanfare categories can cause various issues and possibly softlock a player in various areas (e.g. Doggy Racetrack).</p> Group CategoriesIndividual Categories \"Special\" Group Category <p>Category <code>16</code> contains two cutscene sequences which will cut your sequence short if it loops, so it is recommended to put non-looping sequences in this category or to just use the individual category for these sequences instead.</p> Value Group Name Sequence Name <code>0</code> Fields <code>Termina Field</code> <code>Snowhead</code> <code>Great Bay Coast</code> <code>Ikana Canyon</code> <code>Southern Swamp</code> <code>Romani Ranch</code> <code>Deku Palace</code> <code>Mystery Woods</code> <code>1</code> Towns <code>Great Bay Coast</code> <code>Ikana Canyon</code> <code>Southern Swamp</code> <code>Clock Town (Day 1)</code> <code>Clock Town (Day 2)</code> <code>Clock Town (Day 3)</code> <code>Goron Village</code> <code>Romani Ranch</code> <code>Zora Hall</code> <code>Deku Palace</code> <code>Fairy's Fountain</code> <code>Gorman Brothers' Theme</code> <code>Mystery Woods</code> <code>Zelda's Theme</code> <code>2</code> Dungeons <code>Inside a Cave</code> <code>Snowhead Temple</code> <code>Great Bay Temple</code> <code>Pirates' Fortress</code> <code>Ancient Castle of Ikana</code> <code>Stone Tower Temple</code> <code>Stone Tower Temple (Inverted)</code> <code>Woodfall Temple</code> <code>3</code> Indoors <code>Goron Village</code> <code>Zora Hall</code> <code>Clock Tower Interior</code> <code>Guru-Guru's Theme</code> <code>Milk Bar</code> <code>Inside a House</code> <code>Item Shop</code> <code>Minigame Shop</code> <code>Marine Research Lab &amp; Curiosity Shop</code> <code>Astral Observatory</code> <code>Music Box House: \"Farewell to Gibdo\"</code> <code>Cremia's Carriage</code> <code>Old Koume's Boat Cruise</code> <code>Mayor Dotour's Office</code> <code>Swordsman's School</code> <code>Sharp's Curse: \"Melody of Darkness\"</code> <code>Fairy's Fountain</code> <code>File Select</code> <code>Koume &amp; Kotake's Theme</code> <code>Mystery Woods</code> <code>Zelda's Theme</code> <code>Song of Healing Theme</code> <code>Giants' Theme</code> <code>4</code> Minigames <code>Milk Bar</code> <code>Minigame Shop</code> <code>Music Box House: \"Farewell to Gibdo\"</code> <code>Goron Race</code> <code>Timed Minigame</code> <code>Cremia's Carriage</code> <code>Old Koume's Boat Cruise</code> <code>Horse Race</code> <code>Swordsman's School</code> <code>Mystery Woods</code> <code>Battle: Regular Enemy</code> <code>5</code> Action Cutscenes <code>Timed Minigame</code> <code>Mayor Dotour's Office</code> <code>Aliens' Theme</code> <code>Swordsman's School</code> <code>Sharp's Curse: \"Melody of Darkness\"</code> <code>Pursuit Theme</code> <code>Mask Reveal</code> <code>Battle: Regular Enemy</code> <code>6</code> Calm Cutscenes &amp; Character Themes <code>Clock Tower Interior</code> <code>Guru-Guru's Theme</code> <code>Marine Research Lab &amp; Curiosity Shop</code> <code>Music Box House: \"Farewell to Gibdo\"</code> <code>Cremia's Carriage</code> <code>Old Koume's Boat Cruise</code> <code>Mayor Dotour's Office</code> <code>Aliens' Theme</code> <code>Sharp's Curse: \"Melody of Darkness\"</code> <code>Majora's Theme</code> <code>Fairy's Fountain</code> <code>File Select</code> <code>Keaton's Quiz</code> <code>Koume &amp; Kotake's Theme</code> <code>Gorman Brothers' Theme</code> <code>Mystery Woods</code> <code>Zelda's Theme</code> <code>Tatl &amp; Tael Reunited</code> <code>Song of Healing Theme</code> <code>Giants' Theme</code> <code>7</code> Combat &amp; Boss Fights <code>Pursuit Theme</code> <code>Battle: Miniboss</code> <code>Battle: Dungeon Boss</code> <code>Battle: Majora's Mask</code> <code>Battle: Majora's Incarnation</code> <code>Battle: Majora's Wrath</code> <code>8</code> Item Get, Minigame Win, and Soaring <code>Fanfare: Event Success!</code> <code>Fanfare: Get an Item!</code> <code>Fanfare: Get a Heart Container!</code> <code>Fanfare: Get a Mask!</code> <code>Fanfare: Get a Heart Piece!</code> <code>Fanfare: The Truth Revealed!</code> <code>Fanfare: Goron Race Victory!</code> <code>Fanfare: Horse Race Victory!</code> <code>Fanfare: Learned a Song!</code> <code>Fanfare: Song of Soaring</code> <code>Fanfare: Temple Appears!</code> <code>9</code> Game Over <code>Fanfare: Event Failure [1]</code> <code>Fanfare: Event Failure [2]</code> <code>Fanfare: Game Over!</code> <code>Fanfare: Boss Defeated!</code> <code>Fanfare: Song of Soaring</code> <code>Fanfare: Temple Appears!</code> <code>10</code> Area Cleared <code>Fanfare: Boss Defeated!</code> <code>Fanfare: Temple Clear! (Short) [1]</code> <code>Fanfare: Temple Clear! (Long) [2]</code> <code>Fanfare: The Moon Destroyed!</code> <code>Fanfare: The Giants' Farewell!</code> <code>16</code> Special <code>Cutscene: Giants' Theme</code> <code>Cutscene: Title Screen</code> Missing Sequences <p>Sequences that are missing from this list are normally just pointers to other sequences that have no real sequence assigned to them. These sequences have been omitted from the list. There's also certain sequences that require extra sequence data to play properly in-game that the randomizer doesn't randomize which are also omitted.</p> Value Sequence Name Value Sequence Name <code>102</code> Termina Field <code>136</code> Zora Hall <code>103</code> Pursuit Theme <code>137</code> Fanfare: Get a Mask! <code>104</code> Majora's Theme <code>138</code> Battle: Miniboss <code>105</code> Clock Tower Interior <code>139</code> Fanfare: Get a Heart Piece! <code>106</code> Stone Tower Temple <code>13A</code> Astral Observatory <code>107</code> Stone Tower Temple (Inverted) <code>13B</code> Inside a Cave <code>108</code> Fanfare: Event Failure [1] <code>13C</code> Milk Bar <code>109</code> Fanfare: Event Failure [2] <code>13D</code> Fanfare: The Truth Revealed! <code>10B</code> Song of Healing Theme <code>13E</code> Woods of Mystery <code>10C</code> Southern Swamp <code>13F</code> Fanfare: Goron Race Victory! <code>10D</code> Aliens' Theme <code>140</code> Horse Race <code>10E</code> Old Koume's Boat Cruise <code>141</code> Fanfare: Horse Race Victory! <code>10F</code> Sharp's Curse: \"Melody of Darkness\" <code>142</code> Gorman Brothers' Theme <code>110</code> Great Bay Coast <code>143</code> Koume &amp; Kotake's Theme <code>111</code> Ikana Canyon <code>144</code> Item Shop <code>112</code> Deku Palace <code>145</code> Kaepora Gaebora's Theme <code>113</code> Snowhead <code>146</code> Minigame Shop <code>114</code> Pirates' Fortress <code>150</code> Swordsman's School <code>115</code> Clock Town (Day 1) <code>152</code> Fanfare: Learned a Song! <code>116</code> Clock Town (Day 2) <code>155</code> Fanfare: Song of Soaring <code>117</code> Clock Town (Day 3) <code>157</code> Final Hours <code>118</code> File Select <code>165</code> Snowhead Temple <code>119</code> Fanfare: Event Success! <code>166</code> Great Bay Temple <code>11A</code> Battle: Regular Enemy <code>169</code> Battle: Majora's Wrath <code>11B</code> Battle: Dungeon Boss <code>16A</code> Battle: Majora's Incarnation <code>11C</code> Woodfall Temple <code>16B</code> Battle: Majora's Mask <code>11F</code> Inside a House <code>16C</code> Band-Practice: Japas' Bass Guitar (Zelda 1 \"Dungeon\") <code>120</code> Fanfare: Game Over! <code>16D</code> Band-Practice: Tijo's Drum (ALttP \"Cave\") <code>121</code> Fanfare: Boss Defeated! <code>16E</code> Band-Practice: Evan's Piano (Zelda 1 \"Continue?\") <code>122</code> Fanfare: Get an Item! <code>16F</code> Ancient Castle of Ikana <code>124</code> Fanfare: Get a Heart Container! <code>170</code> Cutscene: Giants' Theme <code>125</code> Timed Minigame <code>171</code> Kamaro's Theme <code>126</code> Goron Race <code>172</code> Cremia's Carriage <code>127</code> Music Box House: \"Farewell to Gibdo\" <code>173</code> Keaton's Quiz <code>128</code> Fairy's Fountain <code>176</code> Cutscene: Title Screen <code>129</code> Zelda's Theme <code>177</code> Fanfare: Temple Appears! <code>12A</code> Rosa Sisters' Theme <code>178</code> Fanfare: Temple Clear! (Short) [1] <code>12C</code> Marine Research Lab &amp; Curiosity Shop <code>179</code> Fanfare: Temple Clear! (Long) [2] <code>12D</code> Giants' Theme <code>17B</code> The Moon Enraged <code>12E</code> Guru-Guru's Theme <code>17C</code> Fanfare: The Giants' Farewell! <code>12F</code> Romani Ranch <code>17D</code> Tatl &amp; Tael Reunited (Generic Reunion Theme) <code>130</code> Goron Village <code>17E</code> Fanfare: The Moon Destroyed! <code>131</code> Mayor Dotour's Office \u2014 \u2014"},{"location":"basic/categories/#making-a-metadata-file","title":"Making a Metadata File","text":"<p>Warning</p> <p>Metadata files have not currently been presented to or adopted by any of the randomizers, this is just a concept and is not implemented; DO NOT USE IT AS A REPLACEMENT FOR A META OR CATEGORIES FILE!</p>  \u00a0metadata.yml \u00a0metadata.toml <pre><code>%YAML 1.2\n# The following file is a metadata file for custom music in The Legend of Zelda:\n# Ocarina of Time and The Legend of Zelda: Majora's Mask\n#\n# This is a YAML file, YAML uses indentation instead of brackets; this makes it\n# easier to read however YAML itself is not as easy to parse as something like\n# JSON or TOML. For the purpose of the custom music communities for Zelda64\n# randomizers this file should be kept as simple and easy to understand as possible.\n#\n# Allowed Game Values: \"oot\", \"mm\", \"ootmm\"\n#     This key determines which game to pull adpcm data and audiobank information\n#     from. A value of \"oot\" determines the base game to be OOT, a value of \"mm\"\n#     determines the base game to be MM, and a value of \"ootmm\" determines the game\n#     is interchangeable idk how this would work...\n#\n# Allowed Song Type Values: \"bgm\", \"fanfare\"\n#     The song type key determines whether or not the song is classfied as a bgm\n#     or fanfare. Do not miscategorize bgms as fanfares it will cause issues in\n#     both OOT and MM!!!\n#\n# Allowed Audiobank Values: \"0x##\", \"custom\"\n#     The audiobank key determines which audiobank the game you set in the game\n#     key will use, however if you are using a custom audiobank then you should\n#     change the value to \"custom\" as this indicates the bank needs to be inserted.\n#\n---\ngame: \"oot\"\n\nmetadata:\n    song name: \"placeholder\"\n    song type: \"bgm\"\n    audiobank: \"0x03\"\n    categories:\n        # To change the categories, please use an array with comma separated values\n        # e.g. [\"value\", \"value\"]\n        #\n        # MMR categories: &lt;link&gt;\n        mmr: [\"0\", \"2\"]\n        # OOTR categories: https://thesounddefense.github.io/musicgroups/\n        ootr: [\"Fields\", \"Dungeon\"]\n\n    # Place your custom samples here e.g. - \"my_sound.zsound\": \"0x12345678\"\n    # If you have no custom samples then leave the key and value empty\n    samples:\n        - \"\": \"\"\n\n# Optional plain text metadata to also be contained within the metadata.yml file\n# This could be used for accreditation or something else, doesn't need to use\n# the same format To make multiline keys you need to use the character \"&gt;\" after\n# the key e.g. \"accreditation: &gt;\"\naccreditation: &gt;\n    Origin Game:        &lt;placeholder&gt;\n    Song Name:          &lt;placeholder&gt;\n    Categories:         &lt;placeholder&gt;\n    Original Composers: &lt;placeholder&gt;\n    Sequence Converter: &lt;placeholder&gt;\n    Sampling:           No Sampling/Light Sampling/Heavy Sampling\n    Song Type:          BGM (Background Music)/ME (Musical Effect or Fanfare)\n\n    Notes: &lt;extra notes or comments about the song go here&gt;\n\n    Original Song: &lt;link&gt;\n</code></pre> <pre><code># The following file is a metadata file for custom music in The Legend of Zelda:\n# Ocarina of Time and Majora's Mask\n#\n# Allowed Game Values: \"oot\", \"mm\", \"ootmm\"\n#     This key determines which game to pull adpcm data and audiobank information\n#     from. A value of \"oot\" determines the base game to be OOT, a value of \"mm\"\n#     determines the base game to be MM, and a value of \"ootmm\" determines the game\n#     is interchangeable idk how this would work...\n#\n# Allowed Song Type Values: \"bgm\", \"fanfare\"\n#     The song type key determines whether or not the song is classfied as a bgm\n#     or fanfare. Do not miscategorize bgms as fanfares it will cause issues in\n#     both OOT and MM!!!\n#\n# Allowed Audiobank Values: \"0x##\", \"custom\"\n#     The audiobank key determines which audiobank the game you set in the game\n#     key will use, however if you are using a custom audiobank then you should\n#     change the value to \"custom\" as this indicates the bank needs to be inserted.\n#\ngame = \"oot\"\n\n[metadata]\n  songname   = \"placeholder\"\n  songtype   = \"bgm\"\n  audiobank  = \"0x03\"\n  # To change the categories, please use an array with comma separated values\n  # e.g. [\"value\", \"value\"]\n  #\n  categories.mmr = [\"1\",\"2\"]\n  # OOTR categories: https://thesounddefense.github.io/musicgroups/\n  categories.ootr = [\"Fields\",\"Dungeon\"]\n\n# Place your custom samples here e.g. - \"my_sound.zsound\": \"0x12345678\"\n# If you have no custom samples then leave the key and value as \"none\"\n# Empty quoted keys are allowed, but highly discouraged\n[samples]\n  \"none\" = \"none\"\n\n# Optional plain text metadata to also be contained within the metadata.toml file\n# This could be used for accreditation or something else, doesn't need to use the\n# same format To make multiline keys you need to use triple quotes after the key\n# and on the final line\n[accreditation]\n    credits = \"\"\"\n            Origin Game:        &lt;placeholder&gt;\n            Song Name:          &lt;placeholder&gt;\n            Categories:         &lt;placeholder&gt;\n            Original Composers: &lt;placeholder&gt;\n            Sequence Converter: &lt;placeholder&gt;\n            Sampling:           No Sampling/Light Sampling/Heavy Sampling\n            Song Type:          BGM (Background Music)/ME (Musical Effect or Fanfare)\n\n            Notes: &lt;extra notes or comments about the song go here&gt;\n\n            Original Song: &lt;link&gt;\n            \"\"\"\n</code></pre>"},{"location":"basic/custom-audiobanks/","title":"Using Custom Audiobanks","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"basic/overview/","title":"Overview","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"basic/overview/#summary-of-music-creation","title":"Summary of Music Creation","text":"<p>placeholder</p>"},{"location":"basic/overview/#sequence-limitations","title":"Sequence Limitations","text":"<ul> <li>Tempo cannot go above a value of 255 (0xFF).</li> <li>Volume cannot go above a value of 255 (0xFF).<ul> <li>MIDI cannot go above a value of 127 (0x7F).</li> </ul> </li> <li>Program changes cannot go above a value of 255 (0xFF).<ul> <li>MIDI cannot go above a value of 127 (0x7F).</li> </ul> </li> <li>Channels are polyphonic, however only a maximum of four voices, or notes, of differing pitches can be played at any given time in a single channel.</li> <li>One pair of <code>Note On</code> and <code>Note Off</code> commands cannot intersect, or overlap, another pair of <code>Note On</code> and <code>Note Off</code> commands for a note of the same pitch.<sup>1</sup></li> </ul> <p>SEQ64 Errors</p> Overlapping NotesVoice Limit <p>For a channel containing overlapping notes, SEQ64 will give the following error in the console window or debug output when importing a MIDI file: <code>Note off (ch=# note=# time=#) received for note that is not on!</code></p> <p>For a channel containing more than four voices sounding at once, SEQ64 will give the following error in the console window of debug output when importing a MIDI file: <code>Channel # has more than 4 notes on at a time (at t=#)</code></p>"},{"location":"basic/overview/#assigning-appropriate-midi-program-numbers","title":"Assigning Appropriate MIDI Program Numbers","text":"<p>In MIDI instruments are assigned by a control change command using the values 192 (0xC0) to 207 (0xCF). You can generally only have one single instrument per channel, though you can swap the instrument at any point using a MIDI program change command.</p> <p>MIDI using the GM specification normally has 127 possible instruments with Channel 10 always being reserved for percussion instruments (instead of using a program change to individual drums you instead change the entire kit itself with individual drum sounds being assigned to note values 35 to 81), and uses a single instrument bank. However in Ocarina of Time and Majora's Mask there are multiple instrument banks (called audiobanks, or soundfonts if you're working with decomp) and setting instruments depends entirely on the audiobank you are using. In vanilla audiobanks there will almost always be 1 (0x00) to 16 (0x0F) instruments with instrument 126 (0x7E) assigning the sound effects to a channel and instrument 127 (0x7F) assigning the percussion kit to a channel. Some audiobanks have less instruments, or different sound effects, or different percussion kits.</p> Percussion Kits and Sound Effects <p>Percussion kist and sound effects in Ocarina of Time and Majora's Mask work almost identically to how they do in MIDI with different values corresponding to different individual drum sounds. The only difference is hat there is a single percussion kit per audiobank and is assigned to program 127 (0x7F) instead of being assigned to a specific channel.</p> <p>To properly assign the instruments you want you will need to find which instrument in the audiobank you are using corresponds to the equivalent MIDI program value. If you need to know which audiobank has which instruments, you can use the vanilla audiobank references wiki page.</p>"},{"location":"basic/overview/#instrument-types","title":"Instrument Types","text":"<p>In Ocarina of Time and Majora's Mask there are three different types of instrument types:</p> <ol> <li>Instruments</li> <li>Drums</li> <li>Sound Effects</li> </ol>"},{"location":"basic/overview/#instruments","title":"Instruments","text":"<p>Instruments assign three different samples to different MIDI keyboard regions, the low sample starts from note index 0 and moves all the way up until the first keymap split, the mid sample occupies the place between both keymap splits, and the high sample starts from the second keymap split and moves all the way up to the last note index 127. Each sample gets automatically pitch shifted inside its region.</p>"},{"location":"basic/overview/#drums-and-sound-effects","title":"Drums and Sound Effects","text":"<p>Drums and sound effects assaign a single sample to each individual key within the range of note 21 (A1) to note 84 (C7). Each sample plays at the exact pitch determined by the tuning float value.</p>"},{"location":"basic/overview/#synth-wave-instruments","title":"Synth Wave Instruments","text":"<p>Also known as \"chiptune\" instruments, the synth wave instruments are a set of instruments available at all times no matter what audiobank is assigned to your sequence as they are special instruments with sample data assigned to very specific instrument slots (overwriting these slots with other instruments gives priorioty to audiobank instruments first, and synth waves second). There is a section about these instruments and how to access them available in the vanilla audiobank reference wiki page.</p> <ol> <li> <p>placeholder\u00a0\u21a9</p> </li> </ol>"},{"location":"getting-started/requirements/","title":"ROM Requirements","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page details the requirements for ROMs of Ocarina of Time and Majora's Mask so that you will be able to use them to assist in creating cusom music by testing your sequences, and audiobanks, in-game to check for any errors as well as help you make any adjustments you may want to your custom music.</p>"},{"location":"getting-started/requirements/#general-rom-requirements","title":"General ROM Requirements","text":"<p>To be able to work with the tools required for custom music creation edit your ROM will need to be in the \"Big Endian\" byte order, MSB first and LSB last (e.g. <code>0x1234</code> is <code>0x1243</code>), and not in the \"Little Endian\" byte order, LSB first and MSB last (e.g. <code>0x1243</code> becomes <code>0x4312</code>), or in the \"Byteswapped\" byte order, every byte value is reversed (e.g. <code>0x1234</code> becomes <code>0x2143</code>). You can see more information in the info box below about how to make sure your ROM is Big Endian, and what you can do to change your ROM's byte ordering to Big Endian if it isn't already.</p> ROM Byte Ordering <p>If your ROM has the file format of either <code>.n64</code> (Little Endian) or <code>.v64</code> (Byteswapped) you will need to use Tool64  to change the byte order of the ROM as the tools used to edit the ROM require it to use Big Endian (<code>.z64</code>) byte ordering.</p> <p>To use Tool64 simply open the folder containing your ROM(s) then right click the ROM(s) that appear and select \"Big Endian\" from the context menu that appears.</p> <p>If you're checking the ROM using a hex editor please refer to the ROM's internal name as it appears on the ROM in the hex editor using the information below (the title will be at the following address range <code>0x00000020</code> to <code>0x0000003F</code>):</p> Little Endian (<code>.n64</code>)Big Endian (<code>.z64</code>)Byteswapped (<code>.v64</code>) <p>For Ocarina of Time the ROM's internal name will be arranged as such in Little Endian byte ordering: <pre><code> EHTEGELO DNEZ F ADL....C....ELZ\n</code></pre> For Majora's Mask the ROM's internal name will be arranged as such in Little Endian byte ordering: <pre><code>DLEZAM AAROJM S' KSA....N....ESZ\n</code></pre></p> <p>For Ocarina of Time the ROM's internal name will be arranged as such in Big Endian byte ordering: <pre><code>THE LEGEND OF ZELDA .......CZLE.\n</code></pre> For Majora's Mask the ROM's internal name will be arranged as such in Big Endian byte ordering: <pre><code>ZELDA MAJORA'S MASK .......NZSE.\n</code></pre></p> <p>For Ocarina of Time the ROM's internal name will be arranged as such in Byteswapped byte ordering: <pre><code>HT EELEGDNO  FEZDL A......C.LZ.E\n</code></pre> For Majora's Mask the ROM's internal name will be arranged as such in Byteswapped byte ordering: <pre><code>EZDL AAMOJARS'M SA K......N.SZ.E\n</code></pre></p>"},{"location":"getting-started/requirements/#ocarina-of-time-rom-requirements","title":"Ocarina of Time ROM Requirements","text":"<p>To be able to work with the tools required for custom music creation your Ocarina of Time ROM will need to be any NTSC region version 1.0 ROM; NTSC region version 1.1 ROMs, NTSC region version 1.2 ROMs, and any version of PAL region ROMs will not work. The tools used to create music for Ocarina of Time only support or have information available for NTSC region version 1.0 ROMs because the tool's developers and subsequently the randomizer's developers decided on using NTSC region version 1.0 ROMs instead of any other version, however for Ocarina of Time it does not matter if your ROM is NTSC-J or NTSC-U as the only difference between the NTSC-J and NTSC-U region ROMs is a toggle determining whether or not the language should be in Japanese or English.<sup>1</sup></p> <p>To make sure you have an unmodified version of the ROM, there are MD5 checksums available below to reference for both compressed and decompressed Ocarina of Time NTSC version 1.0 ROMs</p> ROM MD5 and CRC32 Checksums <p>An easy way to check if your ROM is the correct ROM is to open this site and check your ROM's MD5 checksum.</p> Compressed (NTSC-U)Decompressed (NTSC-U)Compressed (NTSC-J)Decompressed (NTSC-J) <p><code>Legend of Zelda, The - Ocarina of Time (NTSC-U) [V1.0]</code> <pre><code>CRC32: cd16c529\n  MD5: 5bd1fe107bf8106b2ab6650abecd54d6\n</code></pre></p> <p><code>Legend of Zelda, The - Ocarina of Time (NTSC-U) [V1.0]</code> <pre><code>CRC32: b94d8af1\n  MD5: 6f7957f08d564ae255b25d54b9eb6774\n</code></pre></p> <p><code>Zelda no Densetsu - Toki no Ocarina (NTSC-J) [V1.0]</code> <pre><code>CRC32: d423e8b0\n  MD5: 9f04c8e68534b870f707c247fa4b50fc\n</code></pre></p> <p><code>Zelda no Densetsu - Toki no Ocarina (NTSC-J) [V1.0]</code> <pre><code>CRC32: 49a3439c\n  MD5: 361f0a3bfc21289928d0f671517a6897\n</code></pre></p>"},{"location":"getting-started/requirements/#majoras-mask-rom-requirements","title":"Majora's Mask ROM Requirements","text":"<p>To be able to work with the tools required for custom music creation your Majora's Mask ROM will need to be an NTSC-U version 1.0 ROM; NTSC-J version 1.0 ROMs, NTSC-J version 1.1 ROMs, and any version of PAL region ROMs will not work. The tools used to create music for Majora's Mask only support or have information available for NTSC-U version 1.0 because the tool's developers and subsequently the randomizer's developers decided on using NTSC-U version 1.0 instead of any other version, and unlike how NTSC versions work for Ocarina of Time there are multiple changes between the ROMs for NTSC versions of the game that make them vastly different (e.g. Owl Quicksaves being added in NTSC-U where they were absent from NTSC-J, or Zora Swimming physics being altered from NTSC-J to NTSC-U, etc).<sup>2</sup></p> <p>To make sure you have an unmodified and correct version of the ROM, there are MD5 checksums available below to reference for both compressed and decompressed Majora's Mask NTSC-U version 1.0 ROMs.</p> ROM MD5 Checksum <p>An easy way to check if your ROM is the correct ROM is to open this site and check your ROM's MD5 checksum.</p> Compressed (NTSC-U)Decompressed (NTSC-U) <p><code>Legend of Zelda, The - Majora's Mask (NTSC-U) [v1.0]</code> <pre><code>CRC32: b428d8a7\n  MD5: 2a0a8acb61538235bc1094d297fb6556\n</code></pre></p> <p><code>Legend of Zelda, The - Majora's Mask (NTSC-U) [v1.0]</code> <pre><code>CRC32: 33751c40\n  MD5: 05fd2b38816173f92ab279c059fabbfb\n</code></pre></p>"},{"location":"getting-started/requirements/#placeholder","title":"placeholder","text":"<ol> <li> <p>For a full breakdown of every difference between versions in The Legend of Zelda: Ocarina of Time, please visit The Cutting Room Floor's page on version differences.\u00a0\u21a9</p> </li> <li> <p>For a full breakdown of every difference between versions in The Legend of Zelda: Majora's Mask, please visit The Cutting Room Floor's page on program revisions.\u00a0\u21a9</p> </li> </ol>"},{"location":"getting-started/seq64/","title":"Using SEQ64","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page goes over how to get started with SEQ64 for creating custom music in Ocarina of Time and Majora's Mask. It will give a basic rundown on the program as well as importing and converting a <code>.mid</code> file into a sequence file.</p> <p>Bugs and Errors</p> <p>Please be aware that SEQ64 is an old program with many bugs, some known and others unknown. You may encounter errors and issues when using the program when editing a ROM, ROM description, sequence file, or audiobank file.</p> <p>Info</p> <p>This page will be using SEQ64 <code>v1.5.0</code> and SEQ64 <code>v2.3.3</code> for images, SEQ64 <code>v1.0.0</code> should have no dfference from <code>v1.5.0</code> other than the UI style and theme of the program. Everything should be located in the same place and have all the same options for SEQ64 versions 1.0 and 1.5.</p>"},{"location":"getting-started/seq64/#loading-a-rom-and-rom-description","title":"Loading a ROM and ROM Description v1.0.0 and v1.5.0 only","text":"<p>When you first open SEQ64 you will see that everything is blank and none of the program's fields are populated with information. To begin working you will need to load your ROM into SEQ64 and load a ROM description for it. The images below highlight how to load a ROM and ROM Description. It should not matter what order you load your ROM or ROM description in, however it may be safest to load the ROM description first.</p> Loading a  ROMLoading a ROM Description <p></p> <p>To load your ROM into SEQ64 simply click the \"ROM\" button, then click the \"Load...\" option from the context menu that appears.</p> <p></p> <p>To load your ROM description into SEQ64 simply click the \"RomDesc\" button, then click the \"Load...\" option from the context menu that appears.</p> <p>Info</p> <p>If your ROM has byte ordering other than Big Endian then the ROM's internal title shown in the title bar of SEQ64 will be switched around. You can change the byte ordering SEQ64 uses, however your ROM should be Big Endian byte ordering otherwise data may end up misaligned.</p> <p>After loading your ROM and ROM description all of the program's fields should be populated with ROM information and all the information inside of the ROM description. If you loaded the ROM description first then fields will be populated, however not all of the fields will be until you also load your ROM.</p>"},{"location":"getting-started/seq64/#importing-a-midi-file-into-seq64","title":"Importing a MIDI File Into SEQ64","text":"<p>placeholder</p> SEQ64 v1.0.0 and v1.5.0SEQ64 v2.X.X <p></p> <p>Press the \"Import MIDI\" button to import a <code>.mid</code> file to convert into a sequence. Before importing you can change the highlighted values</p> <p>Fields highlighted in  orange are fields that are optional fields that can change how your sequence looks when imported.</p> <p>Fields highlighted in  green are fields that should not be changed, and instead be left as is.</p> <p></p> <p>Press the \"Import MIDI\" button to import a <code>.mid</code> file to convert into a sequence. Before importing you can change the highlighted values</p> <p>Fields highlighted in  orange are fields that are optional fields that can change how your sequence looks when imported.</p> <p>Fields highlighted in  green are fields that should not be changed, and instead be left as is.</p>"},{"location":"getting-started/tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"getting-started/tools/","title":"Custom Music Creation Tools and Resources","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>This page is where you will find links to the various tools and resources used in custom music creation for Ocarina of Time and Majora's Mask.</p> <p>Warning</p> <p>This page, as well as the wiki itself, can not and will not supply you with any ROM files or links to any ROM files for Ocarina of Time and Majora's Mask as it is illegal to do so. This wiki is not meant for piracy of copyrighted materials, it is meant to help those interested in creating custom music for Ocarina of Time and Majora's Mask learn the process and other details related to music creation for the games.</p>"},{"location":"getting-started/tools/#custom-music-creation-tools","title":"Custom Music Creation Tools","text":"<p>Below is a list of tools that are used for creating music for Ocarina of Time and Majora's Mask. It is recommended to download all the tools you need right now to save on needing to go back and forth between downloading and visiting the relevant wiki pages.</p>"},{"location":"getting-started/tools/#link-to-tools","title":"Link to Tools","text":""},{"location":"getting-started/tools/#seq64","title":"SEQ64","text":"<ul> <li>v1.0.0 required for audiobank editing</li> <li>v1.5.0 required for audiobank editing</li> <li>v2.3.2 recommended for sequence converting</li> </ul>"},{"location":"getting-started/tools/#rom-description","title":"ROM Description","text":"<ul> <li>Ocarina of Time <code>ntsc-u</code> <code>v1.0</code><ul> <li>ROM Description v2024.02.25</li> <li>ROM Description <code>gm sample naming</code> v20YY.MM.DD</li> </ul> </li> <li>Majora's Mask <code>ntsc-u</code> <code>v1.0</code><ul> <li>ROM Description <code>stable</code> v2024.02.25</li> <li>ROM Description <code>experimental</code> v2024.04.10</li> <li>ROM Description <code>experimental</code> <code>gm sample naming</code> v20YY.MM.DD</li> </ul> </li> </ul>"},{"location":"getting-started/tools/#seq64-abi-file","title":"SEQ64 ABI File","text":"<ul> <li>Zelda ABI \u00b12 semitone pitch bend scale</li> <li>Zelda ABI \u00b112 semitone pitch bend scale</li> </ul>"},{"location":"getting-started/tools/#midi-capable-digital-audio-workstation","title":"MIDI Capable Digital Audio Workstation","text":"<ul> <li>Fruity Loops Studio </li> <li>Sekaiju </li> <li>REAPER </li> </ul>"},{"location":"getting-started/tools/#soundfont-files","title":"Soundfont Files","text":"<ul> <li>Ocarina of Time Soundfont v2023.11.09</li> <li>Majora's Mask Soundfont v2024.02.20</li> </ul>"},{"location":"getting-started/tools/#nintendo-64-emulator","title":"Nintendo 64 Emulator","text":"<ul> <li>Simple64 recommended emulator</li> <li>Rosalie's Mupen GUI </li> <li>ares </li> <li>Project64 </li> </ul>"},{"location":"getting-started/tools/#rom-decompression-tool","title":"ROM Decompression Tool","text":"<ul> <li>nDEC </li> </ul>"},{"location":"getting-started/tools/#brief-summary-of-tools","title":"Brief Summary of Tools","text":"SEQ64ROM DescriptionDigital Audio WorkstationSoundfontN64 EmulatornDEC <p>SEQ64 is a tool created for making music sequences for first-party Nintendo 64 games (games made by Nntendo EAD/SRD). It has the capability of converting <code>.mid</code>, <code>.com</code>, and <code>.mus</code> files into sequences and vice versa; for <code>v1.0</code> and <code>v1.5</code> it has the ability to edit audiobank files as well, though this feature was removed for <code>v2.X.X</code> and is now dead for it due to ongoing decompilation of various Nintendo 64 games.</p> <p>SEQ64 v1.0 versus v1.5</p> <p>For all intents and purposes there are no differences in the main functionality of SEQ64 <code>v1.0</code> and <code>v1.5</code>, they are functionally identical, however SEQ64 <code>v1.0</code> has a light theme, and SEQ64 <code>v1.5</code> has a dark theme.</p> <p>The ROM Description is a data file containing music sequence format definition, audiobank binary format definition, addresses of key files and tables, and general program settings. This data file has been succeeded by the ABI data file for SEQ64 <code>v2.X.X</code> which only contains the music sequence format definition. The ROM descriptions provided with SEQ64 are very old, however the ROM descriptions linked to above have been edited with more information filled out.</p> <p>Digital Audio Workstations, or DAW for short, are where you create or edit conventional music files. For the purposes of creating music for Ocarina of Time and Majora's Mask you need a DAW that is capable of creating and editing <code>.mid</code> files. The DAWs linked above are the most common DAWs used within the randomizer communities.</p> <p>The Soundfont will allow you to preview your music similar to how it would sound in-game using a DAW capable of music playback with a soundfont allowing you to easily modify your music before you convert it. The soundfonts don't sound exactly like how in-game sounds will sound, however it is close enough to give you a good idea of how it will sound.</p> <p>An N64 Emulator is used to preview your music in-game, this will allow you to make sure there are no problems with the sequence or audiobank in-game. The emulators linked above are mostly standalone Nintendo 64 emulators, with only ares being a multi-system emulator. It is recommended to avoid RetroArch and other multi-system emulators and frontends.</p> <p>nDEC is used to decompress your ROM so that you are able to edit it in SEQ64. nDEC is simple enough to use as there is a file bundled with the program in the link provided that does all the work for you. Should you need detailed instructions on how to decompress your ROM you can find them on the ROM requirements page of the wiki.</p>"},{"location":"getting-started/tools/#obtaining-a-rom","title":"Obtaining a ROM","text":"<p>Along with the tools above, you will need to obtain a ROM of Ocarina of Time and/or Majora's Mask and decompress it using a decompression tool. Sharing ROM files is illegal as the files are copyrighted by Nintendo, so this wiki cannot share links to any websites containing the ROM files. MD5 and CRC32 values are useful for checking to make sure your ROM is the correct version and does not contain any errors. You can find them on the ROM requirements page of the wiki.</p> <p>Dumping ROMs</p> <p>If you have the capability, it is best to dump the ROM yourself from hardware, however all Virtual Console and Nintendo Switch Online versions of Ocarina of Time are version 1.2 and not version 1.0; for The Legend of Zelda: Collector's Edition the ROM files for Ocarina of Time and Majora's Mask are ROMs that were compiled specifically for The Legend of Zelda: Collector's Edition and cannot be used at all.</p>"},{"location":"vanilla-reference/","title":"Vanilla Information Reference","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"vanilla-reference/#placeholder","title":"Placeholder","text":"<p>placeholder blurb</p> <ul> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> <li> placeholder \u2013 placeholder</li> </ul>"},{"location":"vanilla-reference/audiobanks/","title":"Audiobank Reference","text":""},{"location":"vanilla-reference/audiobanks/#audiobank-reference","title":"Audiobank Reference","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>Below is a list of every audiobank in the vanilla ROMs of Ocarina of Time and Majora's Mask, every entry contains the following information:</p> <ul> <li>Audiobank index value</li> <li>Audiobank name (Same as the ROM Description name)</li> <li>Sequences that use the audiobank</li> <li>Number of instruments within the audiobank (indicated by <code>NUM_INST</code>)</li> <li>Number of drums within the audiobank (indicated by <code>NUM_DRUM</code>)</li> <li>Number of sound effects within the audiobank (indicated by <code>NUM_SFX</code>)</li> <li>Audiotable the audiobank uses (indicated by <code>ATnum</code>)</li> <li>Instrument list, drum list, and sound effect list (if there are no drums or sound effects there will be no list)</li> <li>MIDI program numbers you can use to access the instruments, drums, or sound effects</li> <li>MIDI note ranges for the different drum samples within the percussion kits</li> </ul> <p>Index Number to Note Number</p> <p>For instruments the pointer index value is equivalent to the program number, however for drums &amp; sound effects the pointer index value is equivalent to the MIDI note number minus <code>21</code>.</p> <p>MIDI Notation</p> <p>All notes (e.g. <code>C5 (60)</code>) are using MIDI notation, they are not using piano notation. Using piano notation, the equivalent to MIDI note <code>60</code> would be <code>C4</code> instead of <code>C5</code>.</p> Ocarina of Time AudiobanksMajora's Mask AudiobanksWaveform Instruments <p>Instrument Names</p> <p>Some instruments are named after the closest instrument known by the community, though some are named after the name of the sample that was used to create the instrument (e.g. Shine, Fantasia, Spaceosphere, Enigmatic).</p> Audiobank 0x00 (SFX Bank) <p>Audiobank <code>0x00</code> is the first of the two main SFX audiobanks. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x00: Master Sequence</code></li> <li><code>0x44: Ocarina Song: \"Saria's Song\"</code></li> <li><code>0x45: Ocarina Song: \"Epona's Song\"</code></li> <li><code>0x46: Ocarina Song: \"Zelda's Lullaby\"</code></li> <li><code>0x47: Ocarina Song: \"Sun's Song\"</code></li> <li><code>0x48: Ocarina Song: \"Song of Time\"</code></li> <li><code>0x49: Ocarina Song: \"Song of Storms\"</code></li> <li><code>0x6D: Unknown Technical Sequence</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 92</code></li> <li><code>NUM_DRUM: 4</code></li> <li><code>NUM_SFX: 136</code></li> <li><code>ATnum: 0</code></li> </ul> Audiobank 0x01 (Actor Sounds) <p>Audiobank <code>0x01</code> is the second of the two main sound effect audiobanks. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x00: Master Sequence</code></li> <li><code>0x6D: Unknown Technical Sequence</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 51</code></li> <li><code>NUM_DRUM: 1</code></li> <li><code>NUM_SFX: 41</code></li> <li><code>ATnum: 0</code></li> </ul> Audiobank 0x02 (Ambient Sounds) <p>Audiobank <code>0x02</code> is used pretty much for basically every ambient sound effect in the game. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x01: Nature Ambience</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 21</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 0</code></li> </ul> Audiobank 0x03 (Main Orchestra) <p>Audiobank <code>0x03</code> is one of the largest regular audiobanks which makes it the best candidate to overwrite when making a custom audiobank.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x02: Hyrule Field (Master)</code></li> <li><code>0x03: Hyrule Field (Day 1 - GG - Opening)</code></li> <li><code>0x04: Hyrule Field (Day 2 - GF - Trumpets 1)</code></li> <li><code>0x05: Hyrule Field (Day 3 - GF - Trumpets 2)</code></li> <li><code>0x06: Hyrule Field (Day 4 - GFEb - Clarinets)</code></li> <li><code>0x07: Hyrule Field (Day 5 - GCB - Strings, Pizz. Strings)</code></li> <li><code>0x08: Hyrule Field (Day 6 - GFEm - OoT Theme)</code></li> <li><code>0x09: Hyrule Field (Day 7 - CD - French Horns)</code></li> <li><code>0x0A: Hyrule Field (Day 8 - CD - Strings)</code></li> <li><code>0x0B: Hyrule Field (Day 9 - GG - French Horns)</code></li> <li><code>0x0C: Hyrule Field (Day 10 - GBbDb - French Horns)</code></li> <li><code>0x0D: Hyrule Field (Day 11 - AbCF - French Horns)</code></li> <li><code>0x0E: Hyrule Field (Day 12 - GG - Neutral Opening)</code></li> <li><code>0x0F: Hyrule Field (Battle 1 - OoT Theme Deconstruction)</code></li> <li><code>0x10: Hyrule Field (Battle 2 - Brass)</code></li> <li><code>0x11: Hyrule Field (Battle 3 - Brass, Marimba)</code></li> <li><code>0x12: Hyrule Field (Battle 4 - Stabs, OoT Theme)</code></li> <li><code>0x13: Hyrule Field (Battle 5 - Stabs, Ocarina)</code></li> <li><code>0x14: Hyrule Field (Sunset 1 - Oboe)</code></li> <li><code>0x15: Hyrule Field (Sunset 2 - Piccolo)</code></li> <li><code>0x16: Hyrule Field (Sunset 3 - Strings)</code></li> <li><code>0x17: Hyrule Field (Sunset 4 - OoT Theme)</code></li> <li><code>0x19: Kakariko Village (Strings, Adult) [2]</code></li> <li><code>0x1A: Battle: Regular Enemy</code></li> <li><code>0x1B: Battle: Boss [1]</code></li> <li><code>0x1F: Inside a House</code></li> <li><code>0x21: Fanfare: Boss Defeated!</code></li> <li><code>0x23: Fanfare: Ganondorf Appears!</code></li> <li><code>0x2B: Fanfare: Open a Treasure Chest!</code></li> <li><code>0x2D: Castle Courtyard</code></li> <li><code>0x31: Hyrule Field (Morning, Day 1)</code></li> <li><code>0x32: Fanfare: Get a Spiritual Stone!</code></li> <li><code>0x38: Battle: Miniboss</code></li> <li><code>0x3B: Fanfare: Escape from Lon Lon Ranch!</code></li> <li><code>0x43: Fanfare: Get a Medallion!</code></li> <li><code>0x4A: Intro Cutscene ~Fairy Flying~</code></li> <li><code>0x51: Fanfare: A Meeting with Zelda! (Generic Reunion Theme)</code></li> <li><code>0x52: Zelda's Theme ~Reprise~</code></li> <li><code>0x53: Fanfare: Pull the Master Sword!</code></li> <li><code>0x54: Ganondorf's Theme</code></li> <li><code>0x62: Castle Collapsing</code></li> <li><code>0x6C: Timed Minigame</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x04 (Deku Tree) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x1C: Inside the Deku Tree &amp; Secret Grottos</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 2</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 2</code></li> </ul> Audiobank 0x05 (Hylian Troupe) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x1D: Hyrule Castle Town</code></li> <li><code>0x3E: Lost Woods</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x06 (Title Screen) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x1E: Title Screen</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x07 (Jabu-Jabu's Belly) <p>Audiobank <code>0x06</code> is a bit of a special audiobank, it uses a different audiotable than other audiobanks and the offsets reference data later in the audiotable causing the ADPCM data for their samples to be split; however, <code>SEQ64</code> will automatically update their sample location upon importing.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x26: Jabu-Jabu's Belly</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 3</code></li> </ul> Audiobank 0x08 (Kakariko Village (Guitar)) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x27: Kakariko Village (Guitar, Child) [1]</code></li> <li><code>0x4C: Windmill Hut</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x09 (Harp &amp; Strings) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x28: Great Fairy's Fountain</code></li> <li><code>0x29: Zelda's Theme</code></li> <li><code>0x3A: Temple of Time</code></li> <li><code>0x3D: Fanfare: Learned a Song!</code></li> <li><code>0x4B: Deku Tree's Theme</code></li> <li><code>0x4F: Sheik's Theme</code></li> <li><code>0x57: Ptr to Great Fairy's Fountain (File Select)</code></li> <li><code>0x66: Ending Cutscene ~Ocarina of Time~</code></li> <li><code>0x6A: End Credits &amp; Staff Roll [4]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0A (Fire Temple) <p>This audiobank entry contains data not only for Ocarina of Time version <code>1.0</code>, but also version <code>1.2</code> of the game where the chants have been \"removed\" (the sequence has been changed, and the audiobank expanded instead of actually removing the data [needs confirmation]).</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2A: Fire Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> <p>Version Difference</p> <p>Version <code>1.2</code> has <code>14</code> instruments for the <code>NUM_INST</code> variable instead of <code>10</code>; the audiobank was expanded in subsequent versions of the game. [needs confirmation]</p> Audiobank 0x0B (Dodongo's Cavern) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x18: Dodongo's Cavern</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 4</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0C (Forest Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2C: Forest Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 3</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0D (Lon Lon Ranch) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2F: Lon Lon Ranch</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0E (Goron City) <p>Audiobank <code>0x0E</code> is a bit of a special audiobank, it uses a different audiotable than other audiobanks and the offsets reference data later in the audiotable causing the ADPCM data for their samples to be split; however, <code>SEQ64</code> will automatically update their sample location upon importing.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x30: Goron City</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 5</code></li> </ul> Audiobank 0x0F (Kokiri Forest) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x3C: Kokiri Forest</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x10 (Spirit Temple) <p>Audiobank <code>0x10</code> is a bit of a special audiobank, it uses a different audiotable than other audiobanks and the offsets reference data later in the audiotable causing the ADPCM data for their samples to be split; however, <code>SEQ64</code> will automatically update their sample location upon importing.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x3F: Spirit Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 6</code></li> </ul> Audiobank 0x11 (Horse Race) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x40: Horse Race</code></li> <li><code>0x41: Fanfare: Horse Race Victory!</code></li> <li><code>0x42: Ingo's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x12 (Warp Songs) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x25: Warp Song: \"Prelude of Light\"</code></li> <li><code>0x33: Warp Song: \"Bolero of Fire\"</code></li> <li><code>0x34: Warp Song: \"Minuet of Forest\"</code></li> <li><code>0x35: Warp Song: \"Serenade of Water\"</code></li> <li><code>0x36: Warp Song: \"Requiem of Spirit\"</code></li> <li><code>0x37: Warp Song: \"Nocturne of Shadow\"</code></li> <li><code>0x59: Fanfare: Open the Door of Time!</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x13 (Chamber of the Sages) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x4D: Chamber of the Sages</code></li> <li><code>0x56: Legend of Hyrule (Short Version)</code></li> <li><code>0x5D: Fanfare: Bridge of the Six Sages!</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 4</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x14 (Minigame Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x4E: Minigame Shop</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x15 (Zora's Domain) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x50: Zora's Domain</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x16 (Item Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x55: Item Shop</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 11</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x17 (Ice Cavern) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x58: Ice Cavern</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 4</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x18 (Shadow Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x5B: Shadow Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 9</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x19 (Water Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x5C: Water Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 8</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1A (Piano (Unused)) <p>This audiobank is not used anywhere in-game.</p> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1B (Gerudo Valley) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x5F: Gerudo Valley</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 12</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1C (Potion Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x60: Potion Shop</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1D (Koume &amp; Kotake's Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x61: Koume &amp; Kotake's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 12</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1E (Ganondorf's Organ) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2E: Ganon's Tower</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1F (Inside Ganon's Castle) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x63: Inside Ganon's Castle</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 8</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x20 (Adversarial Orchestra) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x5E: Fanfare: Seal of the Six Sages!</code></li> <li><code>0x64: Battle: Great Evil King, Ganondorf</code></li> <li><code>0x65: Battle: Ganon</code></li> <li><code>0x6B: Battle: Boss [2]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x21 (Ending Orchestra [1]) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x67: End Credits &amp; Staff Roll [1]</code></li> <li><code>0x69: End Credits &amp; Staff Roll [3]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x22 (Ending Orchestra [2]) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x68: End Credits &amp; Staff Roll [2]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x23 (Fanfare Orchestra) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x20: Fanfare: Game Over!</code></li> <li><code>0x22: Fanfare: Get an Item!</code></li> <li><code>0x24: Fanfare: Get a Heart Container!</code></li> <li><code>0x39: Fanfare: Get a Heart Piece!</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x24 (Kaepora Gaebora's Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x5A: Kaepora Gaebora's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x25 (Unused Bank) <p>Audiobank <code>0x25</code> only contains instruments with bad pointers and broken samples. This audiobank is not used anywhere in-game, it's most likely leftover data from the development cycle; however, since it is unused that means it can be used for anything. Do not import the instruments from this audiobank, they will only place garbage data.</p> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 2</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 0</code></li> </ul> <p>Instrument Names</p> <p>Some instruments are named after the closest instrument known by the community, though some are named after the name of the sample that was used to create the instrument (e.g. ELVES, PIT HIT 1, OMINOUSITY, EERIE WIND, TUNNEL RAIN, Mystic Pad, ICELAND 1, Fantasia, DANGER).</p> Audiobank 0x00 (SFX Bank) <p>Audiobank <code>0x00</code> is the first of the two main sound effect audiobanks. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x00: Master Sequence</code></li> <li><code>0x32: Ocarina Song: \"Epona's Song\"</code></li> <li><code>0x33: Ocarina Song: \"Sun's Song\"</code></li> <li><code>0x34: Ocarina Song: \"Song of Time\"</code></li> <li><code>0x35: Ocarina Song: \"Song of Storms\"</code></li> <li><code>0x47: Ocarina Song: \"Song of Soaring\"</code></li> <li><code>0x48: Ocarina Song: \"Song of Healing\"</code></li> <li><code>0x49: Ocarina Song: \"Song of Inverted Time\"</code></li> <li><code>0x4A: Ocarina Song: \"Song of Double Time\"</code></li> <li><code>0x51: Ocarina Song: \"Lullaby Intro\"</code></li> <li><code>0x5A: Don Gero's Theme (\"Frog Acapella\")</code></li> <li><code>0x5B: Ocarina Song: \"Sonata of Awakening\"</code></li> <li><code>0x5C: Ocarina Song: \"Goron Lullaby\"</code></li> <li><code>0x5D: Ocarina Song: \"New Wave Bossa Nova\"</code></li> <li><code>0x5E: Ocarina Song: \"Elegy of Emptiness\"</code></li> <li><code>0x5F: Ocarina Song: \"Oath to Order\"</code></li> <li><code>0x61: Ptr to Ocarina Song: \"Lullaby Intro\"</code></li> <li><code>0x7A: Music Box House (Silence)?</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 122</code></li> <li><code>NUM_DRUM: 16</code></li> <li><code>NUM_SFX: 197</code></li> <li><code>ATnum: 0</code></li> </ul> Audiobank 0x01 (Actor Sounds) <p>Audiobank <code>0x01</code> is the second of the two main sound effect audiobanks. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x00: Master Sequence</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 126</code></li> <li><code>NUM_DRUM: 1</code></li> <li><code>NUM_SFX: 88</code></li> <li><code>ATnum: 0</code></li> </ul> Audiobank 0x02 (Ambient Sounds) <p>Audiobank <code>0x02</code> is used pretty much for basically every ambient sound effect in the game. It's mostly guesswork for what most of the sound effects are as mapping them out is done completely by listening to the samples themselves in N64 Soundlist Tool (for which many samples are pitched up or down in-game, so the pitches are \"off\" when being played back) and figuring out what sound is used where in the game.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x01: Nature Ambience</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 21</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 0</code></li> </ul> <p>Info</p> <p>This audiobank has no drums or sound effects.</p> Audiobank 0x03 (Main Orchestra) <p>Audiobank <code>0x03</code> is one of the largest regular audiobanks which makes it the best candidate to overwrite when making a custom audiobank.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x02: Termina Field</code></li> <li><code>0x03: Pursuit Theme</code></li> <li><code>0x08: Fanfare: Event Failure [1]</code></li> <li><code>0x09: Fanfare: Event Failure [2]</code></li> <li><code>0x0F: Sharp's Curse: \"Melody of Darkness\"</code></li> <li><code>0x14: Pirates' Fortress</code></li> <li><code>0x19: Fanfare: Event Success!</code></li> <li><code>0x1A: Battle: Regular Enemy</code></li> <li><code>0x1B: Battle: Dungeon Boss</code></li> <li><code>0x1D: Termina Field Morning Theme</code></li> <li><code>0x1F: Inside a House</code></li> <li><code>0x21: Fanfare: Boss Defeated!</code></li> <li><code>0x25: Timed Minigame</code></li> <li><code>0x2B: Fanfare: Open a Treasure Chest!</code></li> <li><code>0x31: Mayor Dotour's Office</code></li> <li><code>0x38: Battle: Miniboss</code></li> <li><code>0x3D: Fanfare: The Truth Revealed</code></li> <li><code>0x75: Intro Cutscene: ~Lost in a Dark Wood~ [2]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x04 (Woods of Mystery) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x3E: Woods of Mystery</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x05 (Music Box House &amp; Guru-Guru) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x0E: Old Koume's Boat Cruise</code></li> <li><code>0x27: Music Box House: \"Farewell to Gibdo\"</code></li> <li><code>0x2E: Guru-Guru's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x06 (Fairy's Fountain) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x18: File Select</code></li> <li><code>0x28: Ptr to File Select</code></li> <li><code>0x29: Zelda's Theme</code></li> <li><code>0x52: Fanfare: Learned a Song!</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x07 (Romani Ranch) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2F: Romani Ranch</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x08 (Gorman Brothers' Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x40: Horse Race</code></li> <li><code>0x41: Fanfare: Horse Race Victory!</code></li> <li><code>0x42: Gorman Brothers' Theme</code></li> <li><code>0x72: Cremia's Carriage</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x09 (Bremen March) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x53: Bremen March</code></li> <li><code>0x55: Song of Soaring</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0A (Minigame Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x46: Minigame Shop Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0B (Zora Hall) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x36: Zora Hall</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0C (Item Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x44: Item Shop</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 11</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0D (Curiosity Shop) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2C: Marine Research Lab &amp; Curiosity Shop</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0E (Koume &amp; Kotake's Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x43: Koume &amp; Kotake's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 12</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x0F (Fanfare Orchestra) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x20: Fanfare: Game Over!</code></li> <li><code>0x22: Fanfare: Get an Item!</code></li> <li><code>0x24: Fanfare: Get a Heart Container!</code></li> <li><code>0x37: Fanfare: Get a Mask!</code></li> <li><code>0x39: Fanfare: Get a Heart Piece!</code></li> <li><code>0x77: Fanfare: Temple Appears!</code></li> <li><code>0x78: Fanfare: Temple Clear! (Short) [1]</code></li> <li><code>0x79: Fanfare: Temple Clear! (Long) [2]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x10 (Kaepora Gaebora's Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x45: Kaepora Gaebora's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x11 (Skull Kid's Band) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x04: Majora's Theme</code></li> <li><code>0x1E: Intro Cutscene ~Lost in a Dark Wood~ [1]</code></li> <li><code>0x69: Battle: Majora's Wrath</code></li> <li><code>0x6A: Battle: Majora's Incarnation</code></li> <li><code>0x6B: Battle: Majora's Mask</code></li> <li><code>0x7B: The Moon Enraged</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x12 (Giants' Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2D: Giants' Theme</code></li> <li><code>0x4B: Sonata of Awakening</code></li> <li><code>0x4C: Goron Lullaby</code></li> <li><code>0x4E: Elegy of Emptiness</code></li> <li><code>0x4F: Oath to Order</code></li> <li><code>0x54: Milk Bar Band: \"Ballad of the Wind Fish\"</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x13 (The Indigo-Gos) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x4D: New Wave Bossa Nova (Lulu's Voice Returns) [1]</code></li> <li><code>0x58: Mikau's Cry (Song Loop) [1]</code></li> <li><code>0x59: Mikau's Cry (Song Ends) [2]</code></li> <li><code>0x62: Song-Writing: Jam Session with Japas</code></li> <li><code>0x63: Song-Writing: Evan's Piano Solo</code></li> <li><code>0x64: Song-Writing: The Indigo-Gos Rehearsal</code></li> <li><code>0x67: New Wave Bossa Nova (Zora Eggs Hatch) [2]</code></li> <li><code>0x68: New Wave Bossa Nova (Lulu's Voice Returns) [3]</code></li> <li><code>0x6C: Band-Practice: Japas' Bass (Zelda 1 \"Dungeon\")</code></li> <li><code>0x6D: Band-Practice: Tijo's Drum (ALttP \"Cave\")</code></li> <li><code>0x6E: Band-Practice: Evan's Piano (Zelda 1 \"Continue?\")</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x14 (Woodfall Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x1C: Woodfall Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 6</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x15 (Snowhead Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x13: Snowhead</code></li> <li><code>0x65: Snowhead Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 13</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x16 (Aliens &amp; Great Bay Temple) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x0D: Aliens' Theme</code></li> <li><code>0x66: Great Bay Temple</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 8</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x17 (Astral Observatory &amp; Final Hours) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x05: Clock Tower</code></li> <li><code>0x0B: Song of Healing</code></li> <li><code>0x3A: Astral Observatory</code></li> <li><code>0x57: Final Hours</code></li> <li><code>0x60: Ptr to Final Hours</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 14</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x18 (Swordsman's School) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x50: Swordsman's School</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 11</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x19 (Termina Troupe) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x06: Stone Tower Temple</code></li> <li><code>0x07: Stone Tower Temple (Inverted)</code></li> <li><code>0x12: Deku palace</code></li> <li><code>0x15: Clock Town (Day 1)</code></li> <li><code>0x16: Clock Town (Day 2)</code></li> <li><code>0x17: Clock Town (Day 3)</code></li> <li><code>0x23: Ptr to Clock Town (Day 2)</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1A (Cave) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x06: Inside a Cave</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 4</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1B (Happy Mask Salesman) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x0A: Happy Mask Salesman's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 10</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1C (Southern Swamp) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x0C: Southern Swamp</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 12</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1D (Great Bay Coast) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x10: Great Bay Coast</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 11</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1E (Ikana Canyon) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x11: Ikana Canyon</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 9</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x1F (Rosa Sisters) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x2A: Rosa Sisters' Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 8</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x20 (Milk Bar) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x3C: Milk Bar</code></li> <li><code>0x56: Ptr to Milk Bar</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x21 (Epic Orchestra) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x6F: Ancient Castle of Ikana</code></li> <li><code>0x70: Giants' Theme</code></li> <li><code>0x7C: The Giants' Farewell</code></li> <li><code>0x7D: Tatl &amp; Tael Reunited (Generic Reunited Theme)</code></li> <li><code>0x7E: The Moon Destroyed</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x22 (Kamaro's Theme) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x71: Kamaro's Theme</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 1</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x23 (Title Screen) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x76: Title Screen</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 16</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x24 (Ending Orchestra [1]) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x74: End Credits &amp; Staff Roll [1]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x25 (Ending Orchestra [2]) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x7F: End Credits &amp; Staff Roll [2]</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 15</code></li> <li><code>NUM_DRUM: 64</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x26 (Goron's Theme) <p>Audiobank <code>0x26</code> is a bit of a special audiobank, it uses a different audiotable than other audiobanks and the offsets reference data later in the audiotable causing the ADPCM data for their samples to be split; however, <code>SEQ64</code> will automatically update their sample location upon importing.</p> <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x26: Goron Race</code></li> <li><code>0x30: Goron Village</code></li> <li><code>0x3F: Fanfare: Goron Race Victory!</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 2</code></li> </ul> Audiobank 0x27 (Keaton's Quiz) <p>Sequences that use this audiobank are listed below:</p> <ul> <li><code>0x73: Keaton's Quiz</code></li> </ul> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 8</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 1</code></li> </ul> Audiobank 0x28 (Unused Bank) <p>Audiobank <code>0x28</code> only contains instruments with bad pointers and broken samples. This audiobank is not used anywhere in-game, it's most likely leftover data from the development cycle; however, since it is unused that means it can be used for anything. Do not import the instruments from this audiobank, they will only place garbage data.</p> <p>The number of instruments, drum, and sound effects, as well as the audiotable the audiobank uses, are listed below:</p> <ul> <li><code>NUM_INST: 5</code></li> <li><code>NUM_DRUM: 0</code></li> <li><code>NUM_SFX: 0</code></li> <li><code>ATnum: 0</code></li> </ul> <p>The waveform instruments are a collection of synth waves available at all times for all audiobanks. These instruments cannot be assigned via a MIDI program name as they go over the 7-Bit data value limit of <code>127 (0x7F)</code> (they are accessed using <code>128 (0x80)</code> and above), so they must be assigned inside the sequence.</p> <p>Instrument 0x87 and Above</p> <p>\"Waveforms\" above <code>0x87</code> are not actual instruments with actual sample data like <code>0x80</code> to <code>0x87</code>, they instead use compiled assembly code and interpret it as if it were sample data. The starting address uses the audio thread and adds a random offset between <code>0x0000</code> and <code>0xFFF0</code>; this is volatile and may cause issues so it is recommended to avoid using them.</p> <p>List of Waveforms: <pre><code>0x80. Sawtooth Wave\n0x81. Triangle Wave\n0x82. Sine Wave\n0x83. Square Wave\n0x84. White Noise\n0x85. D_801D4790\n0x86. Pulse Wave (Duty Cycle: 12.5%)\n0x87. Pulse Wave (Duty Cycle: 25%)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-number-0x00-to-0x5b","title":"Instruments (Program Number: 0x00 to 0x5B)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x00</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x5B (91)</code></p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Some sound effects using the instrument structure have multiple samples, the sound effects using multiple samples indicate which region contains which sound effect sample (e.g. <code>0x00: Low: SFX name, Mid: SFX Name, High: SFX Name</code>). Any sound effects without multiple regions use the mid (primary) sample.</p> <p>Instrument List: <pre><code>0x00. Dirt Footstep SFX?\n0x01. Sand Footstep SFX?\n0x02. Stone Footstep SFX\n0x03. Water Footstep SFX\n0x04. Splash Footstep SFX\n0x05. Unknown SFX (Rock?)\n0x06. Unknown SFX (Footstep?)\n0x07. Grass Footstep SFX\n0x08. Chest reveal SFX, Others?\n0x09. Snow Footstep SFX?\n0x0A. Unknown SFX (Rock related?)\n0x0B. Unknown SFX (Footstep?)\n0x0C. Splash SFX 1\n0x0D. Splash SFX 2\n0x0E. Unknown Sand SFX (Quicksand?)\n0x0F. Mid: Egg Hatch SFX 1, High: Wind SFX\n0x10. Unknown SFX (Sand?)\n0x11. Unknown White Noise SFX 1\n0x12. Unknown White Noise SFX 2\n0x13. Splash SFX 3\n0x14. Swimming SFX\n0x15. Mid: Drum SFX?, High: Gunshot SFX\n0x16. Footstep SFX?\n0x17. Footstep SFX ?\n0x18. Iron Boot Footstep SFX\n0x19. Hover Boot/Ice Footstep SFX\n0x1A. Mid: Sword Clink SFX 1, High: Sword Clink SFX 2\n0x1B. Scratch SFX?\n0x1C. Link Sword Sheathe SFX\n0x1D. Link Sword Unsheathe SFX\n0x1E. Whoosh SFX\n0x1F. Unknown SFX\n0x20. Metal Clang SFX\n0x21. Mid: Bow Draw SFX, High: Bow Twang SFX\n0x22. Mid: Hookshot Chain SFX\n0x23. Mid: Bombchu Fuse SFX, High: Bombchu Moving SFX\n0x24. Megaton Hammer SFX (MM Bank Stamp)\n0x25. Like Like SFX?\n0x26. Arrow Hitting Wood/Kakariko Child Hammer SFX\n0x27. Whoosh SFX 2 (Boomerang?)\n0x28. Unknown SFX (Rock related?)\n0x29. Mid: Pop SFX, High: Cursor SFX?\n0x2A. Robotic Buzzing SFX\n0x2B. Mid: Unknown SFX (A Thud Sound?)\n0x2C. Mid: Lens of Truth SFX, High: Whoosh SFX 3\n0x2D. Mid: Wooden Door Open SFX, High: Wooden Door Close SFX\n0x2E. Mid: Blue Warp SFX?, High: Squeaking SFX?\n0x2F. Explosion SFX\n0x30. Horse Gallop SFX\n0x32. Mid: Horse Whinny SFX, High: Horse Snort SFX\n0x31. \u26d4 (nullptr)\n0x33. Mid: Running Water SFX, High: White Noise SFX 1 (Waterfall)\n0x34. Ocarina SFX 1 (Special Effect)\n0x35. Ocarina SFX 2\n0x36. Mid: Stone Moving on Stone SFX, High: Metal Door Closing SFX\n0x37. Rock Rolling SFX?\n0x38. Mid: Lava Bubbling SFX\n0x39. Chain Pulley SFX (Hyrule Castle Gate)\n0x3A. Mid: Chicken Cluck SFX, High: Frog Ribbit SFX\n0x3B. Door Thud SFX\n0x3C. Wind SFX\n0x3D. Mid: Rooster Crow SFX, High: Wolf Howl SFX\n0x3E. Light Splash SFX (Fish?)\n0x3F. Mid: Wooden Clack SFX, High: Stick Clack SFX\n0x40. Fairy Flying SFX 1? (Fairy Related)\n0x41. Unknown SFX\n0x42. Mid: Door Creak SFX, High: Door Creak Low SFX\n0x43. Unknown SFX\n0x44. Glass Hum SFX\n0x45. Fairy Flying SFX 2? (Fairy Related)\n0x46. Mid: Electric SFX (Barinade?), High: Pot Break SFX\n0x47. Water Drip SFX\n0x48. Water Bubbling SFX (Morpha Cutscene?)\n0x49. Mid: Fire Crackle SFX, High: Cow Moo SFX\n0x4A. Mid: Balloon Inflate SFX, High: Thunder SFX\n0x4B. Unknown SFX\n0x4C. Unknown SFX (Pop? Bang? Thud?)\n0x4D. Mid: Wind SFX?, High: Revving SFX\n0x4E. Mid: Cloth Flutter SFX\n0x4F. Mid: Castle Town Crowd SFX, High: Glass Shatter SFX (Ice?)\n0x50. Scratch SFX 2?\n0x51. Mid: Dodongo Roar SFX, High: Dog Bark SFX\n0x52. Woodwind Noise SFX\n0x53. Accordion Noise SFX\n0x54. Piano/Harp Noise SFX 1\n0x55. Malon Voice SFX\n0x56. Whistle Noise SFX?\n0x57. Mid: Wrong Note SFX, High: Unknown Metal Sound SFX\n0x58. Bird Chirp SFX\n0x59. Piano/Harp Noise SFX 2\n0x5A. Mid: Camera Alignment SFX, High: Lock-on SFX\n0x5B. Metal Chain SFX\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#sound-effects-program-number-7e","title":"Sound Effects (Program Number: 7E)","text":"<p>Below is a list of the \"sound effects\" inside of audiobank <code>0x00</code>. These work nearly identical to how percussion sets work except for how they are structured, they cannot be imported into audiobanks because their structure is built directly into a pointer array within <code>&lt;absfxlist&gt;</code>.</p> <p>You can access these sound effects when using this audiobank using MIDI program number(s): <code>0x7E (126)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Sound effects can only have one sample per sound effect, but some sound effect indexes point to the same sample in the audiobank. The indexes that use the same sample as another index are marked: <code>[Same sample as (index value)]</code></p> <p>Sound Effect List: <pre><code>0x00. [absfxlist:0]\n0x01. [absfxlist:1]\n0x02. [absfxlist:2]\n0x03. [absfxlist:3]\n0x04. [absfxlist:4]\n0x05. [absfxlist:5]\n0x06. [absfxlist:6]\n0x07. [absfxlist:7]\n0x08. [absfxlist:8]\n0x09. [absfxlist:9]\n0x0A. [absfxlist:10]\n0x0B. [absfxlist:11]\n0x0C. [absfxlist:12]\n0x0D. [absfxlist:13]\n0x0E. [absfxlist:14]\n0x0F. [absfxlist:15]\n0x10. [absfxlist:16]\n0x11. [absfxlist:17]\n0x12. [absfxlist:18]\n0x13. [absfxlist:19]\n0x14. [absfxlist:20, absfxlist:64]\n0x15. [absfxlist:21]\n0x16. [absfxlist:22]\n0x17. [absfxlist:23]\n0x18. [absfxlist:24]\n0x19. [absfxlist:25]\n0x1A. [absfxlist:26]\n0x1B. [absfxlist:27]\n0x1C. [absfxlist:28]\n0x1D. [absfxlist:29]\n0x1E. [absfxlist:30]\n0x1F. [absfxlist:31]\n0x20. [absfxlist:32]\n0x21. [absfxlist:33]\n0x22. [absfxlist:34]\n0x23. [absfxlist:35]\n0x24. [absfxlist:36]\n0x25. [absfxlist:37]\n0x26. [absfxlist:38]\n0x27. [absfxlist:39]\n0x28. [absfxlist:40]\n0x29. [absfxlist:41]\n0x2A. [absfxlist:42]\n0x2B. [absfxlist:43]\n0x2C. [absfxlist:44]\n0x2D. [absfxlist:45]\n0x2E. [absfxlist:46]\n0x2F. [absfxlist:47]\n0x30. [absfxlist:48]\n0x31. [absfxlist:49]\n0x32. [absfxlist:50]\n0x33. [absfxlist:51]\n0x34. [absfxlist:52]\n0x35. [absfxlist:53]\n0x36. [absfxlist:54]\n0x37. [absfxlist:55]\n0x38. [absfxlist:56]\n0x39. [absfxlist:57, absfxlist:102]\n0x3A. [absfxlist:58, absfxlist:103]\n0x3B. [absfxlist:59, absfxlist:104]\n0x3C. [absfxlist:60]\n0x3D. [absfxlist:61]\n0x3E. [absfxlist:62]\n0x3F. [absfxlist:63]\n0x40. [absfxlist:20, absfxlist:64]\n0x41. [absfxlist:65]\n0x42. [absfxlist:66]\n0x43. [absfxlist:67]\n0x44. \u26d4 (nullptr)\n0x45. [absfxlist:69]\n0x46. [absfxlist:70]\n0x47. [absfxlist:71]\n0x48. [absfxlist:72]\n0x49. [absfxlist:73]\n0x4A. [absfxlist:74]\n0x4B. [absfxlist:75]\n0x4C. [absfxlist:76]\n0x4D. [absfxlist:77]\n0x4E. [absfxlist:78]\n0x4F. [absfxlist:79]\n0x50. [absfxlist:80]\n0x51. [absfxlist:81]\n0x52. [absfxlist:82]\n0x53. [absfxlist:83]\n0x54. [absfxlist:84]\n0x55. [absfxlist:85]\n0x56. [absfxlist:86]\n0x57. [absfxlist:87]\n0x58. [absfxlist:88]\n0x59. [absfxlist:89]\n0x5A. [absfxlist:90]\n0x5B. [absfxlist:91]\n0x5C. [absfxlist:92]\n0x5D. [absfxlist:93]\n0x5E. [absfxlist:94]\n0x5F. [absfxlist:95]\n0x60. [absfxlist:96]\n0x61. [absfxlist:97]\n0x62. [absfxlist:98]\n0x63. [absfxlist:99]\n0x64. [absfxlist:100]\n0x65. [absfxlist:101]\n0x66. [absfxlist:57, absfxlist:102]\n0x67. [absfxlist:58, absfxlist:103]\n0x68. [absfxlist:59, absfxlist:104]\n0x69. [absfxlist:105]\n0x6A. [absfxlist:106]\n0x6B. [absfxlist:107]\n0x6C. [absfxlist:108]\n0x6D. [absfxlist:109]\n0x6E. [absfxlist:110]\n0x6F. [absfxlist:111]\n0x70. [absfxlist:112]\n0x71. [absfxlist:113]\n0x72. [absfxlist:114]\n0x73. [absfxlist:115]\n0x74. [absfxlist:116]\n0x75. [absfxlist:117]\n0x76. [absfxlist:118]\n0x77. [absfxlist:119]\n0x78. [absfxlist:120]\n0x79. [absfxlist:121]\n0x7A. [absfxlist:122]\n0x7B. [absfxlist:123]\n0x7C. [absfxlist:124]\n0x7D. [absfxlist:125]\n0x7E. [absfxlist:126]\n0x7F. [absfxlist:127]\n0x80. [absfxlist:128]\n0x81. [absfxlist:129]\n0x82. [absfxlist:130]\n0x83. [absfxlist:131]\n0x84. [absfxlist:132]\n0x85. \u26d4 (nullptr)\n0x86. [absfxlist:134]\n0x87. [absfxlist:135]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-number-7f","title":"Drums (Program Number: 7F)","text":"<p>Below is a list of the \"drums\" inside of audiobank <code>0x00</code>. Unlike instrument index pointers, percussion index pointers represent a MIDI note instead of a program number.</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Drum List: <pre><code>0x00. [abdrumlist:0]\n0x01. [abdrumlist:1]\n0x02. [abdrumlist:2]\n0x03. [abdrumlist:3]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-number-0x00-to-0x7d","title":"Instruments (Program Number: 0x00 to 0x7D)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x01</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x7D (125)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.*</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Some sound effects using the instrument structure have multiple samples, the sound effects using multiple samples indicate which region contains which sound effect sample (e.g. <code>0x00: Low: SFX name, Mid: SFX Name, High: SFX Name</code>). Any sound effects without multiple regions use the mid (primary) sample.</p> <p>Instrument List: <pre><code>0x00. Pop/Thud SFX (Shabom?)\n0x01. Dodongo Roar SFX\n0x02. Balloon Inflate SFX\n0x03. Doom Monster Roar SFX\n0x04. Skulltula Skitter SFX\n0x05. Spider Egg Hatch SFX\n0x06. Rock Explosion SFX\n0x07. Unknown Buzz SFX (Creaking? Frog?)\n0x08. Poe Hover SFX?\n0x09. Clicking SFX (Keese Attack?)\n0x0A. Wing Flap SFX\n0x0B. Volvagia Pained Roar SFX\n0x0C. Scratch/Electric SFX (Skulltula Related?)\n0x0D. \"Ah\" SFX (Frog Croak?)\n0x0E. SM64 Boo Laugh SFX (Lizalfos Laugh?)\n0x0F. Mid: Lizalfos SFX, High: Lizalfos Footstep SFX\n0x10. Deku Scrub Voice SFX\n0x11. Glass Break SFX (Ice?)\n0x12. Wind SFX 1\n0x13. Unknown White Noise SFX\n0x14. Mid: Gulp SFX, High: Stick Clack SFX\n0x15. Deku Baba Beak Snap SFX\n0x16. Wind SFX 2\n0x17. Crow/Eagle/Bat SFX\n0x18. Mid: Buzz SFX, High: Deku Baba Breath SFX\n0x19. Stalfos Sword Swing SFX\n0x1A. Stalchild Laughing SFX\n0x1B. Stalfos Laughing SFX\n0x1C. Whip SFX (Used for Garo in MM)\n0x1D. Thunder SFX\n0x1E. Electric SFX (Ganon Summoning Orb)\n0x1F. Phantom/Regular Ganon Hover SFX\n0x20. Phantom Ganon Attack SFX?\n0x21. Whoosh SFX\n0x22. Thunder SFX 2\n0x23. Ganon Related SFX?\n0x24. Ganondorf \"Ha!\" SFX\n0x25. Flare Dancer SFX?\n0x26. Splash SFX\n0x27. Splish SFX (Footstep on Watery Surface)\n0x28. Mid: Boulder Explosion SFX, High: Lava Bubbling SFX\n0x29. Unknown Monster Roar SFX (King Dodongo/Volvagia?)\n0x2A. Mid: Redead/Gibdo SFX (Pamela's Father in MM), High: Goron Falling Asleep SFX\n0x2B. Poe Laugh SFX (SM64 Boo)\n0x2C. Water Bubbling SFX (Morpha Cutscene?)\n0x2D. Mid: Unknown Growl SFX, High: Poe Defeat Shriek SFX\n0x2E. Mid: Goron \"Hmm?\" SFX, High: Goron \"Ooooh...\" SFX\n0x2F. Mid: Metal Clink SFX, High: Leever SFX? (Sandy Sound)\n0x30. Mid: Bongo Bongo Drum Hit SFX, High: Unknown Voice SFX\n0x31. Mid: Wolfos Howl, High: Guay Caw SFX\n0x32. Mid: Witch Argument SFX, High: Metal Clank SFX (Iron Knuckle?)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#sound-effects-program-number-7e_1","title":"Sound Effects (Program Number: 7E)","text":"<p>Below is a list of the \"sound effects\" inside of audiobank <code>0x01</code>. These work nearly identical to how percussion sets work except for how they are structured, they cannot be imported into audiobanks because their structure is built directly into a pointer array within <code>&lt;absfxlist&gt;</code>.</p> <p>You can access these sound effects when using this audiobank using MIDI program number(s): <code>0x7E (126)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.*</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Sound effects can only have one sample per sound effect, but some sound effect indexes point to the same sample in the audiobank. The indexes that use the same sample as another index are marked: <code>[Same sample as (index value)]</code></p> <p>Sound Effect List: <pre><code>0x00. [absfxlist:0]\n0x01. [absfxlist:1]\n0x02. [absfxlist:2]\n0x03. [absfxlist:3]\n0x04. [absfxlist:4]\n0x05. [absfxlist:5]\n0x06. [absfxlist:6]\n0x07. [absfxlist:7]\n0x08. [absfxlist:8]\n0x09. [absfxlist:9]\n0x0A. [absfxlist:10]\n0x0B. [absfxlist:11]\n0x0C. [absfxlist:12]\n0x0D. [absfxlist:13]\n0x0E. [absfxlist:14]\n0x0F. [absfxlist:15]\n0x10. [absfxlist:16]\n0x11. [absfxlist:17]\n0x12. [absfxlist:18]\n0x13. [absfxlist:19]\n0x14. [absfxlist:20]\n0x15. [absfxlist:21]\n0x16. [absfxlist:22]\n0x17. [absfxlist:23]\n0x18. [absfxlist:24]\n0x19. [absfxlist:25]\n0x1A. [absfxlist:26]\n0x1B. [absfxlist:27]\n0x1C. [absfxlist:28]\n0x1D. [absfxlist:29]\n0x1E. [absfxlist:30]\n0x1F. [absfxlist:31]\n0x20. [absfxlist:32]\n0x21. [absfxlist:33]\n0x22. [absfxlist:34]\n0x23. [absfxlist:35]\n0x24. [absfxlist:36]\n0x25. [absfxlist:37]\n0x26. [absfxlist:38]\n0x27. [absfxlist:39]\n0x28. [absfxlist:40]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-number-7f_1","title":"Drums (Program Number: 7F)","text":"<p>Below is a list of the \"drums\" inside of audiobank <code>0x00</code>. There's one single drum pointer, but it's just a null pointer value with no sample being pointed to.</p> <p>Drum List: <pre><code>0x00. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x14","title":"Instruments (Program Name: 0x00 to 0x14)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x02</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x14 (20)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Bird Chirp SFX 1\n0x02. Bird Chitter SFX\n0x03. Bird Trill SFX\n0x04. Bird Song SFX\n0x05. Bird Chirp SFX 2\n0x06. Crow Caw SFX\n0x07. Swamp Bird SFX (Some type of honking bird)\n0x08. Peacock SFX?\n0x09. Bird Twitter SFX\n0x0A. Rooster Crow SFX\n0x0B. Owl Hoot SFX\n0x0C. Eagle SFX\n0x0D. Bird Chirp SFX 3\n0x0E. Guay Caw SFX\n0x0F. White Noise SFX (Waterfall)\n0x10. Wind SFX (Haunted Wasteland Sandstorm)\n0x11. Wind SFX 2 (Haunted Wasteland Sandstorm)\n0x12. Rain SFX\n0x13. Thunder SFX\n0x14. Thunder SFX 2\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x03</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.*</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. Clarinet\n0x03. Bassoon\n0x04. French Horn\n0x05. Trumpet\n0x06. Trombone\n0x07. Tuba\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. Piano\n0x0E. Harp\n0x0F. Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x03</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x01","title":"Instruments (Program Name: 0x00 to 0x01)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x04</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x01 (1)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Enigmatic\n0x01. Enigmatic ALT\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x05</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Ocarina\n0x02. Bassoon\n0x03. Oboe\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_1","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x05</code>. This percussion set is referred to as \"Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Tambourine Slap: <code>A1 (21)</code> to <code>B3 (47)</code> - Tambourine Tap: <code>C4 (48)</code> to <code>C\u266f4 (49)</code> - Tambourine Shake: <code>D4 (50)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Tambourine Slap [1]\n0x01. Tambourine Slap [2]\n0x02. Tambourine Slap [3]\n0x03. Tambourine Slap [4]\n0x04. Tambourine Slap [5]\n0x05. Tambourine Slap [6]\n0x06. Tambourine Slap [7]\n0x07. Tambourine Slap [8]\n0x08. Tambourine Slap [9]\n0x09. Tambourine Slap [10]\n0x0A. Tambourine Slap [11]\n0x0B. Tambourine Slap [12]\n0x0C. Tambourine Slap [13]\n0x0D. Tambourine Slap [14]\n0x0E. Tambourine Slap [15]\n0x0F. Tambourine Slap [16]\n0x10. Tambourine Slap [17]\n0x11. Tambourine Slap [18]\n0x12. Tambourine Slap [19]\n0x13. Tambourine Slap [20]\n0x14. Tambourine Slap [21]\n0x15. Tambourine Slap [22]\n0x16. Tambourine Slap [23]\n0x17. Tambourine Slap [24]\n0x18. Tambourine Slap [25]\n0x19. Tambourine Slap [26]\n0x1A. Tambourine Slap [27]\n0x1B. Tambourine Tap [1]\n0x1C. Tambourine Tap [2]\n0x1D. Tambourine Shake [1]\n0x1E. Tambourine Shake [2]\n0x1F. Tambourine Shake [3]\n0x20. Tambourine Shake [4]\n0x21. Tambourine Shake [5]\n0x22. Tambourine Shake [6]\n0x23. Tambourine Shake [7]\n0x24. Tambourine Shake [8]\n0x25. Tambourine Shake [9]\n0x26. Tambourine Shake [10]\n0x27. Tambourine Shake [11]\n0x28. Tambourine Shake [12]\n0x29. Tambourine Shake [13]\n0x2A. Tambourine Shake [14]\n0x2B. Tambourine Shake [15]\n0x2C. Tambourine Shake [16]\n0x2D. Tambourine Shake [17]\n0x2E. Tambourine Shake [18]\n0x2F. Tambourine Shake [19]\n0x30. Tambourine Shake [20]\n0x31. Tambourine Shake [21]\n0x32. Tambourine Shake [22]\n0x33. Tambourine Shake [23]\n0x34. Tambourine Shake [24]\n0x35. Tambourine Shake [25]\n0x36. Tambourine Shake [25*]\n0x37. Tambourine Shake [25*]\n0x38. Tambourine Shake [25*]\n0x39. Tambourine Shake [25*]\n0x3A. Tambourine Shake [25*]\n0x3B. Tambourine Shake [25*]\n0x3C. Tambourine Shake [25*]\n0x3D. Tambourine Shake [25*]\n0x3E. Tambourine Shake [25*]\n0x3F. Tambourine Shake [25*]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x06</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Ocarina\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. Piano\n0x0E. Piano ALT (Splits: 22 &amp; 44, Release: 93)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x07</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Wind\n0x01. \u26d4 (nullptr)\n0x02. Synth Strings\n0x03. Crunch Roar\n0x04. Crunch Roar\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_2","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x07</code>. This percussion set is referred to as \"Trip Hopping Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Trip Hopping Kick: <code>A1 (21)</code> to <code>C\u266f3 (37)</code> - Trip Hopping Snare: <code>D3 (38)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Trip Hopping Kick [1]\n0x01. Trip Hopping Kick [2]\n0x02. Trip Hopping Kick [3]\n0x03. Trip Hopping Kick [4]\n0x04. Trip Hopping Kick [5]\n0x05. Trip Hopping Kick [6]\n0x06. Trip Hopping Kick [7]\n0x07. Trip Hopping Kick [8]\n0x08. Trip Hopping Kick [9]\n0x09. Trip Hopping Kick [10]\n0x0A. Trip Hopping Kick [11]\n0x0B. Trip Hopping Kick [12]\n0x0C. Trip Hopping Kick [13]\n0x0D. Trip Hopping Kick [14]\n0x0E. Trip Hopping Kick [15]\n0x0F. Trip Hopping Kick [16]\n0x10. Trip Hopping Kick [17]\n0x11. Trip Hopping Snare [1]\n0x12. Trip Hopping Snare [2]\n0x13. Trip Hopping Snare [3]\n0x14. Trip Hopping Snare [4]\n0x15. Trip Hopping Snare [5]\n0x16. Trip Hopping Snare [6]\n0x17. Trip Hopping Snare [7]\n0x18. Trip Hopping Snare [8]\n0x19. Trip Hopping Snare [9]\n0x1A. Trip Hopping Snare [10]\n0x1B. Trip Hopping Snare [11]\n0x1C. Trip Hopping Snare [12]\n0x1D. Trip Hopping Snare [13]\n0x1E. Trip Hopping Snare [14]\n0x1F. Trip Hopping Snare [15]\n0x20. Trip Hopping Snare [16]\n0x21. Trip Hopping Snare [17]\n0x22. Trip Hopping Snare [18]\n0x23. Trip Hopping Snare [19]\n0x24. Trip Hopping Snare [20]\n0x25. Trip Hopping Snare [21]\n0x26. Trip Hopping Snare [22]\n0x27. Trip Hopping Snare [23]\n0x28. Trip Hopping Snare [24]\n0x29. Trip Hopping Snare [25]\n0x2A. Trip Hopping Snare [26]\n0x2B. Trip Hopping Snare [27]\n0x2C. Trip Hopping Snare [28]\n0x2D. Trip Hopping Snare [29]\n0x2E. Trip Hopping Snare [30]\n0x2F. Trip Hopping Snare [31]\n0x30. Trip Hopping Snare [32]\n0x31. Trip Hopping Snare [33]\n0x32. Trip Hopping Snare [34]\n0x33. Trip Hopping Snare [35]\n0x34. Trip Hopping Snare [36]\n0x35. Trip Hopping Snare [37]\n0x36. Trip Hopping Snare [38]\n0x37. Trip Hopping Snare [39]\n0x38. Trip Hopping Snare [40]\n0x39. Trip Hopping Snare [41]\n0x3A. Trip Hopping Snare [42]\n0x3B. Trip Hopping Snare [43]\n0x3C. Trip Hopping Snare [44]\n0x3D. Trip Hopping Snare [45]\n0x3E. Trip Hopping Snare [46]\n0x3F. Trip Hopping Snare [47]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_1","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x08</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harmonica\n0x01. Nylon Guitar (Release: 233)\n0x02. Nylon Guitar (Release: 234)\n0x03. Ocarina\n0x04. Glockenspiel\n0x05. Accordion\n0x06. Accordion\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_3","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x08</code>. This percussion set is referred to as \"Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Tambourine Slap: <code>A1 (21)</code> to <code>B3 (47)</code> - Tambourine Tap: <code>C4 (48)</code> to <code>C\u266f4 (49)</code> - Tambourine Shake: <code>D4 (50)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Tambourine Slap [1]\n0x01. Tambourine Slap [2]\n0x02. Tambourine Slap [3]\n0x03. Tambourine Slap [4]\n0x04. Tambourine Slap [5]\n0x05. Tambourine Slap [6]\n0x06. Tambourine Slap [7]\n0x07. Tambourine Slap [8]\n0x08. Tambourine Slap [9]\n0x09. Tambourine Slap [10]\n0x0A. Tambourine Slap [11]\n0x0B. Tambourine Slap [12]\n0x0C. Tambourine Slap [13]\n0x0D. Tambourine Slap [14]\n0x0E. Tambourine Slap [15]\n0x0F. Tambourine Slap [16]\n0x10. Tambourine Slap [17]\n0x11. Tambourine Slap [18]\n0x12. Tambourine Slap [19]\n0x13. Tambourine Slap [20]\n0x14. Tambourine Slap [21]\n0x15. Tambourine Slap [22]\n0x16. Tambourine Slap [23]\n0x17. Tambourine Slap [24]\n0x18. Tambourine Slap [25]\n0x19. Tambourine Slap [26]\n0x1A. Tambourine Slap [27]\n0x1B. Tambourine Tap [1]\n0x1C. Tambourine Tap [2]\n0x1D. Tambourine Shake [1]\n0x1E. Tambourine Shake [2]\n0x1F. Tambourine Shake [3]\n0x20. Tambourine Shake [4]\n0x21. Tambourine Shake [5]\n0x22. Tambourine Shake [6]\n0x23. Tambourine Shake [7]\n0x24. Tambourine Shake [8]\n0x25. Tambourine Shake [9]\n0x26. Tambourine Shake [10]\n0x27. Tambourine Shake [11]\n0x28. Tambourine Shake [12]\n0x29. Tambourine Shake [13]\n0x2A. Tambourine Shake [14]\n0x2B. Tambourine Shake [15]\n0x2C. Tambourine Shake [16]\n0x2D. Tambourine Shake [17]\n0x2E. Tambourine Shake [18]\n0x2F. Tambourine Shake [19]\n0x30. Tambourine Shake [20]\n0x31. Tambourine Shake [21]\n0x32. Tambourine Shake [22]\n0x33. Tambourine Shake [23]\n0x34. Tambourine Shake [24]\n0x35. Tambourine Shake [25]\n0x36. Tambourine Shake [25*]\n0x37. Tambourine Shake [25*]\n0x38. Tambourine Shake [25*]\n0x39. Tambourine Shake [25*]\n0x3A. Tambourine Shake [25*]\n0x3B. Tambourine Shake [25*]\n0x3C. Tambourine Shake [25*]\n0x3D. Tambourine Shake [25*]\n0x3E. Tambourine Shake [25*]\n0x3F. Tambourine Shake [25*]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_1","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x09</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harp\n0x01. Harp\n0x02. Harp\n0x03. Harp ALT (Mid Only)\n0x04. Strings ALT (Attack Time: 32)\n0x05. Ocarina\n0x06. Male Choir\n0x07. Male Choir\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_4","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x09</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0d","title":"Instruments (Program Name: 0x00 to 0x0D)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0A</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0D (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Chant 1 &amp; 2\n0x01. Chant 3\n0x02. Chant 3\n0x03. Bass Marimba\n0x04. \u26d4 (nullptr)\n0x05. Wind\n0x06. Metal Bell\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n\u26a0\ufe0f Below are for Version 1.2 Only \u26a0\ufe0f\n0x0A. Male Choir\n0x0B. Male Choir\n0x0C. Female Choir\n0x0D. Female Choir\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_5","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0A</code>. This percussion set is referred to as \"Lute &amp; Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Lute &amp; Tambourine Low: <code>A1 (21)</code> to <code>C\u266f3 (37)</code> - Lute &amp; Tambourine High: <code>D3 (38)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Lute &amp; Tambourine Low [1]\n0x01. Lute &amp; Tambourine Low [2]\n0x02. Lute &amp; Tambourine Low [3]\n0x03. Lute &amp; Tambourine Low [4]\n0x04. Lute &amp; Tambourine Low [5]\n0x05. Lute &amp; Tambourine Low [6]\n0x06. Lute &amp; Tambourine Low [7]\n0x07. Lute &amp; Tambourine Low [8]\n0x08. Lute &amp; Tambourine Low [9]\n0x09. Lute &amp; Tambourine Low [10]\n0x0A. Lute &amp; Tambourine Low [11]\n0x0B. Lute &amp; Tambourine Low [12]\n0x0C. Lute &amp; Tambourine Low [13]\n0x0D. Lute &amp; Tambourine Low [14]\n0x0E. Lute &amp; Tambourine Low [15]\n0x0F. Lute &amp; Tambourine Low [16]\n0x10. Lute &amp; Tambourine Low [17]\n0x11. Lute &amp; Tambourine High [1]\n0x12. Lute &amp; Tambourine High [2]\n0x13. Lute &amp; Tambourine High [3]\n0x14. Lute &amp; Tambourine High [4]\n0x15. Lute &amp; Tambourine High [5]\n0x16. Lute &amp; Tambourine High [6]\n0x17. Lute &amp; Tambourine High [7]\n0x18. Lute &amp; Tambourine High [8]\n0x19. Lute &amp; Tambourine High [9]\n0x1A. Lute &amp; Tambourine High [10]\n0x1B. Lute &amp; Tambourine High [11]\n0x1C. Lute &amp; Tambourine High [12]\n0x1D. Lute &amp; Tambourine High [13]\n0x1E. Lute &amp; Tambourine High [14]\n0x1F. Lute &amp; Tambourine High [15]\n0x20. Lute &amp; Tambourine High [16]\n0x21. Lute &amp; Tambourine High [17]\n0x22. Lute &amp; Tambourine High [18]\n0x23. Lute &amp; Tambourine High [19]\n0x24. Lute &amp; Tambourine High [20]\n0x25. Lute &amp; Tambourine High [21]\n0x26. Lute &amp; Tambourine High [22]\n0x27. Lute &amp; Tambourine High [23]\n0x28. Lute &amp; Tambourine High [24]\n0x29. Lute &amp; Tambourine High [25]\n0x2A. Lute &amp; Tambourine High [26]\n0x2B. Lute &amp; Tambourine High [27]\n0x2C. Lute &amp; Tambourine High [28]\n0x2D. Lute &amp; Tambourine High [29]\n0x2E. Lute &amp; Tambourine High [30]\n0x2F. Lute &amp; Tambourine High [31]\n0x30. Lute &amp; Tambourine High [32]\n0x31. Lute &amp; Tambourine High [33]\n0x32. Lute &amp; Tambourine High [34]\n0x33. Lute &amp; Tambourine High [35]\n0x34. Lute &amp; Tambourine High [36]\n0x35. Lute &amp; Tambourine High [37]\n0x36. Lute &amp; Tambourine High [38]\n0x37. Lute &amp; Tambourine High [39]\n0x38. Lute &amp; Tambourine High [40]\n0x39. Lute &amp; Tambourine High [41]\n0x3A. Lute &amp; Tambourine High [42]\n0x3B. Lute &amp; Tambourine High [43]\n0x3C. Lute &amp; Tambourine High [44]\n0x3D. Lute &amp; Tambourine High [45]\n0x3E. Lute &amp; Tambourine High [46]\n0x3F. Lute &amp; Tambourine High [47]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x03","title":"Instruments (Program Name: 0x00 to 0x03)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0B</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x03 (3)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Wind Roar\n0x01. Lore Drone\n0x02. Metal Grind\n0x03. Spaceosphere\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x02","title":"Instruments (Program Name: 0x00 to 0x02)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0C</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x02 (2)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Digi Pad 04\n0x01. Flute Chant\n0x02. Bamboo Chimes\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_1","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0D</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Malon Voice (Release: 248)\n0x01. Malon Voice (Release: 247)\n0x02. Sustain Guitar\n0x03. Sustain Guitar ALT\n0x04. Sustain Guitar ALT\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. Strings\n0x0C. Strings\n0x0D. Fiddle\n0x0E. Fiddle\n0x0F. Carillon Bell (Unused in Sequence)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0E</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bent Drum\n0x01. Conga &amp; Slap\n0x02. Cuica\n0x03. Bass Marimba\n0x04. Bass Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_2","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0F</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. Clarinet\n0x03. Bassoon\n0x04. French Horn\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. Harpsichord\n0x0E. Harp\n0x0F. Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_2","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x10</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Digi Pad 04 ALT\n0x01. Synth Strings\n0x02. Duduk ALT\n0x03. Conga &amp; Slap\n0x04. Synth Strings\n0x05. Duduk\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums","title":"Drums","text":"<p>Below is a list of the drums inside of audiobank <code>0x10</code>. This percussion set is referred to as \"Gong &amp; Chimes Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code></p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Gong: <code>A1 (21)</code> to <code>F\u266f4 (54)</code> - Chimes: <code>G4 (55)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Gong [1]\n0x01. Gong [2]\n0x02. Gong [3]\n0x03. Gong [4]\n0x04. Gong [5]\n0x05. Gong [6]\n0x06. Gong [7]\n0x07. Gong [8]\n0x08. Gong [9]\n0x09. Gong [10]\n0x0A. Gong [11]\n0x0B. Gong [12]\n0x0C. Gong [13]\n0x0D. Gong [14]\n0x0E. Gong [15]\n0x0F. Gong [16]\n0x10. Gong [17]\n0x11. Gong [18]\n0x12. Gong [19]\n0x13. Gong [20]\n0x14. Gong [21]\n0x15. Gong [22]\n0x16. Gong [23]\n0x17. Gong [24]\n0x18. Gong [25]\n0x19. Gong [26]\n0x1A. Gong [27]\n0x1B. Gong [28]\n0x1C. Gong [29]\n0x1D. Gong [30]\n0x1E. Gong [31]\n0x1F. Gong [32]\n0x20. Gong [33]\n0x21. Gong [34]\n0x22. Chimes [1]\n0x23. Chimes [2]\n0x24. Chimes [3]\n0x25. Chimes [4]\n0x26. Chimes [5]\n0x27. Chimes [6]\n0x28. Chimes [7]\n0x29. Chimes [8]\n0x2A. Chimes [9]\n0x2B. Chimes [10]\n0x2C. Chimes [11]\n0x2D. Chimes [12]\n0x2E. Chimes [13]\n0x2F. Chimes [14]\n0x30. Chimes [15]\n0x31. Chimes [16]\n0x32. Chimes [17]\n0x33. Chimes [18]\n0x34. Chimes [19]\n0x35. Chimes [20]\n0x36. Chimes [21]\n0x37. Chimes [22]\n0x38. Chimes [23]\n0x39. Chimes [24]\n0x3A. Chimes [25]\n0x3B. Chimes [26]\n0x3C. Chimes [27]\n0x3D. Chimes [28]\n0x3E. Chimes [29]\n0x3F. Chimes [30]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_1","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x11</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Banjo\n0x01. Banjo\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Pizz. Double Bass\n0x06. Harmonica\n0x07. Nylon Guitar\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. \u26d4 (nullptr)\n0x0D. Fiddle\n0x0E. Fiddle\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_2","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x12</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harp\n0x01. Harp\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. Strings ALT (Attack Time: 32)\n0x05. Ocarina\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_6","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x12</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x03_1","title":"Instruments (Program Name: 0x00 to 0x03)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x13</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x03 (3)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Female Choir\n0x01. Female Choir\n0x02. Harp\n0x03. Glockenspiel\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_3","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x14</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Clarinet\n0x02. Clarinet\n0x03. Accordion\n0x04. Glockenspiel\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_7","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x14</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_4","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x15</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Steel Drum\n0x01. Digi Pad 04\n0x02. Nylon Guitar\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_8","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x15</code>. This percussion set is referred to as \"Conga &amp; Shaker Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Conga Closed: <code>A1 (21)</code> to <code>F3 (41)</code> - Conga Open: <code>F\u266f3 (42)</code> to <code>C5 (60)</code> - Conga Slap: <code>C\u266f5 (61)</code> to <code>G\u266f6 (80)</code> - Shaker: <code>A6 (81)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Conga Closed [1]\n0x01. Conga Closed [2]\n0x02. Conga Closed [3]\n0x03. Conga Closed [4]\n0x04. Conga Closed [5]\n0x05. Conga Closed [6]\n0x06. Conga Closed [7]\n0x07. Conga Closed [8]\n0x08. Conga Closed [9]\n0x09. Conga Closed [10]\n0x0A. Conga Closed [11]\n0x0B. Conga Closed [12]\n0x0C. Conga Closed [13]\n0x0D. Conga Closed [14]\n0x0E. Conga Closed [15]\n0x0F. Conga Closed [16]\n0x10. Conga Closed [17]\n0x11. Conga Closed [18]\n0x12. Conga Closed [19]\n0x13. Conga Closed [20]\n0x14. Conga Closed [21]\n0x15. Conga Open [1]\n0x16. Conga Open [2]\n0x17. Conga Open [3]\n0x18. Conga Open [4]\n0x19. Conga Open [5]\n0x1A. Conga Open [6]\n0x1B. Conga Open [7]\n0x1C. Conga Open [8]\n0x1D. Conga Open [9]\n0x1E. Conga Open [10]\n0x1F. Conga Open [11]\n0x20. Conga Open [12]\n0x21. Conga Open [13]\n0x22. Conga Open [14]\n0x23. Conga Open [15]\n0x24. Conga Open [16]\n0x25. Conga Open [17]\n0x26. Conga Open [18]\n0x27. Conga Open [19]\n0x28. Conga Slap [1]\n0x29. Conga Slap [2]\n0x2A. Conga Slap [3]\n0x2B. Conga Slap [4]\n0x2C. Conga Slap [5]\n0x2D. Conga Slap [6]\n0x2E. Conga Slap [7]\n0x2F. Conga Slap [8]\n0x30. Conga Slap [9]\n0x31. Conga Slap [10]\n0x32. Conga Slap [11]\n0x33. Conga Slap [12]\n0x34. Conga Slap [13]\n0x35. Conga Slap [14]\n0x36. Conga Slap [15]\n0x37. Conga Slap [16]\n0x38. Conga Slap [17]\n0x39. Conga Slap [18]\n0x3A. Conga Slap [19]\n0x3B. Conga Slap [20]\n0x3C. Shaker [1]\n0x3D. Shaker [2]\n0x3E. Shaker [3]\n0x3F. Shaker [4]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0a","title":"Instruments (Program Name: 0x00 to 0x0A)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x16</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0A (10)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Nylon Guitar\n0x01. Accordion\n0x02. Pizz. Double Bass\n0x03. Trombone\n0x04. Trumpet\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Cowbell\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_9","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x16</code>. This percussion set is referred to as \"Conga &amp; Shaker Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Conga Closed: <code>A1 (21)</code> to <code>F3 (41)</code> - Conga Open: <code>F\u266f3 (42)</code> to <code>C5 (60)</code> - Conga Slap: <code>C\u266f5 (61)</code> to <code>G\u266f6 (80)</code> - Shaker: <code>A6 (81)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Conga Closed [1]\n0x01. Conga Closed [2]\n0x02. Conga Closed [3]\n0x03. Conga Closed [4]\n0x04. Conga Closed [5]\n0x05. Conga Closed [6]\n0x06. Conga Closed [7]\n0x07. Conga Closed [8]\n0x08. Conga Closed [9]\n0x09. Conga Closed [10]\n0x0A. Conga Closed [11]\n0x0B. Conga Closed [12]\n0x0C. Conga Closed [13]\n0x0D. Conga Closed [14]\n0x0E. Conga Closed [15]\n0x0F. Conga Closed [16]\n0x10. Conga Closed [17]\n0x11. Conga Closed [18]\n0x12. Conga Closed [19]\n0x13. Conga Closed [20]\n0x14. Conga Closed [21]\n0x15. Conga Open [1]\n0x16. Conga Open [2]\n0x17. Conga Open [3]\n0x18. Conga Open [4]\n0x19. Conga Open [5]\n0x1A. Conga Open [6]\n0x1B. Conga Open [7]\n0x1C. Conga Open [8]\n0x1D. Conga Open [9]\n0x1E. Conga Open [10]\n0x1F. Conga Open [11]\n0x20. Conga Open [12]\n0x21. Conga Open [13]\n0x22. Conga Open [14]\n0x23. Conga Open [15]\n0x24. Conga Open [16]\n0x25. Conga Open [17]\n0x26. Conga Open [18]\n0x27. Conga Open [19]\n0x28. Conga Slap [1]\n0x29. Conga Slap [2]\n0x2A. Conga Slap [3]\n0x2B. Conga Slap [4]\n0x2C. Conga Slap [5]\n0x2D. Conga Slap [6]\n0x2E. Conga Slap [7]\n0x2F. Conga Slap [8]\n0x30. Conga Slap [9]\n0x31. Conga Slap [10]\n0x32. Conga Slap [11]\n0x33. Conga Slap [12]\n0x34. Conga Slap [13]\n0x35. Conga Slap [14]\n0x36. Conga Slap [15]\n0x37. Conga Slap [16]\n0x38. Conga Slap [17]\n0x39. Conga Slap [18]\n0x3A. Conga Slap [19]\n0x3B. Conga Slap [20]\n0x3C. Shaker [1]\n0x3D. Shaker [2]\n0x3E. Shaker [3]\n0x3F. Shaker [4]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x03_2","title":"Instruments (Program Name: 0x00 to 0x03)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x17</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x03 (3)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Fantasia\n0x01. Fantasia ALT\n0x02. Wind\n0x03. Fantasia ALT\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x08","title":"Instruments (Program Name: 0x00 to 0x08)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x18</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x08 (8)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Djembe\n0x01. Wind Roar\n0x02. Lore Drone &amp; Shine\n0x03. Male Choir\n0x04. Female Choir\n0x05. \u26d4 (nullptr)\n0x06. Chant 3\n0x07. Spaceosphere\n0x08. Harpsichord\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x07","title":"Instruments (Program Name: 0x00 to 0x07)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x19</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x07 (7)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Gong &amp; Chimes\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. Fantasia\n0x05. Bamboo Chimes\n0x06. Digi Pad 04\n0x07. Bouzouki\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_2","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1A</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. \u26d4 (nullptr)\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. \u26d4 (nullptr)\n0x0D. Piano ALT (Splits: 22 &amp; 44, Release: 93)\n0x0E. Piano ALT (Splits: 22 &amp; 44, Release: 93)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0b","title":"Instruments (Program Name: 0x00 to 0x0B)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1B</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0B (11)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Trumpet\n0x01. Trombone\n0x02. Nylon Guitar (Release: 233)\n0x03. Nylon Guitar (Release: 219)\n0x04. \u26d4 (nullptr)\n0x05. Pizz. Double Bass\n0x06. \u26d4 (nullptr)\n0x07. Nylon Guitar (Release: 234)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Clap\n0x0B. Clap\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04_1","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1C</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Djembe\n0x02. \u26d4 (nullptr)\n0x03. Bent Drum\n0x04. Gong &amp; Chimes\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0b_1","title":"Instruments (Program Name: 0x00 to 0x0B)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1D</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0B (11)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Djembe\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Piccolo\n0x06. \u26d4 (nullptr)\n0x07. Piccolo\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_10","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x1D</code>. This percussion set is referred to as \"Gong &amp; Chimes Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Gong: <code>A1 (21)</code> to <code>F\u266f4 (54)</code> - Chimes: <code>G4 (55)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Gong [1]\n0x01. Gong [2]\n0x02. Gong [3]\n0x03. Gong [4]\n0x04. Gong [5]\n0x05. Gong [6]\n0x06. Gong [7]\n0x07. Gong [8]\n0x08. Gong [9]\n0x09. Gong [10]\n0x0A. Gong [11]\n0x0B. Gong [12]\n0x0C. Gong [13]\n0x0D. Gong [14]\n0x0E. Gong [15]\n0x0F. Gong [16]\n0x10. Gong [17]\n0x11. Gong [18]\n0x12. Gong [19]\n0x13. Gong [20]\n0x14. Gong [21]\n0x15. Gong [22]\n0x16. Gong [23]\n0x17. Gong [24]\n0x18. Gong [25]\n0x19. Gong [26]\n0x1A. Gong [27]\n0x1B. Gong [28]\n0x1C. Gong [29]\n0x1D. Gong [30]\n0x1E. Gong [31]\n0x1F. Gong [32]\n0x20. Gong [33]\n0x21. Gong [34]\n0x22. Chimes [1]\n0x23. Chimes [2]\n0x24. Chimes [3]\n0x25. Chimes [4]\n0x26. Chimes [5]\n0x27. Chimes [6]\n0x28. Chimes [7]\n0x29. Chimes [8]\n0x2A. Chimes [9]\n0x2B. Chimes [10]\n0x2C. Chimes [11]\n0x2D. Chimes [12]\n0x2E. Chimes [13]\n0x2F. Chimes [14]\n0x30. Chimes [15]\n0x31. Chimes [16]\n0x32. Chimes [17]\n0x33. Chimes [18]\n0x34. Chimes [19]\n0x35. Chimes [20]\n0x36. Chimes [21]\n0x37. Chimes [22]\n0x38. Chimes [23]\n0x39. Chimes [24]\n0x3A. Chimes [25]\n0x3B. Chimes [26]\n0x3C. Chimes [27]\n0x3D. Chimes [28]\n0x3E. Chimes [29]\n0x3F. Chimes [30]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04_2","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1E</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Pipe Organ\n0x01. Pipe Organ\n0x02. Pipe Organ\n0x03. \u26d4 (nullptr)\n0x04. French Horn\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x07_1","title":"Instruments (Program Name: 0x00 to 0x07)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1F</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x07 (7)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Wind Roar\n0x02. Lore Drone &amp; Shine\n0x03. Male Choir\n0x04. Piano\n0x05. Piano ALT 3 (Splits: 22 &amp;amp; 44, Release Rate: 93)\n0x06. \u26d4 (nullptr)\n0x07. Spaceosphere\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_3","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x20</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Female Choir\n0x02. Male Choir\n0x03. \u26d4 (nullptr)\n0x04. French Horn\n0x05. Trumpet\n0x06. Trombone\n0x07. Tuba\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. Piano\n0x0E. \u26d4 (nullptr)\n0x0F. Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_11","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x20</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_4","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x21</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Malon Voice (Release: 248)\n0x01. Malon Voice (Release: 247)\n0x02. Clarinet\n0x03. \u26d4 (nullptr)\n0x04. French Horn\n0x05. Oboe\n0x06. Harp\n0x07. Fiddle\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. Carillon Bell\n0x0E. Harp\n0x0F. Female Choir\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_12","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x21</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_5","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x22</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Ocarina\n0x02. Bassoon\n0x03. Oboe\n0x04. Female Choir\n0x05. Tambourine\n0x06. Harp\n0x07. Glockenspiel\n0x08. Malon Voice (Release: 248)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. French Horn\n0x0E. Male Choir\n0x0F. Cuica\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_13","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x22</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_3","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x23</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. \u26d4 (nullptr)\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Trumpet\n0x06. Trombone\n0x07. Tuba\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. \u26d4 (nullptr)\n0x0E. Harp\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_14","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x23</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Orchestra Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Orchestra Bass Drum [1]\n0x01. Orchestra Bass Drum [2]\n0x02. Orchestra Bass Drum [3]\n0x03. Orchestra Bass Drum [4]\n0x04. Orchestra Bass Drum [5]\n0x05. Orchestra Bass Drum [6]\n0x06. Orchestra Bass Drum [7]\n0x07. Orchestra Bass Drum [8]\n0x08. Orchestra Bass Drum [9]\n0x09. Orchestra Bass Drum [10]\n0x0A. Orchestra Bass Drum [11]\n0x0B. Orchestra Bass Drum [12]\n0x0C. Orchestra Bass Drum [13]\n0x0D. Orchestra Bass Drum [14]\n0x0E. Orchestra Bass Drum [15]\n0x0F. Orchestra Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_4","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x24</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Oboe\n0x02. \u26d4 (nullptr)\n0x03. Bassoon\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. \u26d4 (nullptr)\n0x0E. Harp\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x01_1","title":"Instruments (Program Name: 0x00 to 0x01)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x25</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x01 (1)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Junk [1]\n0x01. Junk [2]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-number-0x00-to-0x79","title":"Instruments (Program Number: 0x00 to 0x79)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x00</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x79 (121)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Some sound effects using the instrument structure have multiple samples, the sound effects using multiple samples indicate which region contains which sound effect sample (e.g. <code>0x00: Low: SFX name, Mid: SFX Name, High: SFX Name</code>). Any sound effects without multiple regions use the mid (primary) sample.</p> <p>Instrument List: <pre><code>0x00. Dirt Footstep SFX\n0x01. Sand Footstep SFX\n0x02. Stone Footstep SFX?\n0x03. Water Footstep SFX\n0x04. Splash Footstep SFX\n0x05. Dirt Footstep SFX 2?\n0x06. Wood Footstep SFX?\n0x07. Grass Footstep SFX?\n0x08. Chest reveal SFX, Ice Switch SFX, and Skull Kid Spotlight SFX\n0x09. Snow Footstep SFX?\n0x0A. Unknown SFX (Rock related?)\n0x0B. Unknown SFX (Footstep?)\n0x0C. Splash SFX 1\n0x0D. Splash SFX 2\n0x0E. Unknown Sand SFX 1\n0x0F. Mid: Egg Hatch SFX 1, High: Wind SFX\n0x10. Unknown Sand SFX 2\n0x11. Unknown White Noise SFX 1\n0x12. Unknown White Noise SFX 2\n0x13. Splash SFX 3\n0x14. Swimming SFX\n0x15. Mid: Drum SFX?, High: Gunshot SFX\n0x16. Wood Footstep SFX 2?\n0x17. Snow Footstep SFX 2?\n0x18. Mid: Fairy Flying SFX 1?, High: Fairy Bell SFX 1\n0x19. Stone Footstep SFX 2?\n0x1A. Mid: Sword Clink SFX 1, High: Sword Clink SFX 2\n0x1B. Scratch SFX?\n0x1C. Link Sword Sheathe SFX\n0x1D. Link Sword Unsheathe SFX\n0x1E. Whoosh SFX\n0x1F. Unknown Whoosh SFX\n0x20. Metal Clang SFX\n0x21. Mid: Bow Draw SFX, High: Bow Twang SFX\n0x22. Mid: Hookshot Chain SFX, High: Bat Noise SFX?\n0x23. Mid: Bombchu Fuse SFX, High: Bombchu Moving SFX\n0x24. Bank Stamp SFX (OOT Megaton Hammer)\n0x25. Like Like SFX?\n0x26. Arrow Hitting Wood/Festival Hammer SFX\n0x27. Whoosh SFX 2 (Boomerang?)\n0x28. Unknown SFX (Rock related?)\n0x29. Mid: Pop SFX, High: Cursor SFX?\n0x2A. Robotic Buzzing SFX\n0x2B. Mid: Unknown SFX, High: Song of Double Time Tick SFX\n0x2C. Mid: Lens of Truth SFX, High: Whoosh SFX 3\n0x2D. Mid: Door Open SFX, High: Door Close SFX\n0x2E. Mid: Digi Pad 04 SFX?, High: Squeaking SFX?\n0x2F. Explosion SFX\n0x30. Horse Gallop SFX\n0x32. Mid: Horse Whinny SFX, High: Horse Snort SFX\n0x31. \u26d4 (nullptr)\n0x33. Mid: Running Water SFX, High: White Noise SFX 1 (Waterfall)\n0x34. Ocarina SFX 1 (Special Effect)\n0x35. Ocarina SFX 2\n0x36. Mid: Stone Moving on Stone SFX, High: Metal Door Closing SFX\n0x37. Rock Rolling SFX?\n0x38. Mid: Lava Bubbling SFX, High: Soup Bubbling SFX\n0x39. Chain Pulley SFX\n0x3A. Chicken Cluck SFX\n0x3B. Door Thud SFX\n0x3C. Wind SFX\n0x3D. Mid: Rooster Crow SFX, High: Wolf Howl SFX\n0x3E. Light Splash SFX (Fish?)\n0x3F. Mid: Spider House Portrait Fall SFX, High: Stick Clack SFX\n0x40. Fairy Flying SFX 2? (Fairy Related)\n0x41. Dawn of the First Day SFX\n0x42. Mid: Door Creak SFX, High: Door Creak Low SFX\n0x43. Unknown SFX\n0x44. Glass Hum SFX\n0x45. Fairy Flying SFX 3? (Fairy Related)\n0x46. Mid: Electric SFX, High: Pot Break SFX\n0x47. Water Drip SFX\n0x48. Water Bubbling SFX (Gyorg Cutscene?)\n0x49. Mid: Fire Crackle SFX, High: Cow Moo SFX\n0x4A. Mid: Balloon Inflate SFX, High: Thunder SFX\n0x4B. Unknown SFX\n0x4C. Unknown SFX\n0x4D. Mid: Wind SFX?, High: Revving SFX\n0x4E. Mid: Cloth Flutter SFX, High: Wing Flap SFX\n0x4F. Mid: Carpenters and Soldiers Arguing SFX, High: Glass Shatter SFX (Ice?)\n0x50. Scratch SFX 2?\n0x51. Mid: Dodongo Roar SFX, High: Dog Bark SFX\n0x52. Woodwind Noise SFX\n0x53. Bandoneon SFX\n0x54. Piano/Harp SFX?\n0x55. Lulu's Voice SFX\n0x56. Fairy Bell SFX 2\n0x57. Mid: Wrong Note SFX, High: Unknown Metal Sound SFX\n0x58. Bird Chirp SFX\n0x59. Harp SFX\n0x5A. Mid: Camera Alignment SFX, High: Lock-on SFX\n0x5B. Metal Chain SFX\n0x5C. Rawhide Drum SFX (Goron)\n0x5D. Steel Str. Guitar SFX (Zora)\n0x5E. Trumpet (B3) SFX (Deku)\n0x5F. Frog Ribbit SFX\n0x60. Goron Elder's Son Voice SFX\n0x61. Mid: Beaver Talk SFX, High: Bird Tweet SFX\n0x62. Cuckoo Clock SFX\n0x63. Mid: Ocean Wave SFX, High: Same as Mid\n0x64. Carillon Bell SFX\n0x65. Eagle(?) SFX\n0x66. Orchestral Timpani SFX\n0x67. Mid: Glass Shatter SFX, High: Click SFX\n0x68. Snow Footstep SFX 3?\n0x69. Arwing Laser SFX\n0x6A. Mid: Wooden Clack/Pop/Clap/Slap SFX?, High: Gulp SFX\n0x6B. Mid: Monkey Noise SFX, Monkey Shriek SFX\n0x6C. Mid: Same as High Pitched Lower?, High: Insect Buzz Sfx?\n0x6D. Low: Dog Yelp SFX, Mid: Dog Growl SFX, High: Dog Calm Whine(?) SFX\n0x6E. Mid: Crowd Cheer SFX, High: Link Gulp? SFX\n0x6F. Goron Burnout/Skid SFX\n0x70. Egg Hatch SFX 2\n0x71. Bent Conga SFX\n0x72. Giant Voice SFX\n0x73. Piano SFX\n0x74. Fretless Bass SFX (Zora/Japas?)\n0x75. Chinese Gong SFX\n0x76. Creaking SFX\n0x77. Piccolo SFX\n0x78. Igos Du Ikana Voice SFX (Elegy)\n0x79. Grass Rustle SFX\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#sound-effects-program-number-7e_2","title":"Sound Effects (Program Number: 7E)","text":"<p>Below is a list of the \"sound effects\" inside of audiobank <code>0x00</code>. These work nearly identical to how percussion sets work except for how they are structured, they cannot be imported into audiobanks because their structure is built directly into a pointer array within <code>&lt;absfxlist&gt;</code>.</p> <p>You can access these sound effects when using this audiobank using MIDI program number(s): <code>0x7E (126)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Sound effects can only have one sample per sound effect, but some sound effect indexes point to the same sample in the audiobank. The indexes that use the same sample as another index are marked: <code>[Same sample as (index value)]</code></p> <p>Sound Effect List: <pre><code>0x00. Link Voice (Attack 1)\n0x01. Link Voice (Attack 2)\n0x02. Link Voice (Attack 3)\n0x03. Link Voice (Attack 4)\n0x04. Link Voice (Attack 5)\n0x05. Link Voice (Attack 6)\n0x06. Goron Link Voice (Damage 1)\n0x07. Goron Link Voice (Damage 2?)\n0x08. Goron Link Voice (Damage 3)\n0x09. Link Voice (Damage 1)\n0x0A. Link Voice (Damage 2)\n0x0B. Link Voice (Damage 3)\n0x0C. Link Voice (Damage 4)\n0x0D. Zora Link Voice (Damage 1)\n0x0E. Link Voice (Damage 5)\n0x0F. Link Voice (Scream 1)\n0x10. Link Voice (Scream 2)\n0x11. Link Voice (Scream 2) [Same sample as 10]\n0x12. Goron Link Voice (Critical Health?)\n0x13. Zora Link Voice (Critical Health?)\n0x14. Link Voice (Grunt 1)\n0x15. Igos Du Ikana (Elegy)\n0x16. Igos Du Ikana (Elegy)\n0x17. Link Voice (Critical Health 1)\n0x18. Goron Link Voice (Fall Damage)\n0x19. Goron Link Voice (Push &amp; Grab)\n0x1A. Link Voice (Grunt 2)\n0x1B. Link Voice (Grunt 3)\n0x1C. Link Voice (\"Hup\" 1)\n0x1D. Link Voice (\"Ha!\" 1)\n0x1E. Link Voice (\"Hup\" 2)\n0x1F. Link Voice (\"Hup\" 3)\n0x20. Link Voice (\"Hyah!\")\n0x21. Link Voice (Attack 7)\n0x22. Link Voice (Ledge Related?)\n0x23. Link Voice (Grab &amp; Push 1?)\n0x24. Link Voice (Grab &amp; Push 2?)\n0x25. Deku Link Voice (Damage 1)\n0x26. Deku Link Voice (Damage 2)\n0x27. Link Voice (Grunt 2) [Same sample as 1A]\n0x28. Link Voice (Damage 6)\n0x29. Zora Link Voice (Damage 2)\n0x2A. Link Voice (Fall Damage 1)\n0x2B. Link Voice (Fall Scream 1)\n0x2C. Link Voice (Fall Scream 2)\n0x2D. Link Voice (Fall Start 1)\n0x2E. Link Voice (Fall Start 2)\n0x2F. Link Voice (Critical Health 2)\n0x30. Link Voice (Critical Health 3)\n0x31. Link Voice (Fall Damage 2)\n0x32. Link Voice (Sliding)\n0x33. Link Voice (Drink 1)\n0x34. Link Voice (Drink 2)\n0x35. Link Voice (\"Hup\" 4)\n0x36. Link Voice (\"Hup\" 5)\n0x37. Goron Link Voice (Fall Damage) [Same sample as 18]\n0x38. Goron Link Voice (Fall Damage) [Same sample as 18]\n0x39. \u26d4 (nullptr)\n0x3A. \u26d4 (nullptr)\n0x3B. \u26d4 (nullptr)\n0x3C. Goron Link Voice (Fall Damage) [Same sample as 18]\n0x3D. Goron Link Voice (Fall Damage) [Same sample as 18]\n0x3E. Link Voice (Ledge Climb?)\n0x3F. Link Voice (Attack 8)\n0x40. Link Voice (Grunt 1) [Same sample as 14]\n0x41. Unknown Sound [1]\n0x42. Link Voice (Damage 6?)\n0x43. Link Voice (Shiver)\n0x44. \u26d4 (nullptr)\n0x45. Link Voice (Sneeze)\n0x46. Link Voice? (Sneeze 2?)\n0x47. Link Voice? (Stretch 1?)\n0x48. Link Voice (Stretch 2)\n0x49. Link Voice (Stretch 3)\n0x4A. Link Voice (Stretch 4)\n0x4B. Link Voice (Stretch 5)\n0x4C. Link Voice (Stretch 6)\n0x4D. Link Voice (Damage 7?)\n0x4E. Unknown Sound [2]\n0x4F. Unknown Sound [3]\n0x50. Unknown Sound [3]\n0x51. Unknown Sound [3]\n0x52. Unknown Sound [3]\n0x53. Unknown Sound [3]\n0x54. Unknown Sound [3]\n0x55. Unknown Sound [3]\n0x56. Unknown Sound [3]\n0x57. Unknown Sound [3]\n0x58. Unknown Sound [3]\n0x59. \u26d4 (nullptr)\n0x5A. \u26d4 (nullptr)\n0x5B. \u26d4 (nullptr)\n0x5C. \u26d4 (nullptr)\n0x5D. Gorman Bros. (\"Uwahh!\")\n0x5E. Sword School Instructor (\"Kaaah!\")\n0x5F. Gorman Bros.? (???)\n0x60. Gorman Bros. (\"Ha!\")\n0x61. Great Fairy (Laugh 1)\n0x62. Great Fairy (Laugh 2)\n0x63. Ikana Castle Stalfos (Laugh)\n0x64. Ikana Castle Stalfos (Damage)\n0x65. Igos Du Ikana (Gasp)\n0x66. Ikana Castle Stalfos (\"Rawr\")\n0x67. Ikana Castle Stalfos (\"Rawr\") [Same sample as 66]\n0x68. \u26d4 (nullptr)\n0x69. \u26d4 (nullptr)\n0x6A. \u26d4 (nullptr)\n0x6B. \u26d4 (nullptr)\n0x6C. \u26d4 (nullptr)\n0x6D. \u26d4 (nullptr)\n0x6E. \u26d4 (nullptr)\n0x6F. \u26d4 (nullptr)\n0x70. \u26d4 (nullptr)\n0x71. \u26d4 (nullptr)\n0x72. \u26d4 (nullptr)\n0x73. \u26d4 (nullptr)\n0x74. \u26d4 (nullptr)\n0x75. \u26d4 (nullptr)\n0x76. \u26d4 (nullptr)\n0x77. \u26d4 (nullptr)\n0x78. \u26d4 (nullptr)\n0x79. \u26d4 (nullptr)\n0x7A. \u26d4 (nullptr)\n0x7B. \u26d4 (nullptr)\n0x7C. \u26d4 (nullptr)\n0x7D. \u26d4 (nullptr)\n0x7E. \u26d4 (nullptr)\n0x7F. \u26d4 (nullptr)\n0x80. \u26d4 (nullptr)\n0x81. Great Fairy (Giggle 1)\n0x82. Great Fairy (Giggle 2)\n0x83. \u26d4 (nullptr)\n0x84. \u26d4 (nullptr)\n0x85. Unknown Laugh\n0x86. Unknown Laugh [Same sample as 85]\n0x87. Unknown Laugh [Same sample as 85]\n0x88. Unknown Laugh [Same sample as 85]\n0x89. Goron Voice? (\"Awww...\")\n0x8A. Deku Link Voice (Gasp)\n0x8B. Link Voice? (\"Ha!\" 2)\n0x8C. Link Voice? (\"Ha!\" 3)\n0x8D. Traveling Goron Voice? (Exhale 1)\n0x8E. Traveling Goron Voice? (Exhale 2)\n0x8F. Traveling Goron Voice? (Exhale 3)\n0x90. Traveling Goron Voice? (Exhale 4)\n0x91. \u26d4 (nullptr)\n0x92. \u26d4 (nullptr)\n0x93. \u26d4 (nullptr)\n0x94. \u26d4 (nullptr)\n0x95. \u26d4 (nullptr)\n0x96. \u26d4 (nullptr)\n0x97. \u26d4 (nullptr)\n0x98. \u26d4 (nullptr)\n0x99. \u26d4 (nullptr)\n0x9A. \u26d4 (nullptr)\n0x9B. \u26d4 (nullptr)\n0x9C. \u26d4 (nullptr)\n0x9D. \u26d4 (nullptr)\n0x9E. \u26d4 (nullptr)\n0x9F. \u26d4 (nullptr)\n0xA0. \u26d4 (nullptr)\n0xA1. \u26d4 (nullptr)\n0xA2. \u26d4 (nullptr)\n0xA3. \u26d4 (nullptr)\n0xA4. \u26d4 (nullptr)\n0xA5. \u26d4 (nullptr)\n0xA6. \u26d4 (nullptr)\n0xA7. \u26d4 (nullptr)\n0xA8. \u26d4 (nullptr)\n0xA9. \u26d4 (nullptr)\n0xAA. \u26d4 (nullptr)\n0xAB. \u26d4 (nullptr)\n0xAC. \u26d4 (nullptr)\n0xAD. \u26d4 (nullptr)\n0xAE. \u26d4 (nullptr)\n0xAF. \u26d4 (nullptr)\n0xB0. \u26d4 (nullptr)\n0xB1. \u26d4 (nullptr)\n0xB2. \u26d4 (nullptr)\n0xB3. \u26d4 (nullptr)\n0xB4. \u26d4 (nullptr)\n0xB5. \u26d4 (nullptr)\n0xB6. \u26d4 (nullptr)\n0xB7. \u26d4 (nullptr)\n0xB8. \u26d4 (nullptr)\n0xB9. \u26d4 (nullptr)\n0xBA. \u26d4 (nullptr)\n0xBB. \u26d4 (nullptr)\n0xBC. \u26d4 (nullptr)\n0xBD. \u26d4 (nullptr)\n0xBE. \u26d4 (nullptr)\n0xBF. \u26d4 (nullptr)\n0xC0. \u26d4 (nullptr)\n0xC1. Link Voice (\"Hup\" 1) [Same sample as 1C]\n0xC2. Link Voice (\"Ha!\" 1) [Same sample as 1D]\n0xC3. Link Voice (\"Hup\" 2) [Same sample as 1E]\n0xC4. Link Voice (\"Hup\" 3) [Same sample as 1F]\n0xC5. Link Voice (\"Hyah!\") [Same sample as 20]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-number-7f_2","title":"Drums (Program Number: 7F)","text":"<p>Below is a list of the \"drums\" inside of audiobank <code>0x00</code>. Unlike instrument index pointers, percussion index pointers represent a MIDI note instead of a program number.</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Drum List: <pre><code>0x00. Tambourine\n0x01. Sand Footstep SFX\n0x02. Garbage Data\n0x03. Garbage Data\n0x04. Link Voice? (Ledge Related)\n0x05. Link Voice (Fall Start)\n0x06. Link Voice (Fall Scream)\n0x07. Goron Link Voice (Damage?)\n0x08. Garbage Data\n0x09. Kaching SFX (Clock Town Mailbox)\n0x0A. Clap SFX [1]\n0x0B. Clap SFX [2]\n0x0C. Clap SFX [3]\n0x0D. Clap SFX [4]\n0x0E. Clap SFX [5]\n0x0F. Clap SFX [6]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-number-0x00-to-0x7d_1","title":"Instruments (Program Number: 0x00 to 0x7D)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x01</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x7D (125)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Some sound effects using the instrument structure have multiple samples, the sound effects using multiple samples indicate which region contains which sound effect sample (e.g. <code>0x00: Low: SFX name, Mid: SFX Name, High: SFX Name</code>). Any sound effects without multiple regions use the mid (primary) sample.</p> <p>Instrument List: <pre><code>0x00. Balloon Inflating SFX 1\n0x01. Wallmaster Rising SFX\n0x02. Balloon Inflating SFX 2\n0x03. Mid: Buzz SFX, High: Deku Baba Attack SFX\n0x04. Mid: Metal Clink SFX, High: White Noise SFX\n0x05. Hookshot Related SFX? (Unsure)\n0x06. Long Explosion SFX\n0x07. Mid: Real Bombchu Pur SFX, High: Real Bombchu Passive SFX\n0x08. Pop/Thud SFX\n0x09. Dodongo Roar SFX\n0x0A. Doom Monster Roar SFX\n0x0B. Skulltula Skitter SFX\n0x0C. Spider Egg Hatch SFX\n0x0D. Rock Explosion SFX\n0x0E. Buzz SFX (Frog Croak?)\n0x0F. Clicking SFX (Keese Attack?)\n0x10. Wing Flap SFX\n0x11. Volvagia Pained Roar SFX\n0x12. Scratch/Electric SFX (Skulltula Related?)\n0x13. \"Ah\" SFX (Frog Croak?)\n0x14. Dinolfos Laughing SFX (SM64 Boo)\n0x15. Low: Dinolfos SFX, High: Dinolfos Footstep SFX\n0x16. Deku Scrub Voice SFX\n0x17. Glass Break SFX (Ice?)\n0x18. Gulp SFX 1\n0x19. Deku Baba Beak Snap SFX\n0x1A. Wind SFX\n0x1B. Crow/Eagle/Bat SFX\n0x1C. Igos Du Ikana Sword Swing SFX\n0x1D. Stalchild Laughing SFX\n0x1E. Stalfos Laughing SFX\n0x1F. Garo Appearing SFX\n0x20. Thunder SFX (Deku Baba Death?)\n0x21. Electric SFX (OOT Ganon Summoning Orb)\n0x22. Whoosh SFX\n0x23. Armos Awakening SFX\n0x24. Splash SFX (Link/Octorok/etc)\n0x25. Splish SFX (Footsteps on Watery Surfaces)\n0x26. Boulder Explosion SFX\n0x27. Mid: Pamela's Father SFX, High: Goron Falling Asleep SFX\n0x28. Poe/Garo Laugh SFX (SM64 Boo Sample)\n0x29. Bubbling SFX (Gyorg Cutscene)\n0x2A. Poe Defeat Shriek SFX\n0x2B. Mid: Goron \"Hmm?\" SFX, High: Goron \"Ooooh...\" SFX\n0x2C. Mid: Wolfos Howl SFX, High: Crow Caw SFX\n0x2D. Phantom Ganon \"Ha!\" SFX\n0x2E. \u26d4 (nullptr)\n0x2F. Deku Scrub SFX\n0x30. Wizzrobe Defeat SFX\n0x31. Thud/Impact SFX\n0x32. Thud SFX\n0x33. Unknown Growl SFX\n0x34. Synth SFX\n0x35. Explosion SFX\n0x36. Moon Speaking/Moving SFX\n0x37. Twinmold Damage SFX\n0x38. Laughing SFX 1 (SM64 Boo Sample)\n0x39. Real Bombchu SFX\n0x3A. Bomb Fuse SFX\n0x3B. Odolwa Calling Bugs SFX\n0x3C. Odolwa Passive Taunt SFX\n0x3D. Odolwa Calling Moths SFX\n0x3E. Laughing SFX 2 (SM64 Boo Sample)\n0x3F. Majora's Incarnation Head SFX\n0x40. Gomess Shout SFX\n0x41. SM64 Bowser Defeat SFX\n0x42. Laughing SFX 3 (SM64 Boo Sample)\n0x43. Hiploop Charge Footstep SFX\n0x44. Wizzrobe Initiating Attack SFX\n0x45. Wizzrobe Afterimage SFX\n0x46. Thunder SFX\n0x47. Pop/Slap SFX\n0x48. White Noise SFX (Water Noise)\n0x49. Synth SFX (Death Armos?)\n0x4A. Garo Warp Attack SFX\n0x4B. Garo Warp Away SFX\n0x4C. Rumble SFX\n0x4D. Sword Unsheathe SFX\n0x4E. Nejiron Grunt SFX\n0x4F. Chuchu Jumping SFX\n0x50. Chuchu Landing SFX\n0x51. Chuchu Jiggle SFX\n0x52. Mid: Goron Snore Inhale SFX, High: Goron Snore Exhale SFX\n0x53. Mad Jelly SFX\n0x54. Wizzrobe Casts Spell SFX\n0x55. Wizzrobe Damage SFX\n0x56. Witch Shriek SFX\n0x57. Crunchy Footstep SFX\n0x58. Witch \"Hmm\" SFX\n0x59. Gulp SFX 2\n0x5A. Majora's Incarnation Voice SFX\n0x5B. Wizzrobe Laughing SFX\n0x5C. Snapper Idle SFX\n0x5D. Snapper Overturned SFX\n0x5E. Unknown Chip SFX\n0x5F. Unknown Chip SFX\n0x60. Whoosh SFX\n0x61. Deku Bubble Pop/Jim Peashooter SFX\n0x62. Poe Hovering SFX (Unsure)\n0x63. Bombchu Growl SFX\n0x64. Majora's Wrath Spinners SFX (Unsure)\n0x65. Majora's Incarnation Clucking SFX 1\n0x66. Majora's Incarnation Clucking SFX 2\n0x67. Bird Chirp SFX\n0x68. Bird Chitter SFX\n0x69. Bird Trill SFX\n0x6A. Bio Deku Baba Screech SFX\n0x6B. Blue Warp Pad SFX\n0x6C. Orchestral Timpani\n0x6D. Majora's Wrath Whip SFX 1\n0x6E. Majora's Wrath Whip SFX 2\n0x6F. Majora's Wrath Whip SFX 3\n0x70. Boss Remains Awaken SFX\n0x71. Majora's Wrath Whip SFX 4\n0x72. Majora's Wrath Whip SFX 5\n0x73. Goron Elder's Son Crying SFX\n0x74. Beamos Laser SFX (Unsure)\n0x75. Static/Glass Break Noise SFX (Unsure)\n0x76. Drum SFX? (Unsure)\n0x77. Eeno SFX\n0x78. Adult Link Falling SFX\n0x79. Gekko Calling Snapper SFX\n0x7A. Gekko Damage SFX\n0x7B. Gekko Climing Walls SFX\n0x7C. Ice Shattering SFX\n0x7D. Fairy Flying SFX\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#sound-effects-program-number-7e_3","title":"Sound Effects (Program Number: 7E)","text":"<p>Below is a list of the \"sound effects\" inside of audiobank <code>0x01</code>. These work nearly identical to how percussion sets work except for how they are structured, they cannot be imported into audiobanks because their structure is built directly into a pointer array within <code>&lt;absfxlist&gt;</code>.</p> <p>You can access these sound effects when using this audiobank using MIDI program number(s): <code>0x7E (126)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code> </p> <p>Data Structure</p> <p>Sound effects can only have one sample per sound effect, but some sound effect indexes point to the same sample in the audiobank. The indexes that use the same sample as another index are marked: <code>[Same sample as (index value)]</code></p> <p>Sound Effect List: <pre><code>0x00. Link Voice? (Damage Voice?)\n0x01. Link Voice? (Damage Scream?)\n0x02. Link Voice? (Attack Voice 1?)\n0x03. Link Voice? (Attack Voice 2?)\n0x04. Link Voice? (Attack Voice 3?)\n0x05. Redead Shriek?\n0x06. Deku Baba Damage\n0x07. Unknown Gasp\n0x08. Unknown Scream\n0x09. Unknown \"Ha\" Sound\n0x0A. Unknown \"Yah!\" Sound\n0x0B. Witch Shriek?\n0x0C. Link Voice? (Breath Sound 1)\n0x0D. Link Voice? (Breath Sound 2)\n0x0E. Goron Voice (\"Aww...\")\n0x0F. Unknown Synth Sound\n0x10. Unknown Monster Sound?\n0x11. Baby Goron Voice (Cry 1)\n0x12. Baby Goron Voice (Hiccup)\n0x13. Baby Goron Voice (Cry 2?)\n0x14. Unknown \"Hmph\" Sound\n0x15. Unknown \"Eheh\" Sound\n0x16. Unknown Laugh Sound 1\n0x17. Unknown Laugh Sound 2\n0x18. Unknown \"Ahah\" Sound\n0x19. Unknown Laugh Sound 3\n0x1A. Unknown \"Rawr\" Sound\n0x1B. Unknown Honk Sound\n0x1C. Unknown Laugh Sound 4\n0x1D. Unknown Sound 1\n0x1E. Unknown Damage Sound 1\n0x1F. Unknown Damage Sound 2\n0x20. Unknown Yell Sound\n0x21. Unknown Damage Sound 3\n0x22. Unknown Attack Sound\n0x23. Unknown \"AHHH\" Sound\n0x24. Majora's Wrath Attack Sound 1\n0x25. Majora's Wrath Attack Sound 2\n0x26. Majora's Wrath Attack Sound 3\n0x27. Majora's Wrath Shriek Sound 1\n0x28. Majora's Wrath Laugh Sound\n0x29. Majora's Wrath Attack Sound 4\n0x2A. Majora's Wrath Shriek Sound 2\n0x2B. Majora's Wrath Death Scream Sound\n0x2C. Majora's Incarnation Humming Sound\n0x2D. Majora's Incarnation Intro Sound 1?\n0x2E. Majora's Incarnation Intro Sound 2?\n0x2F. Majora's Incarnation Intro Sound 3?\n0x30. Unknown Majora's Incarnation Sound\n0x31. Majora's Incarnation Shriek Sound\n0x32. Majora's Incarnation Death Scream Sound\n0x33. Unknown Laugh Sound 5\n0x34. Skull Kid Laugh Sound 1?\n0x35. Unknown Skull Kid Sound [1]\n0x36. Skull Kid Gasp Sound\n0x37. Skull Kid \"Ha\" Sound\n0x38. Skull Kid Laugh Sound 2\n0x39. Skull Kid Laugh Sound 3\n0x3A. Skull Kid Laugh Sound 4\n0x3B. Skull Kid \"Hmph\" Sound\n0x3C. Unknown Skull Kid Sound [2]\n0x3D. Unknown Skull Kid Sound [3]\n0x3E. Unknown Skull Kid Sound [4]\n0x3F. Unknown Skull Kid Sound [5]\n0x40. Skull Kid Calls Moon Sound\n0x41. Skull Kid Laugh Sound 5\n0x42. Skull Kid Laugh Sound 6\n0x43. Skull Kid Laugh Sound 7\n0x44. Unknown Skull Kid Sound [6]\n0x45. Odolwa Drum Sound\n0x46. Skull Kid Laugh Sound 7\n0x47. Skull Kid Calls Moon Sound [Same sample as 40]\n0x48. Unknown Laugh Sound 4\n0x49. Unknown Sound 1 [Same sample as 1D]\n0x4A. Unknown Yell Sound [Same sample as 20]\n0x4B. Unknown \"AHHH\" Sound [Same sample as 23]\n0x4C. Unknown Honk Sound [Same sample as 1B]\n0x4D. Unknown Grunt Sound\n0x4E. Goron \"Huh\" Sound\n0x4F. Goron Voice (\"Aww...\") [Same sample as 0E]\n0x50. Goron \"Huh\" Sound [Same sample as 0x4E]\n0x51. Goron \"Ahh\" Sound\n0x52. Goron \"Hmm\" &amp; Witch \"Hmm\" Sound\n0x53. Unknown Static Sound\n0x54. Unknown Sound 2\n0x55. Unknown Sound 3\n0x56. Unknown Laugh Sound 6\n0x57. Unknown Sound 4\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-number-7f_3","title":"Drums (Program Number: 7F)","text":"<p>Below is a list of the \"drums\" inside of audiobank <code>0x00</code>. There's one single drum pointer, but it's just a null pointer value with no sample being pointed to.</p> <p>Drum List: <pre><code>0x00. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x14_1","title":"Instruments (Program Name: 0x00 to 0x14)","text":"<p>Below is a list of the \"instruments\" inside of audiobank <code>0x02</code>. These work exactly as regular instruments do, you can even import them into a custom audiobank as an instrument and use it in a sequence just like any regular instrument; and this is a common structure for the sound effects within the game.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x14 (20)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Bird Chirp SFX 1\n0x02. Bird Chitter SFX\n0x03. Bird Trill SFX\n0x04. Bird Song SFX\n0x05. Bird Chirp SFX 2\n0x06. Crow Caw SFX\n0x07. Swamp Bird SFX (Some type of honking bird)\n0x08. Peacock SFX?\n0x09. Bird Twitter SFX\n0x0A. Rooster Crow SFX\n0x0B. Owl Hoot SFX\n0x0C. Loon Call SFX (Tremolo)\n0x0D. Bird Chirp SFX 3\n0x0E. Guay Caw SFX\n0x0F. White Noise SFX (Waterfall)\n0x10. Wind SFX (Haunted Wasteland Sandstorm)\n0x11. Wind SFX 2 (Haunted Wasteland Sandstorm)\n0x12. Rain SFX\n0x13. Thunder SFX\n0x14. Thunder SFX 2\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_6","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x03</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. Clarinet\n0x03. Bassoon\n0x04. French Horn\n0x05. Trumpet (C5)\n0x06. Trumpet (G4)\n0x07. Tuba\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. Piano\n0x0E. Harp\n0x0F. Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_15","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x03</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_7","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x04</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Ocarina\n0x02. Bassoon\n0x03. Oboe\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_16","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x04</code>. This percussion set is referred to as \"Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Tambourine Slap: <code>A1 (21)</code> to <code>B3 (47)</code> - Tambourine Tap: <code>C4 (48)</code> to <code>C\u266f4 (49)</code> - Tambourine Shake: <code>D4 (50)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Tambourine Slap [1]\n0x01. Tambourine Slap [2]\n0x02. Tambourine Slap [3]\n0x03. Tambourine Slap [4]\n0x04. Tambourine Slap [5]\n0x05. Tambourine Slap [6]\n0x06. Tambourine Slap [7]\n0x07. Tambourine Slap [8]\n0x08. Tambourine Slap [9]\n0x09. Tambourine Slap [10]\n0x0A. Tambourine Slap [11]\n0x0B. Tambourine Slap [12]\n0x0C. Tambourine Slap [13]\n0x0D. Tambourine Slap [14]\n0x0E. Tambourine Slap [15]\n0x0F. Tambourine Slap [16]\n0x10. Tambourine Slap [17]\n0x11. Tambourine Slap [18]\n0x12. Tambourine Slap [19]\n0x13. Tambourine Slap [20]\n0x14. Tambourine Slap [21]\n0x15. Tambourine Slap [22]\n0x16. Tambourine Slap [23]\n0x17. Tambourine Slap [24]\n0x18. Tambourine Slap [25]\n0x19. Tambourine Slap [26]\n0x1A. Tambourine Slap [27]\n0x1B. Tambourine Tap [1]\n0x1C. Tambourine Tap [2]\n0x1D. Tambourine Shake [1]\n0x1E. Tambourine Shake [2]\n0x1F. Tambourine Shake [3]\n0x20. Tambourine Shake [4]\n0x21. Tambourine Shake [5]\n0x22. Tambourine Shake [6]\n0x23. Tambourine Shake [7]\n0x24. Tambourine Shake [8]\n0x25. Tambourine Shake [9]\n0x26. Tambourine Shake [10]\n0x27. Tambourine Shake [11]\n0x28. Tambourine Shake [12]\n0x29. Tambourine Shake [13]\n0x2A. Tambourine Shake [14]\n0x2B. Tambourine Shake [15]\n0x2C. Tambourine Shake [16]\n0x2D. Tambourine Shake [17]\n0x2E. Tambourine Shake [18]\n0x2F. Tambourine Shake [19]\n0x30. Tambourine Shake [20]\n0x31. Tambourine Shake [21]\n0x32. Tambourine Shake [22]\n0x33. Tambourine Shake [23]\n0x34. Tambourine Shake [24]\n0x35. Tambourine Shake [25]\n0x36. Tambourine Shake [25*]\n0x37. Tambourine Shake [25*]\n0x38. Tambourine Shake [25*]\n0x39. Tambourine Shake [25*]\n0x3A. Tambourine Shake [25*]\n0x3B. Tambourine Shake [25*]\n0x3C. Tambourine Shake [25*]\n0x3D. Tambourine Shake [25*]\n0x3E. Tambourine Shake [25*]\n0x3F. Tambourine Shake [25*]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_5","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x05</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (09)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harmonica\n0x01. Nylon Str. Guitar\n0x02. Nylon Str. Guitar\n0x03. Ocarina\n0x04. Glockenspiel\n0x05. Bandoneon\n0x06. Bandoneon\n0x07. Tuba\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_17","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x05</code>. This percussion set is referred to as \"Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Tambourine Slap: <code>A1 (21)</code> to <code>B3 (47)</code> - Tambourine Tap: <code>C4 (48)</code> to <code>C\u266f4 (49)</code> - Tambourine Shake: <code>D4 (50)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Tambourine Slap [1]\n0x01. Tambourine Slap [2]\n0x02. Tambourine Slap [3]\n0x03. Tambourine Slap [4]\n0x04. Tambourine Slap [5]\n0x05. Tambourine Slap [6]\n0x06. Tambourine Slap [7]\n0x07. Tambourine Slap [8]\n0x08. Tambourine Slap [9]\n0x09. Tambourine Slap [10]\n0x0A. Tambourine Slap [11]\n0x0B. Tambourine Slap [12]\n0x0C. Tambourine Slap [13]\n0x0D. Tambourine Slap [14]\n0x0E. Tambourine Slap [15]\n0x0F. Tambourine Slap [16]\n0x10. Tambourine Slap [17]\n0x11. Tambourine Slap [18]\n0x12. Tambourine Slap [19]\n0x13. Tambourine Slap [20]\n0x14. Tambourine Slap [21]\n0x15. Tambourine Slap [22]\n0x16. Tambourine Slap [23]\n0x17. Tambourine Slap [24]\n0x18. Tambourine Slap [25]\n0x19. Tambourine Slap [26]\n0x1A. Tambourine Slap [27]\n0x1B. Tambourine Tap [1]\n0x1C. Tambourine Tap [2]\n0x1D. Tambourine Shake [1]\n0x1E. Tambourine Shake [2]\n0x1F. Tambourine Shake [3]\n0x20. Tambourine Shake [4]\n0x21. Tambourine Shake [5]\n0x22. Tambourine Shake [6]\n0x23. Tambourine Shake [7]\n0x24. Tambourine Shake [8]\n0x25. Tambourine Shake [9]\n0x26. Tambourine Shake [10]\n0x27. Tambourine Shake [11]\n0x28. Tambourine Shake [12]\n0x29. Tambourine Shake [13]\n0x2A. Tambourine Shake [14]\n0x2B. Tambourine Shake [15]\n0x2C. Tambourine Shake [16]\n0x2D. Tambourine Shake [17]\n0x2E. Tambourine Shake [18]\n0x2F. Tambourine Shake [19]\n0x30. Tambourine Shake [20]\n0x31. Tambourine Shake [21]\n0x32. Tambourine Shake [22]\n0x33. Tambourine Shake [23]\n0x34. Tambourine Shake [24]\n0x35. Tambourine Shake [25]\n0x36. Tambourine Shake [25*]\n0x37. Tambourine Shake [25*]\n0x38. Tambourine Shake [25*]\n0x39. Tambourine Shake [25*]\n0x3A. Tambourine Shake [25*]\n0x3B. Tambourine Shake [25*]\n0x3C. Tambourine Shake [25*]\n0x3D. Tambourine Shake [25*]\n0x3E. Tambourine Shake [25*]\n0x3F. Tambourine Shake [25*]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_3","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x06</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harp\n0x01. Harp\n0x02. Harp\n0x03. Harp ALT (Mid Only)\n0x04. Strings ALT (Attack Time: 32)\n0x05. Ocarina\n0x06. Male Choir\n0x07. Male Choir\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_18","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x06</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_8","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x07</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Lulu's Voice (Release: 248)\n0x01. Lulu's Voice (Release: 247)\n0x02. Sustain E. Guitar\n0x03. Sustain E. Guitar ALT (Attack Time: 32)\n0x04. Sustain E. Guitar ALT (Attack Time: 32)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. Strings\n0x0C. Strings\n0x0D. Solo Violin\n0x0E. Solo Violin\n0x0F. Carillon Bell (Release: 248, Non-looping) (Unused in sequence)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_5","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x08</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Banjo\n0x01. Banjo\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Pizz. Double Bass\n0x06. Harmonica\n0x07. Nylon Str. Guitar\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. \u26d4 (nullptr)\n0x0D. Solo Violin\n0x0E. Solo Violin\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_4","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x09</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Harp\n0x01. Harp\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. Strings ALT (Attack Time: 32)\n0x05. Ocarina\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_19","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x09</code>. This percussion set is referred to as \"Orchestra Kit\", however, audiobank <code>0x09</code> uses a variant with 20 less \"Timpani\" drums making it a partial \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>E5 (64)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. \u26d4 (nullptr)\n0x2C. \u26d4 (nullptr)\n0x2D. \u26d4 (nullptr)\n0x2E. \u26d4 (nullptr)\n0x2F. \u26d4 (nullptr)\n0x30. \u26d4 (nullptr)\n0x31. \u26d4 (nullptr)\n0x32. \u26d4 (nullptr)\n0x33. \u26d4 (nullptr)\n0x34. \u26d4 (nullptr)\n0x35. \u26d4 (nullptr)\n0x36. \u26d4 (nullptr)\n0x37. \u26d4 (nullptr)\n0x38. \u26d4 (nullptr)\n0x39. \u26d4 (nullptr)\n0x3A. \u26d4 (nullptr)\n0x3B. \u26d4 (nullptr)\n0x3C. \u26d4 (nullptr)\n0x3D. \u26d4 (nullptr)\n0x3E. \u26d4 (nullptr)\n0x3F. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_6","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0A</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Clarinet\n0x02. Clarinet\n0x03. Bandoneon\n0x04. Glockenspiel\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_20","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0A</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_7","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0B</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Steel Drum\n0x01. Digi Pad 04\n0x02. Nylon Str. Guitar\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_21","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0B</code>. This percussion set is referred to as \"Conga &amp; Shaker Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Conga Closed: <code>A1 (21)</code> to <code>F3 (41)</code> - Conga Open: <code>F\u266f3 (42)</code> to <code>C5 (60)</code> - Conga Slap: <code>C\u266f5 (61)</code> to <code>G\u266f6 (80)</code> - Shaker: <code>A6 (81)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Conga Closed [1]\n0x01. Conga Closed [2]\n0x02. Conga Closed [3]\n0x03. Conga Closed [4]\n0x04. Conga Closed [5]\n0x05. Conga Closed [6]\n0x06. Conga Closed [7]\n0x07. Conga Closed [8]\n0x08. Conga Closed [9]\n0x09. Conga Closed [10]\n0x0A. Conga Closed [11]\n0x0B. Conga Closed [12]\n0x0C. Conga Closed [13]\n0x0D. Conga Closed [14]\n0x0E. Conga Closed [15]\n0x0F. Conga Closed [16]\n0x10. Conga Closed [17]\n0x11. Conga Closed [18]\n0x12. Conga Closed [19]\n0x13. Conga Closed [20]\n0x14. Conga Closed [21]\n0x15. Conga Open [1]\n0x16. Conga Open [2]\n0x17. Conga Open [3]\n0x18. Conga Open [4]\n0x19. Conga Open [5]\n0x1A. Conga Open [6]\n0x1B. Conga Open [7]\n0x1C. Conga Open [8]\n0x1D. Conga Open [9]\n0x1E. Conga Open [10]\n0x1F. Conga Open [11]\n0x20. Conga Open [12]\n0x21. Conga Open [13]\n0x22. Conga Open [14]\n0x23. Conga Open [15]\n0x24. Conga Open [16]\n0x25. Conga Open [17]\n0x26. Conga Open [18]\n0x27. Conga Open [19]\n0x28. Conga Slap [1]\n0x29. Conga Slap [2]\n0x2A. Conga Slap [3]\n0x2B. Conga Slap [4]\n0x2C. Conga Slap [5]\n0x2D. Conga Slap [6]\n0x2E. Conga Slap [7]\n0x2F. Conga Slap [8]\n0x30. Conga Slap [9]\n0x31. Conga Slap [10]\n0x32. Conga Slap [11]\n0x33. Conga Slap [12]\n0x34. Conga Slap [13]\n0x35. Conga Slap [14]\n0x36. Conga Slap [15]\n0x37. Conga Slap [16]\n0x38. Conga Slap [17]\n0x39. Conga Slap [18]\n0x3A. Conga Slap [19]\n0x3B. Conga Slap [20]\n0x3C. Shaker [1]\n0x3D. Shaker [2]\n0x3E. Shaker [3]\n0x3F. Shaker [4]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0a_1","title":"Instruments (Program Name: 0x00 to 0x0A)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0C</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0A (10)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Nylon Str. Guitar\n0x01. Bandoneon\n0x02. Pizz. Double Bass\n0x03. Trumpet (G4)\n0x04. Trumpet (C5)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Cowbell\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_22","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0C</code>. This percussion set is referred to as \"Conga &amp; Shaker Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Conga Closed: <code>A1 (21)</code> to <code>F3 (41)</code> - Conga Open: <code>F\u266f3 (42)</code> to <code>C5 (60)</code> - Conga Slap: <code>C\u266f5 (61)</code> to <code>G\u266f6 (80)</code> - Shaker: <code>A6 (81)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Conga Closed [1]\n0x01. Conga Closed [2]\n0x02. Conga Closed [3]\n0x03. Conga Closed [4]\n0x04. Conga Closed [5]\n0x05. Conga Closed [6]\n0x06. Conga Closed [7]\n0x07. Conga Closed [8]\n0x08. Conga Closed [9]\n0x09. Conga Closed [10]\n0x0A. Conga Closed [11]\n0x0B. Conga Closed [12]\n0x0C. Conga Closed [13]\n0x0D. Conga Closed [14]\n0x0E. Conga Closed [15]\n0x0F. Conga Closed [16]\n0x10. Conga Closed [17]\n0x11. Conga Closed [18]\n0x12. Conga Closed [19]\n0x13. Conga Closed [20]\n0x14. Conga Closed [21]\n0x15. Conga Open [1]\n0x16. Conga Open [2]\n0x17. Conga Open [3]\n0x18. Conga Open [4]\n0x19. Conga Open [5]\n0x1A. Conga Open [6]\n0x1B. Conga Open [7]\n0x1C. Conga Open [8]\n0x1D. Conga Open [9]\n0x1E. Conga Open [10]\n0x1F. Conga Open [11]\n0x20. Conga Open [12]\n0x21. Conga Open [13]\n0x22. Conga Open [14]\n0x23. Conga Open [15]\n0x24. Conga Open [16]\n0x25. Conga Open [17]\n0x26. Conga Open [18]\n0x27. Conga Open [19]\n0x28. Conga Slap [1]\n0x29. Conga Slap [2]\n0x2A. Conga Slap [3]\n0x2B. Conga Slap [4]\n0x2C. Conga Slap [5]\n0x2D. Conga Slap [6]\n0x2E. Conga Slap [7]\n0x2F. Conga Slap [8]\n0x30. Conga Slap [9]\n0x31. Conga Slap [10]\n0x32. Conga Slap [11]\n0x33. Conga Slap [12]\n0x34. Conga Slap [13]\n0x35. Conga Slap [14]\n0x36. Conga Slap [15]\n0x37. Conga Slap [16]\n0x38. Conga Slap [17]\n0x39. Conga Slap [18]\n0x3A. Conga Slap [19]\n0x3B. Conga Slap [20]\n0x3C. Shaker [1]\n0x3D. Shaker [2]\n0x3E. Shaker [3]\n0x3F. Shaker [4]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04_3","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0D</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Djembe\n0x02. \u26d4 (nullptr)\n0x03. Bent Conga\n0x04. Gong &amp; Chimes\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0b_2","title":"Instruments (Program Name: 0x00 to 0x0B)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0E</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0B (11)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Djembe\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Piccolo\n0x06. \u26d4 (nullptr)\n0x07. Piccolo\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_23","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0E</code>. This percussion set is referred to as \"Gong &amp; Chimes Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Gong: <code>A1 (21)</code> to <code>F\u266f4 (54)</code> - Chimes: <code>G4 (55)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Gong [1]\n0x01. Gong [2]\n0x02. Gong [3]\n0x03. Gong [4]\n0x04. Gong [5]\n0x05. Gong [6]\n0x06. Gong [7]\n0x07. Gong [8]\n0x08. Gong [9]\n0x09. Gong [10]\n0x0A. Gong [11]\n0x0B. Gong [12]\n0x0C. Gong [13]\n0x0D. Gong [14]\n0x0E. Gong [15]\n0x0F. Gong [16]\n0x10. Gong [17]\n0x11. Gong [18]\n0x12. Gong [19]\n0x13. Gong [20]\n0x14. Gong [21]\n0x15. Gong [22]\n0x16. Gong [23]\n0x17. Gong [24]\n0x18. Gong [25]\n0x19. Gong [26]\n0x1A. Gong [27]\n0x1B. Gong [28]\n0x1C. Gong [29]\n0x1D. Gong [30]\n0x1E. Gong [31]\n0x1F. Gong [32]\n0x20. Gong [33]\n0x21. Gong [34]\n0x22. Chimes [1]\n0x23. Chimes [2]\n0x24. Chimes [3]\n0x25. Chimes [4]\n0x26. Chimes [5]\n0x27. Chimes [6]\n0x28. Chimes [7]\n0x29. Chimes [8]\n0x2A. Chimes [9]\n0x2B. Chimes [10]\n0x2C. Chimes [11]\n0x2D. Chimes [12]\n0x2E. Chimes [13]\n0x2F. Chimes [14]\n0x30. Chimes [15]\n0x31. Chimes [16]\n0x32. Chimes [17]\n0x33. Chimes [18]\n0x34. Chimes [19]\n0x35. Chimes [20]\n0x36. Chimes [21]\n0x37. Chimes [22]\n0x38. Chimes [23]\n0x39. Chimes [24]\n0x3A. Chimes [25]\n0x3B. Chimes [26]\n0x3C. Chimes [27]\n0x3D. Chimes [28]\n0x3E. Chimes [29]\n0x3F. Chimes [30]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_6","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x0F</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. \u26d4 (nullptr)\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. Trumpet (C5)\n0x06. Trumpet (G4)\n0x07. Tuba\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. \u26d4 (nullptr)\n0x0E. Harp\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_24","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x0F</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_7","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x10</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Oboe\n0x02. \u26d4 (nullptr)\n0x03. Bassooon\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. \u26d4 (nullptr)\n0x0E. Harp\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_9","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x11</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Chinese Gong\n0x01. Shehnai\n0x02. \u26d4 (nullptr)\n0x03. Nylon Str. Guitar ALT\n0x04. Bandoneon\n0x05. Trumpet (C5)\n0x06. Trumpet (G4)\n0x07. Tuba\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Marimba\n0x0D. Synth Strings\n0x0E. Harp\n0x0F. Piano\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_25","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x11</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_5","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x12</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Ocarina\n0x01. Trumpet (B3)\n0x02. Steel Str. Guitar\n0x03. Rawhide Drum\n0x04. Strings\n0x05. Strings\n0x06. Pizz. Strings\n0x07. Harp\n0x08. Goron Elder Son's Voice\n0x09. \u26d4 (nullptr)\n0x0A. Male Choir\n0x0B. Female Choir\n0x0C. Giants' Voice\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_8","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x13</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Fretless Bass\n0x01. Tenor Saxophone\n0x02. Muted E. Guitar\n0x03. Steel Str. Guitar\n0x04. E. Rhodes Piano\n0x05. Bent Conga\n0x06. Piano\n0x07. Steel Str. Guitar ALT (Mid/High Split: 127)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Cowbell\n0x0B. Piano ALT (Split: 29 &amp; 44, Release: 93)\n0x0C. Piano ALT (Split: 22 &amp; 44, Release: 93)\n0x0D. Lulu's Voice (Release: 248)\n0x0E. Lulu's Voice (Release: 247)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_26","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x13</code>. This percussion set is referred to as \"Drum Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Drum Kit Shaker: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Drum Kit Snare: <code>D\u266f3 (39)</code> to <code>G3 (43)</code> - Open Hi-Hat: <code>G\u266f3 (44)</code> to <code>A3 (45)</code> - Ride Cymbal: <code>A\u266f4 (46)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Drum Kit Shaker [1]\n0x11. Drum Kit Shaker [2]\n0x12. Drum Kit Snare [1]\n0x13. Drum Kit Snare [2]\n0x14. Drum Kit Snare [3]\n0x15. Drum Kit Snare [4]\n0x16. Drum Kit Snare [5]\n0x17. Open Hi-Hat [1]\n0x18. Open Hi-Hat [2]\n0x19. Ride Cymbal [1]\n0x1A. Ride Cymbal [2]\n0x1B. Ride Cymbal [3]\n0x1C. Ride Cymbal [4]\n0x1D. Ride Cymbal [5]\n0x1E. Ride Cymbal [6]\n0x1F. Ride Cymbal [7]\n0x20. Ride Cymbal [8]\n0x21. Ride Cymbal [9]\n0x22. Ride Cymbal [10]\n0x23. Ride Cymbal [11]\n0x24. Ride Cymbal [12]\n0x25. Ride Cymbal [13]\n0x26. Ride Cymbal [14]\n0x27. Ride Cymbal [15]\n0x28. Ride Cymbal [16]\n0x29. Ride Cymbal [17]\n0x2A. Ride Cymbal [18]\n0x2B. Ride Cymbal [19]\n0x2C. Ride Cymbal [20]\n0x2D. Ride Cymbal [21]\n0x2E. Ride Cymbal [22]\n0x2F. Ride Cymbal [23]\n0x30. Ride Cymbal [24]\n0x31. Ride Cymbal [25]\n0x32. Ride Cymbal [26]\n0x33. Ride Cymbal [27]\n0x34. Ride Cymbal [28]\n0x35. Ride Cymbal [29]\n0x36. Ride Cymbal [30]\n0x37. Ride Cymbal [31]\n0x38. Ride Cymbal [32]\n0x39. Ride Cymbal [33]\n0x3A. Ride Cymbal [34]\n0x3B. Ride Cymbal [35]\n0x3C. Ride Cymbal [36]\n0x3D. Ride Cymbal [37]\n0x3E. Ride Cymbal [38]\n0x3F. Ride Cymbal [39]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x05","title":"Instruments (Program Name: 0x00 to 0x05)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x14</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x05 (5)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Tabla\n0x01. Bongo &amp; Slap\n0x02. Surdo\n0x03. Leaves Brush\n0x04. Awk Bird\n0x05. African Singer\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0c_6","title":"Instruments (Program Name: 0x00 to 0x0C)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x15</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0C (12)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Fantasia\n0x01. \u26d4 (nullptr)\n0x02. EERIE WIND\n0x03. E. Rhodes Piano ALT\n0x04. OMINOUSITY\n0x05. \u26d4 (nullptr)\n0x06. Hi-Hat Noise\n0x07. E. Rhodes Piano ALT\n0x08. E. Rhodes Piano\n0x09. \u26d4 (nullptr)\n0x0A. PIT HIT 1\n0x0B. Muted E. Guitar\n0x0C. Female Choir\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x08_1","title":"Instruments (Program Name: 0x00 to 0x08)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x16</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x08 (8)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. TUNNEL RAIN\n0x01. Metal Bang\n0x02. Metal Knock\n0x03. Chip SFX\n0x04. Electric Organ\n0x05. Electric Organ\n0x06. Mystic Pad\n0x07. Velocity\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0d_1","title":"Instruments (Program Name: 0x00 to 0x0D)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x17</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0D (13)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Synth Strings\n0x01. Synth Strings ALT (Release: 235)\n0x02. ICELAND 1\n0x03. Harpsichord\n0x04. Hi-Hat Noise\n0x05. Strings\n0x06. Fantasia\n0x07. Female Choir\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. Piano\n0x0D. Piano ALT (Split: 24 &amp; 44, Release: 186)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0a_2","title":"Instruments (Program Name: 0x00 to 0x0A)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x18</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0A (10)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. \u26d4 (nullptr)\n0x02. \u26d4 (nullptr)\n0x03. \u26d4 (nullptr)\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Kagura Suzu\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_27","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x18</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_10","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x19</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. Ocarina\n0x02. Bassoon ALT (Splits: 42 &amp; 127)\n0x03. Oboe\n0x04. Solo Violin\n0x05. Harmonica\n0x06. Piccolo\n0x07. \u26d4 (nullptr)\n0x08. Steel Str. Guitar\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Female Choir\n0x0D. Male Choir\n0x0E. ELVES\n0x0F. EERIE WIND\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_28","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x19</code>. This percussion set is referred to as \"Tambourine Percussion\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Tambourine Slap: <code>A1 (21)</code> to <code>B3 (47)</code> - Tambourine Tap: <code>C4 (48)</code> to <code>C\u266f4 (49)</code> - Tambourine Shake: <code>D4 (50)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Tambourine Slap [1]\n0x01. Tambourine Slap [2]\n0x02. Tambourine Slap [3]\n0x03. Tambourine Slap [4]\n0x04. Tambourine Slap [5]\n0x05. Tambourine Slap [6]\n0x06. Tambourine Slap [7]\n0x07. Tambourine Slap [8]\n0x08. Tambourine Slap [9]\n0x09. Tambourine Slap [10]\n0x0A. Tambourine Slap [11]\n0x0B. Tambourine Slap [12]\n0x0C. Tambourine Slap [13]\n0x0D. Tambourine Slap [14]\n0x0E. Tambourine Slap [15]\n0x0F. Tambourine Slap [16]\n0x10. Tambourine Slap [17]\n0x11. Tambourine Slap [18]\n0x12. Tambourine Slap [19]\n0x13. Tambourine Slap [20]\n0x14. Tambourine Slap [21]\n0x15. Tambourine Slap [22]\n0x16. Tambourine Slap [23]\n0x17. Tambourine Slap [24]\n0x18. Tambourine Slap [25]\n0x19. Tambourine Slap [26]\n0x1A. Tambourine Slap [27]\n0x1B. Tambourine Tap [1]\n0x1C. Tambourine Tap [2]\n0x1D. Tambourine Shake [1]\n0x1E. Tambourine Shake [2]\n0x1F. Tambourine Shake [3]\n0x20. Tambourine Shake [4]\n0x21. Tambourine Shake [5]\n0x22. Tambourine Shake [6]\n0x23. Tambourine Shake [7]\n0x24. Tambourine Shake [8]\n0x25. Tambourine Shake [9]\n0x26. Tambourine Shake [10]\n0x27. Tambourine Shake [11]\n0x28. Tambourine Shake [12]\n0x29. Tambourine Shake [13]\n0x2A. Tambourine Shake [14]\n0x2B. Tambourine Shake [15]\n0x2C. Tambourine Shake [16]\n0x2D. Tambourine Shake [17]\n0x2E. Tambourine Shake [18]\n0x2F. Tambourine Shake [19]\n0x30. Tambourine Shake [20]\n0x31. Tambourine Shake [21]\n0x32. Tambourine Shake [22]\n0x33. Tambourine Shake [23]\n0x34. Tambourine Shake [24]\n0x35. Tambourine Shake [25]\n0x36. Tambourine Shake [25*]\n0x37. Tambourine Shake [25*]\n0x38. Tambourine Shake [25*]\n0x39. Tambourine Shake [25*]\n0x3A. Tambourine Shake [25*]\n0x3B. Tambourine Shake [25*]\n0x3C. Tambourine Shake [25*]\n0x3D. Tambourine Shake [25*]\n0x3E. Tambourine Shake [25*]\n0x3F. Tambourine Shake [25*]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x03_3","title":"Instruments (Program Name: 0x00 to 0x03)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1A</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x03 (3)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. OMINOUSITY\n0x01. PIT HIT 1\n0x02. Hi-Hat Noise ALT\n0x03. DANGER\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x09_8","title":"Instruments (Program Name: 0x00 to 0x09)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1B</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x09 (9)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Kagura Suzu\n0x01. Shehnai\n0x02. Metal Knock\n0x03. Banjo\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_29","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x1B</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0b_3","title":"Instruments (Program Name: 0x00 to 0x0B)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1C</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0B (11)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bouzouki\n0x01. \u26d4 (nullptr)\n0x02. Bassoon ALT (Splits: 42 &amp; 127)\n0x03. Oboe\n0x04. \u26d4 (nullptr)\n0x05. \u26d4 (nullptr)\n0x06. Piccolo\n0x07. French Horn\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0a_3","title":"Instruments (Program Name: 0x00 to 0x0A)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1D</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0A (10)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Sustain E. Guitar ALT (Attack Time: 32)\n0x01. \u26d4 (nullptr)\n0x02. \u26d4 (nullptr)\n0x03. Steel Drum\n0x04. Fretless Bass ALT (Decay Time: 511)\n0x05. Sitar\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x08_2","title":"Instruments (Program Name: 0x00 to 0x08)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1E</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x08 (8)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. OMINOUSITY\n0x01. Piano\n0x02. DANGER\n0x03. Synth Strings\n0x04. Electric Organ\n0x05. Male Choir\n0x06. Piccolo\n0x07. Lulu's Voice (Release: 248)\n0x08. Lulu's Voice (Release: 247)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x07_2","title":"Instruments (Program Name: 0x00 to 0x07)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x1F</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x07 (7)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Djembe\n0x02. Shehnai\n0x03. \u26d4 (nullptr)\n0x04. Kagura Suzu\n0x05. Surdo\n0x06. Bandoneon\n0x07. Sitar\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_11","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x20</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Fretless Bass\n0x01. Tenor Saxophone\n0x02. \u26d4 (nullptr)\n0x03. Steel Str. Guitar\n0x04. E. Rhodes Piano\n0x05. \u26d4 (nullptr)\n0x06. \u26d4 (nullptr)\n0x07. \u26d4 (nullptr)\n0x08. Electric Organ\n0x09. \u26d4 (nullptr)\n0x0A. \u26d4 (nullptr)\n0x0B. \u26d4 (nullptr)\n0x0C. Harpsichord\n0x0D. \u26d4 (nullptr)\n0x0E. Glockenspiel\n0x0F. Tambourine\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_30","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x20</code>. This percussion set is referred to as \"Drum Kit ALT\", the only difference between the \"Drum Kit\" and this percussion kit is a different bass drum sample.</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Kick Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Drum Kit Shaker: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Drum Kit Snare: <code>D\u266f3 (39)</code> to <code>G3 (43)</code> - Open Hi-Hat: <code>G\u266f3 (44)</code> to <code>A3 (45)</code> - Ride Cymbal: <code>A\u266f4 (46)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Kick Drum [1]\n0x01. Kick Drum [2]\n0x02. Kick Drum [3]\n0x03. Kick Drum [4]\n0x04. Kick Drum [5]\n0x05. Kick Drum [6]\n0x06. Kick Drum [7]\n0x07. Kick Drum [8]\n0x08. Kick Drum [9]\n0x09. Kick Drum [10]\n0x0A. Kick Drum [11]\n0x0B. Kick Drum [12]\n0x0C. Kick Drum [13]\n0x0D. Kick Drum [14]\n0x0E. Kick Drum [15]\n0x0F. Kick Drum [16]\n0x10. Drum Kit Shaker [1]\n0x11. Drum Kit Shaker [2]\n0x12. Drum Kit Snare [1]\n0x13. Drum Kit Snare [2]\n0x14. Drum Kit Snare [3]\n0x15. Drum Kit Snare [4]\n0x16. Drum Kit Snare [5]\n0x17. Open Hi-Hat [1]\n0x18. Open Hi-Hat [2]\n0x19. Ride Cymbal [1]\n0x1A. Ride Cymbal [2]\n0x1B. Ride Cymbal [3]\n0x1C. Ride Cymbal [4]\n0x1D. Ride Cymbal [5]\n0x1E. Ride Cymbal [6]\n0x1F. Ride Cymbal [7]\n0x20. Ride Cymbal [8]\n0x21. Ride Cymbal [9]\n0x22. Ride Cymbal [10]\n0x23. Ride Cymbal [11]\n0x24. Ride Cymbal [12]\n0x25. Ride Cymbal [13]\n0x26. Ride Cymbal [14]\n0x27. Ride Cymbal [15]\n0x28. Ride Cymbal [16]\n0x29. Ride Cymbal [17]\n0x2A. Ride Cymbal [18]\n0x2B. Ride Cymbal [19]\n0x2C. Ride Cymbal [20]\n0x2D. Ride Cymbal [21]\n0x2E. Ride Cymbal [22]\n0x2F. Ride Cymbal [23]\n0x30. Ride Cymbal [24]\n0x31. Ride Cymbal [25]\n0x32. Ride Cymbal [26]\n0x33. Ride Cymbal [27]\n0x34. Ride Cymbal [28]\n0x35. Ride Cymbal [29]\n0x36. Ride Cymbal [30]\n0x37. Ride Cymbal [31]\n0x38. Ride Cymbal [32]\n0x39. Ride Cymbal [33]\n0x3A. Ride Cymbal [34]\n0x3B. Ride Cymbal [35]\n0x3C. Ride Cymbal [36]\n0x3D. Ride Cymbal [37]\n0x3E. Ride Cymbal [38]\n0x3F. Ride Cymbal [39]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_12","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x21</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. Female Choir\n0x03. Bassoon ALT (Split: 42 &amp; 127)\n0x04. French Horn\n0x05. Trumpet (C5)\n0x06. Trumpet (G4)\n0x07. Tuba\n0x08. Glockenspiel\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. Giant Voice\n0x0E. Harp\n0x0F. Male Choir\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_31","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x21</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00","title":"Instruments (Program Name: 0x00)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x22</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0f_13","title":"Instruments (Program Name: 0x00 to 0x0F)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x23</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0F (15)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. Clarinet\n0x03. Bassoon ALT (Split: 42 &amp; 127)\n0x04. French Horn\n0x05. Trumpet (C5)\n0x06. Trumpet (G4)\n0x07. Tuba\n0x08. \u26d4 (nullptr)\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Pizz. Strings\n0x0D. Shehnai\n0x0E. Harp\n0x0F. Chinese Gong\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_32","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x23</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_9","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x24</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Fretless Bass\n0x02. Tenor Saxophone\n0x03. Steel Str. Guitar\n0x04. Tambourine\n0x05. Trumpet (G4)\n0x06. Piano\n0x07. Bandoneon\n0x08. Solo Violin\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. \u26d4 (nullptr)\n0x0D. Lulu's Voice (Release: 248)\n0x0E. Lulu's Voice (Release: 247)\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_33","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x24</code>. This percussion set is referred to as \"Drum Kit ALT\", the only difference between the \"Drum Kit\" and this percussion kit is a different bass drum sample.</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Kick Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Drum Kit Shaker: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Drum Kit Snare: <code>D\u266f3 (39)</code> to <code>G3 (43)</code> - Open Hi-Hat: <code>G\u266f3 (44)</code> to <code>A3 (45)</code> - Ride Cymbal: <code>A\u266f4 (46)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Kick Drum [1]\n0x01. Kick Drum [2]\n0x02. Kick Drum [3]\n0x03. Kick Drum [4]\n0x04. Kick Drum [5]\n0x05. Kick Drum [6]\n0x06. Kick Drum [7]\n0x07. Kick Drum [8]\n0x08. Kick Drum [9]\n0x09. Kick Drum [10]\n0x0A. Kick Drum [11]\n0x0B. Kick Drum [12]\n0x0C. Kick Drum [13]\n0x0D. Kick Drum [14]\n0x0E. Kick Drum [15]\n0x0F. Kick Drum [16]\n0x10. Drum Kit Shaker [1]\n0x11. Drum Kit Shaker [2]\n0x12. Drum Kit Snare [1]\n0x13. Drum Kit Snare [2]\n0x14. Drum Kit Snare [3]\n0x15. Drum Kit Snare [4]\n0x16. Drum Kit Snare [5]\n0x17. Open Hi-Hat [1]\n0x18. Open Hi-Hat [2]\n0x19. Ride Cymbal [1]\n0x1A. Ride Cymbal [2]\n0x1B. Ride Cymbal [3]\n0x1C. Ride Cymbal [4]\n0x1D. Ride Cymbal [5]\n0x1E. Ride Cymbal [6]\n0x1F. Ride Cymbal [7]\n0x20. Ride Cymbal [8]\n0x21. Ride Cymbal [9]\n0x22. Ride Cymbal [10]\n0x23. Ride Cymbal [11]\n0x24. Ride Cymbal [12]\n0x25. Ride Cymbal [13]\n0x26. Ride Cymbal [14]\n0x27. Ride Cymbal [15]\n0x28. Ride Cymbal [16]\n0x29. Ride Cymbal [17]\n0x2A. Ride Cymbal [18]\n0x2B. Ride Cymbal [19]\n0x2C. Ride Cymbal [20]\n0x2D. Ride Cymbal [21]\n0x2E. Ride Cymbal [22]\n0x2F. Ride Cymbal [23]\n0x30. Ride Cymbal [24]\n0x31. Ride Cymbal [25]\n0x32. Ride Cymbal [26]\n0x33. Ride Cymbal [27]\n0x34. Ride Cymbal [28]\n0x35. Ride Cymbal [29]\n0x36. Ride Cymbal [30]\n0x37. Ride Cymbal [31]\n0x38. Ride Cymbal [32]\n0x39. Ride Cymbal [33]\n0x3A. Ride Cymbal [34]\n0x3B. Ride Cymbal [35]\n0x3C. Ride Cymbal [36]\n0x3D. Ride Cymbal [37]\n0x3E. Ride Cymbal [38]\n0x3F. Ride Cymbal [39]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x0e_10","title":"Instruments (Program Name: 0x00 to 0x0E)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x25</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x0E (14)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Piccolo\n0x01. Oboe\n0x02. French Horn\n0x03. Steel Str. Guitar\n0x04. Tambourine\n0x05. Trumpet (G4)\n0x06. Piano\n0x07. Bandoneon\n0x08. Solo Violin\n0x09. \u26d4 (nullptr)\n0x0A. Strings\n0x0B. Strings\n0x0C. Female Choir\n0x0D. \u26d4 (nullptr)\n0x0E. Harp\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#drums-program-name-0x7f_34","title":"Drums (Program Name: 0x7F)","text":"<p>Below is a list of the drums inside of audiobank <code>0x25</code>. This percussion set is referred to as \"Orchestra Kit\".</p> <p>You can access these drums when using this audiobank using MIDI program number(s): <code>0x7F (127)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>Here is a list of note ranges for the drums: - Concert Bass Drum: <code>A1 (21)</code> to <code>C3 (36)</code> - Orchestra Snare Low: <code>C\u266f3 (37)</code> to <code>D3 (38)</code> - Orchestra Snare High: <code>D\u266f3 (39)</code> to <code>F3 (41)</code> - Crash Cymbal: <code>F\u266f3 (42)</code> to <code>F4 (53)</code> - Timpani: <code>F\u266f4 (54)</code> to <code>C7 (84)</code></p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Drum List: <pre><code>0x00. Concert Bass Drum [1]\n0x01. Concert Bass Drum [2]\n0x02. Concert Bass Drum [3]\n0x03. Concert Bass Drum [4]\n0x04. Concert Bass Drum [5]\n0x05. Concert Bass Drum [6]\n0x06. Concert Bass Drum [7]\n0x07. Concert Bass Drum [8]\n0x08. Concert Bass Drum [9]\n0x09. Concert Bass Drum [10]\n0x0A. Concert Bass Drum [11]\n0x0B. Concert Bass Drum [12]\n0x0C. Concert Bass Drum [13]\n0x0D. Concert Bass Drum [14]\n0x0E. Concert Bass Drum [15]\n0x0F. Concert Bass Drum [16]\n0x10. Orchestra Snare Low [1]\n0x11. Orchestra Snare Low [2]\n0x12. Orchestra Snare High [1]\n0x13. Orchestra Snare High [2]\n0x14. Orchestra Snare High [3]\n0x15. Crash Cymbal [1]\n0x16. Crash Cymbal [2]\n0x17. Crash Cymbal [3]\n0x18. Crash Cymbal [4]\n0x19. Crash Cymbal [5]\n0x1A. Crash Cymbal [6]\n0x1B. Crash Cymbal [7]\n0x1C. Crash Cymbal [8]\n0x1D. Crash Cymbal [9]\n0x1E. Crash Cymbal [10]\n0x1F. Crash Cymbal [11]\n0x20. Crash Cymbal [12]\n0x21. Timpani [1]\n0x22. Timpani [2]\n0x23. Timpani [3]\n0x24. Timpani [4]\n0x25. Timpani [5]\n0x26. Timpani [6]\n0x27. Timpani [7]\n0x28. Timpani [8]\n0x29. Timpani [9]\n0x2A. Timpani [10]\n0x2B. Timpani [11]\n0x2C. Timpani [12]\n0x2D. Timpani [13]\n0x2E. Timpani [14]\n0x2F. Timpani [15]\n0x30. Timpani [16]\n0x31. Timpani [17]\n0x32. Timpani [18]\n0x33. Timpani [19]\n0x34. Timpani [20]\n0x35. Timpani [21]\n0x36. Timpani [22]\n0x37. Timpani [23]\n0x38. Timpani [24]\n0x39. Timpani [25]\n0x3A. Timpani [26]\n0x3B. Timpani [27]\n0x3C. Timpani [28]\n0x3D. Timpani [29]\n0x3E. Timpani [30]\n0x3F. Timpani [31]\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04_4","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x26</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Bent Conga\n0x01. Conga &amp; Slap\n0x02. Cuica\n0x03. Bass Marimba\n0x04. Bass Marimba\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x07_3","title":"Instruments (Program Name: 0x00 to 0x07)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x27</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x07 (7)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. \u26d4 (nullptr)\n0x01. Djembe\n0x02. Shehnai\n0x03. \u26d4 (nullptr)\n0x04. Kagura Suzu\n0x05. Surdo\n0x06. Bandoneon\n0x07. Sitar\n</code></pre></p>"},{"location":"vanilla-reference/audiobanks/#instruments-program-name-0x00-to-0x04_5","title":"Instruments (Program Name: 0x00 to 0x04)","text":"<p>Below is a list of the instruments inside of audiobank <code>0x28</code>.</p> <p>You can access these instruments when using this audiobank using MIDI program number(s): <code>0x00 (0)</code> to <code>0x04 (4)</code> </p> <p>Program Numbers</p> <p>Some DAWs start with program number <code>0</code>, and others start with program number <code>1</code>; because of this you may need to offset your program number assignment by a value of <code>1</code>.</p> <p>The list is structured and named like so: <code>Pointer index in HEX: Name of SFX</code></p> <p>Instrument List: <pre><code>0x00. Junk [1]\n0x01. Junk [2]\n0x02. Junk [3]\n0x03. Junk [4]\n0x04. Junk [5]\n</code></pre></p>"},{"location":"vanilla-reference/samples/","title":"Sample Reference","text":""},{"location":"vanilla-reference/samples/#sample-reference","title":"Sample Reference","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul> <p>Below is a list containing all of the samples in the Ocarina of Time and Majora's Mask ROMs in decimal and hexadecimal. Instrument samples are organized using GM<sup>1</sup> instrument program number specification going from the lowest instrument sample to highest instrument sample for each instrument. Some instruments however do not fit into GM, so they are placed in the table where they would most likely fit instead.</p> Ocarina of Time SamplesMajora's Mask Samples <ol> <li> <p>For more information on General MIDI specification, please visit the Wikipedia article on it, or visit the midi.org specification page on it.\u00a0\u21a9</p> </li> </ol>"},{"location":"vanilla-reference/samples/#instrument-samples","title":"Instrument Samples","text":"<p>placeholder</p>"},{"location":"vanilla-reference/samples/#drum-samples","title":"Drum Samples","text":"<p>placeholder</p>"},{"location":"vanilla-reference/samples/#sound-effect-samples","title":"Sound Effect Samples","text":"<p>placeholder</p>"},{"location":"vanilla-reference/samples/#instrument-samples_1","title":"Instrument Samples","text":"Sample Names to Possibly Be Changed <p><code>Giants' Voice</code> to <code>CARTOON, YELL - FUNNY TARZAN YELL 01</code> <code>Metal Bang</code> to <code>CARTOON, HIT - BIG, HEAVY METALLIC HIT</code></p> <p>Below is a list of instrument samples located in audiobanks <code>0x03</code> to <code>0x27</code>. Audiobank <code>0x28</code> does not contain any useful sample data so it has been omitted.</p> Instrument Sample Table Sample Name Sample Address (DEC) Sample Address (HEX) Audiotable Piano Low <code>4165648</code> <code>0x003F9010</code> <code>ATNUM 1</code> Piano Mid <code>4196832</code> <code>0x004009E0</code> <code>ATNUM 1</code> Piano High <code>2817232</code> <code>0x002AFCD0</code> <code>ATNUM 1</code> E. Rhodes Piano Low <code>4577744</code> <code>0x0045D9D0</code> <code>ATNUM 1</code> E. Rhodes Piano Mid <code>4589792</code> <code>0x0046D8E0</code> <code>ATNUM 1</code> Harpsichord <code>5106448</code> <code>0x004DEB10</code> <code>ATNUM 1</code> Glockenspiel <code>4014816</code> <code>0x003D42E0</code> <code>ATNUM 1</code> Marimba Mid <code>5321248</code> <code>0x00513220</code> <code>ATNUM 1</code> Marimba High <code>5331136</code> <code>0x005158C0</code> <code>ATNUM 1</code> Reverb Marimba <code>34352</code> <code>0x00008630</code> <code>ATNUM 2</code> Carillon Bell <code>5366464</code> <code>0x0051E2C0</code> <code>ATNUM 1</code> Electric Organ <code>4720128</code> <code>0x00480600</code> <code>ATNUM 1</code> Harmonica <code>4413472</code> <code>0x00435820</code> <code>ATNUM 1</code> Bandoneon <code>2603312</code> <code>0x0027B930</code> <code>ATNUM 1</code> Nylon Str. Guitar Mid <code>4422352</code> <code>0x00437AD0</code> <code>ATNUM 1</code> Nylon Str. Guitar High <code>4438832</code> <code>0x0043BB30</code> <code>ATNUM 1</code> Steel Str. Guitar Mid <code>2707520</code> <code>0x00295040</code> <code>ATNUM 1</code> Steel Str. Guitar High <code>4137424</code> <code>0x003F21D0</code> <code>ATNUM 1</code> Sustain E. Guitar Low <code>5339728</code> <code>0x00517A50</code> <code>ATNUM 1</code> Sustain E. Guitar Mid <code>5349936</code> <code>0x0051A230</code> <code>ATNUM 1</code> Sustain E. Guitar High <code>5358576</code> <code>0x0051C3F0</code> <code>ATNUM 1</code> Muted E. Guitar <code>4663536</code> <code>0x004728F0</code> <code>ATNUM 1</code> Pizz. Double Bass <code>4481440</code> <code>0x004461A0</code> <code>ATNUM 1</code> Fretless Bass <code>2844016</code> <code>0x002B6570</code> <code>ATNUM 1</code> Solo Violin <code>4235680</code> <code>0x0040A1A0</code> <code>ATNUM 1</code> Strings Low <code>4296960</code> <code>0x00419100</code> <code>ATNUM 1</code> Strings Mid <code>4317472</code> <code>0x0041E120</code> <code>ATNUM 1</code> Strings High <code>4335568</code> <code>0x004227D0</code> <code>ATNUM 1</code> Pizz. Strings Mid <code>4455008</code> <code>0x0043FA60</code> <code>ATNUM 1</code> Pizz. Strings High <code>4468000</code> <code>0x00442D20</code> <code>ATNUM 1</code> Harp Mid <code>3999280</code> <code>0x003D0630</code> <code>ATNUM 1</code> Harp High <code>2621536</code> <code>0x00280060</code> <code>ATNUM 1</code> Synth Strings <code>4688928</code> <code>0x00478C20</code> <code>ATNUM 1</code> Female Choir Mid <code>3936032</code> <code>0x003C0F20</code> <code>ATNUM 1</code> Female Choir High <code>3965936</code> <code>0x003C83F0</code> <code>ATNUM 1</code> Male Choir Low <code>4732448</code> <code>0x00483620</code> <code>ATNUM 1</code> Male Choir Mid <code>4753840</code> <code>0x004889B0</code> <code>ATNUM 1</code> Lulu's Voice <code>2639248</code> <code>0x00284590</code> <code>ATNUM 1</code> Goron Elder Son's Voice <code>2851552</code> <code>0x002B82E0</code> <code>ATNUM 1</code> Giants' Voice <code>2864912</code> <code>0x002BB710</code> <code>ATNUM 1</code> Trumpet (C5-72) <code>4387024</code> <code>0x0042F0D0</code> <code>ATNUM 1</code> Trumpet (G4-67) <code>4146112</code> <code>0x003F43C0</code> <code>ATNUM 1</code> Trumpet (B3-59) <code>2730224</code> <code>0x0029A8F0</code> <code>ATNUM 1</code> Tuba <code>4401328</code> <code>0x004328B0</code> <code>ATNUM 1</code> French Horn <code>4355952</code> <code>0x00427770</code> <code>ATNUM 1</code> Tenor Saxophone Low <code>4125376</code> <code>0x003EF2C0</code> <code>ATNUM 1</code> Tenor Saxophone Mid <code>4130688</code> <code>0x003F0780</code> <code>ATNUM 1</code> Oboe <code>4351168</code> <code>0x004264C0</code> <code>ATNUM 1</code> Bassoon Low <code>4449632</code> <code>0x0043E560</code> <code>ATNUM 1</code> Bassoon Mid <code>5136544</code> <code>0x004E60A0</code> <code>ATNUM 1</code> Clarinet <code>5162576</code> <code>0x004EC650</code> <code>ATNUM 1</code> Piccolo <code>2646016</code> <code>0x00286000</code> <code>ATNUM 1</code> Ocarina <code>2590384</code> <code>0x002786B0</code> <code>ATNUM 1</code> Digi Pad 04 <code>5415520</code> <code>0x0052A260</code> <code>ATNUM 1</code> Mystic Pad <code>4918480</code> <code>0x004B0CD0</code> <code>ATNUM 1</code> Velocity (MC-202) <code>4933952</code> <code>0x004B4940</code> <code>ATNUM 1</code> Chip SFX <code>4918176</code> <code>0x004B0BA0</code> <code>ATNUM 1</code> Fantasia <code>4497712</code> <code>0x0044A130</code> <code>ATNUM 1</code> ELVES <code>5137904</code> <code>0x004E65F0</code> <code>ATNUM 1</code> ICELAND 1 <code>5063216</code> <code>0x004D4230</code> <code>ATNUM 1</code> OMINOUSITY <code>4606320</code> <code>0x00464970</code> <code>ATNUM 1</code> DANGER <code>4668944</code> <code>0x00473E10</code> <code>ATNUM 1</code> TUNNEL RAIN <code>4872064</code> <code>0x004A5780</code> <code>ATNUM 1</code> EERIE WIND <code>4530384</code> <code>0x004520D0</code> <code>ATNUM 1</code> PIT HIT 1 <code>4645696</code> <code>0x0046E340</code> <code>ATNUM 1</code> African Vocal Phrase 2 <code>4833120</code> <code>0x0049BF60</code> <code>ATNUM 1</code> Awk Bird Low <code>4819792</code> <code>0x00498B50</code> <code>ATNUM 1</code> Awk Bird Mid <code>4826736</code> <code>0x0049A670</code> <code>ATNUM 1</code> Sitar <code>5174848</code> <code>0x004EF640</code> <code>ATNUM 1</code> Banjo Low <code>5190720</code> <code>0x004F3440</code> <code>ATNUM 1</code> Banjo Mid <code>5202560</code> <code>0x004F6280</code> <code>ATNUM 1</code> Bouzouki Low <code>4941328</code> <code>0x004B6610</code> <code>ATNUM 1</code> Bouzouki Mid <code>4955360</code> <code>0x004B9CE0</code> <code>ATNUM 1</code> Shehnai <code>5165632</code> <code>0x004ED240</code> <code>ATNUM 1</code> Cowbell <code>5246928</code> <code>0x00500FD0</code> <code>ATNUM 1</code> Metal Knock <code>4910880</code> <code>0x004AEF20</code> <code>ATNUM 1</code> Steel Drum Mid <code>5386000</code> <code>0x00522F10</code> <code>ATNUM 1</code> Steel Drum High <code>5404442</code> <code>0x00527B70</code> <code>ATNUM 1</code> Surdo <code>2664080</code> <code>0x0028A690</code> <code>ATNUM 1</code> Tabla Mid <code>4777056</code> <code>0x0048E460</code> <code>ATNUM 1</code> Tabla High <code>4788368</code> <code>0x00491090</code> <code>ATNUM 1</code> Rawhide Drum <code>2693024</code> <code>0x002917A0</code> <code>ATNUM 1</code> Djembe Open <code>4973968</code> <code>0x004BE590</code> <code>ATNUM 1</code> Djembe Slap <code>4978096</code> <code>0x004BF5B0</code> <code>ATNUM 1</code> Djembe Muted <code>4984224</code> <code>0x004C0DA0</code> <code>ATNUM 1</code> Hi-Hat Noise <code>4631440</code> <code>0x0046AB90</code> <code>ATNUM 1</code> Chinese Gong Low <code>5250192</code> <code>0x00501C90</code> <code>ATNUM 1</code> Chiense Gong Mid <code>2770752</code> <code>0x002A4740</code> <code>ATNUM 1</code> Chinese Gong High <code>5286464</code> <code>0x0050AA40</code> <code>ATNUM 1</code> Gong <code>4988096</code> <code>0x004C1CC0</code> <code>ATNUM 1</code> Chimes <code>5030384</code> <code>0x004CC1F0</code> <code>ATNUM 1</code> Kagura Suzu <code>4111008</code> <code>0x003EBAA0</code> <code>ATNUM 1</code> Metal Bang <code>4897088</code> <code>0x004AB940</code> <code>ATNUM 1</code> Bongo &amp; Slap Low <code>4800112</code> <code>0x00493E70</code> <code>ATNUM 1</code> Bongo &amp; Slap Mid <code>4805184</code> <code>0x00495240</code> <code>ATNUM 1</code> Bent Conga <code>5053680</code> <code>0x004D1CF0</code> <code>ATNUM 1</code> Bent Conga <code>0</code> <code>0x00000000</code> <code>ATNUM 2</code> Leaves Brush <code>4810256</code> <code>0x00496610</code> <code>ATNUM 1</code> Tambourine Slap <code>2674592</code> <code>0x0028CFA0</code> <code>ATNUM 1</code> Tambourine Tap <code>4143488</code> <code>0x003F3980</code> <code>ATNUM 1</code> Tambourine Shake <code>2683504</code> <code>0x0028F270</code> <code>ATNUM 1</code> Cuica Open <code>29392</code> <code>0x000072D0</code> <code>ATNUM 2</code> Cuica Mute <code>31600</code> <code>0x00007B70</code> <code>ATNUM 2</code>"},{"location":"vanilla-reference/samples/#drum-samples_1","title":"Drum Samples","text":"<p>placeholder</p> Drum Sample Table Sample Name Sample Address (DEC) Sample Address (HEX) Audiotable a <code>0</code> <code>0x00</code> <code>ATNUM 1</code>"},{"location":"vanilla-reference/samples/#sound-effect-samples_1","title":"Sound Effect Samples","text":"<p>placeholder</p> Sound Effect Sample Table Sample Name Sample Address (DEC) Sample Address (HEX) Audiotable a <code>0</code> <code>0x00</code> <code>ATNUM 1</code>"},{"location":"vanilla-reference/seq-commands/","title":"Sequence Commands","text":"<ul> <li> <p> \u00a0THIS PAGE IS A WIP</p> <p>This page is a work in progress and requires further editing.</p> </li> </ul>"},{"location":"vanilla-reference/seq-commands/#pitch-bend-2-semitones-0xee","title":"Pitch Bend (\u00b12 Semitones) <code>0xEE</code>","text":"C <pre><code>f32 gBendPitchTwoSemitonesFrequencies[] = {\n    0.890899f, 0.890899f, 0.89171f,  0.892521f, 0.893333f, 0.894146f,\n    0.89496f,  0.895774f, 0.89659f,  0.897406f, 0.898222f, 0.89904f,\n    0.899858f, 0.900677f, 0.901496f, 0.902317f, 0.903138f, 0.90396f,\n    0.904783f, 0.905606f, 0.90643f,  0.907255f, 0.908081f, 0.908907f,\n    0.909734f, 0.910562f, 0.911391f, 0.91222f,  0.91305f,  0.913881f,\n    0.914713f, 0.915545f, 0.916379f, 0.917213f, 0.918047f, 0.918883f,\n    0.919719f, 0.920556f, 0.921394f, 0.922232f, 0.923072f, 0.923912f,\n    0.924752f, 0.925594f, 0.926436f, 0.927279f, 0.928123f, 0.928968f,\n    0.929813f, 0.93066f,  0.931507f, 0.932354f, 0.933203f, 0.934052f,\n    0.934902f, 0.935753f, 0.936604f, 0.937457f, 0.93831f,  0.939164f,\n    0.940019f, 0.940874f, 0.94173f,  0.942587f, 0.943445f, 0.944304f,\n    0.945163f, 0.946023f, 0.946884f, 0.947746f, 0.948608f, 0.949472f,\n    0.950336f, 0.951201f, 0.952066f, 0.952933f, 0.9538f,   0.954668f,\n    0.955537f, 0.956406f, 0.957277f, 0.958148f, 0.95902f,  0.959893f,\n    0.960766f, 0.961641f, 0.962516f, 0.963392f, 0.964268f, 0.965146f,\n    0.966024f, 0.966903f, 0.967783f, 0.968664f, 0.969546f, 0.970428f,\n    0.971311f, 0.972195f, 0.97308f,  0.973965f, 0.974852f, 0.975739f,\n    0.976627f, 0.977516f, 0.978405f, 0.979296f, 0.980187f, 0.981079f,\n    0.981972f, 0.982865f, 0.98376f,  0.984655f, 0.985551f, 0.986448f,\n    0.987346f, 0.988244f, 0.989144f, 0.990044f, 0.990945f, 0.991847f,\n    0.992749f, 0.993653f, 0.994557f, 0.995462f, 0.996368f, 0.997275f,\n    0.998182f, 0.999091f, 1.0f,      1.00091f,  1.001821f, 1.002733f,\n    1.003645f, 1.004559f, 1.005473f, 1.006388f, 1.007304f, 1.00822f,\n    1.009138f, 1.010056f, 1.010975f, 1.011896f, 1.012816f, 1.013738f,\n    1.014661f, 1.015584f, 1.016508f, 1.017433f, 1.018359f, 1.019286f,\n    1.020214f, 1.021142f, 1.022071f, 1.023002f, 1.023933f, 1.024864f,\n    1.025797f, 1.026731f, 1.027665f, 1.0286f,   1.029536f, 1.030473f,\n    1.031411f, 1.03235f,  1.033289f, 1.03423f,  1.035171f, 1.036113f,\n    1.037056f, 1.038f,    1.038944f, 1.03989f,  1.040836f, 1.041783f,\n    1.042731f, 1.04368f,  1.04463f,  1.045581f, 1.046532f, 1.047485f,\n    1.048438f, 1.049392f, 1.050347f, 1.051303f, 1.05226f,  1.053217f,\n    1.054176f, 1.055135f, 1.056095f, 1.057056f, 1.058018f, 1.058981f,\n    1.059945f, 1.06091f,  1.061875f, 1.062842f, 1.063809f, 1.064777f,\n    1.065746f, 1.066716f, 1.067687f, 1.068658f, 1.069631f, 1.070604f,\n    1.071578f, 1.072554f, 1.07353f,  1.074507f, 1.075485f, 1.076463f,\n    1.077443f, 1.078424f, 1.079405f, 1.080387f, 1.08137f,  1.082355f,\n    1.08334f,  1.084325f, 1.085312f, 1.0863f,   1.087289f, 1.088278f,\n    1.089268f, 1.09026f,  1.091252f, 1.092245f, 1.093239f, 1.094234f,\n    1.09523f,  1.096226f, 1.097224f, 1.098223f, 1.099222f, 1.100222f,\n    1.101224f, 1.102226f, 1.103229f, 1.104233f, 1.105238f, 1.106244f,\n    1.10725f,  1.108258f, 1.109267f, 1.110276f, 1.111287f, 1.112298f,\n    1.11331f,  1.114323f, 1.115337f, 1.116352f, 1.117368f, 1.118385f,\n    1.119403f, 1.120422f, 1.121441f, 1.122462f,\n};\n</code></pre>"},{"location":"vanilla-reference/seq-commands/#pitch-bend-12-semitones-0xd3","title":"Pitch Bend (\u00b112 Semitones) <code>0xD3</code>","text":"C <pre><code>f32 gBendPitchOneOctaveFrequencies[] = {\n    0.5f,      0.5f,      0.502736f, 0.505488f, 0.508254f, 0.511036f,\n    0.513833f, 0.516645f, 0.519472f, 0.522315f, 0.525174f, 0.528048f,\n    0.530938f, 0.533843f, 0.536765f, 0.539702f, 0.542656f, 0.545626f,\n    0.548612f, 0.551614f, 0.554633f, 0.557669f, 0.560721f, 0.563789f,\n    0.566875f, 0.569977f, 0.573097f, 0.576233f, 0.579387f, 0.582558f,\n    0.585746f, 0.588951f, 0.592175f, 0.595415f, 0.598674f, 0.60195f,\n    0.605245f, 0.608557f, 0.611888f, 0.615236f, 0.618603f, 0.621989f,\n    0.625393f, 0.628815f, 0.632257f, 0.635717f, 0.639196f, 0.642694f,\n    0.646212f, 0.649748f, 0.653304f, 0.65688f,  0.660475f, 0.664089f,\n    0.667724f, 0.671378f, 0.675052f, 0.678747f, 0.682461f, 0.686196f,\n    0.689952f, 0.693727f, 0.697524f, 0.701341f, 0.70518f,  0.709039f,\n    0.712919f, 0.716821f, 0.720744f, 0.724689f, 0.728655f, 0.732642f,\n    0.736652f, 0.740684f, 0.744737f, 0.748813f, 0.752911f, 0.757031f,\n    0.761175f, 0.76534f,  0.769529f, 0.77374f,  0.777975f, 0.782232f,\n    0.786513f, 0.790818f, 0.795146f, 0.799497f, 0.803873f, 0.808272f,\n    0.812696f, 0.817144f, 0.821616f, 0.826112f, 0.830633f, 0.835179f,\n    0.83975f,  0.844346f, 0.848966f, 0.853613f, 0.858284f, 0.862982f,\n    0.867704f, 0.872453f, 0.877228f, 0.882029f, 0.886856f, 0.891709f,\n    0.89659f,  0.901496f, 0.90643f,  0.911391f, 0.916379f, 0.921394f,\n    0.926436f, 0.931507f, 0.936604f, 0.94173f,  0.946884f, 0.952066f,\n    0.957277f, 0.962516f, 0.967783f, 0.97308f,  0.978405f, 0.98376f,\n    0.989144f, 0.994557f, 1.0f,      1.005473f, 1.010975f, 1.016508f,\n    1.022071f, 1.027665f, 1.033289f, 1.038944f, 1.04463f,  1.050347f,\n    1.056095f, 1.061875f, 1.067687f, 1.07353f,  1.079405f, 1.085312f,\n    1.091252f, 1.097224f, 1.103229f, 1.109267f, 1.115337f, 1.121441f,\n    1.127579f, 1.13375f,  1.139955f, 1.146193f, 1.152466f, 1.158773f,\n    1.165115f, 1.171491f, 1.177903f, 1.184349f, 1.190831f, 1.197348f,\n    1.203901f, 1.210489f, 1.217114f, 1.223775f, 1.230473f, 1.237207f,\n    1.243978f, 1.250786f, 1.257631f, 1.264514f, 1.271434f, 1.278392f,\n    1.285389f, 1.292423f, 1.299497f, 1.306608f, 1.313759f, 1.320949f,\n    1.328178f, 1.335447f, 1.342756f, 1.350104f, 1.357493f, 1.364922f,\n    1.372392f, 1.379903f, 1.387455f, 1.395048f, 1.402683f, 1.41036f,\n    1.418078f, 1.425839f, 1.433642f, 1.441488f, 1.449377f, 1.457309f,\n    1.465285f, 1.473304f, 1.481367f, 1.489474f, 1.497626f, 1.505822f,\n    1.514063f, 1.522349f, 1.530681f, 1.539058f, 1.547481f, 1.55595f,\n    1.564465f, 1.573027f, 1.581636f, 1.590292f, 1.598995f, 1.607746f,\n    1.616545f, 1.625392f, 1.634287f, 1.643231f, 1.652224f, 1.661266f,\n    1.670358f, 1.6795f,   1.688691f, 1.697933f, 1.707225f, 1.716569f,\n    1.725963f, 1.735409f, 1.744906f, 1.754456f, 1.764058f, 1.773712f,\n    1.783419f, 1.793179f, 1.802993f, 1.81286f,  1.822782f, 1.832757f,\n    1.842788f, 1.852873f, 1.863013f, 1.873209f, 1.883461f, 1.893768f,\n    1.904132f, 1.914553f, 1.925031f, 1.935567f, 1.946159f, 1.95681f,\n    1.96752f,  1.978287f, 1.989114f, 2.0f,\n};\n</code></pre>"}]}